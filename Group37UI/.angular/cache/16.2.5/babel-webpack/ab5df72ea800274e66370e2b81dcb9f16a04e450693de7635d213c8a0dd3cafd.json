{"ast":null,"code":"import axios from 'axios'; // Import Axios\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction QuestionsDashboardComponent_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(question_r2);\n  }\n}\nfunction QuestionsDashboardComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Your Profile Score: \", ctx_r1.profileScore, \"\");\n  }\n}\nexport class QuestionsDashboardComponent {\n  constructor() {\n    this.questions = [];\n    this.profileScore = null;\n  }\n  fetchQuestionsAndCalculateScore() {\n    // Replace 'your_openai_api_endpoint' with the actual API endpoint\n    const openaiEndpoint = 'your_openai_api_endpoint';\n    axios.get(openaiEndpoint).then(response => {\n      const data = response.data;\n      if (data.questions && data.questions.length > 0) {\n        this.questions = data.questions;\n      } else {\n        // If no questions received from API, provide dummy questions\n        this.questions = ['What is your favorite book?', 'What is your dream vacation destination?', 'Describe your ideal partner.', 'What are your hobbies and interests?', 'Share a memorable life experience.'];\n      }\n      // Calculate profile score \n      this.calculateProfileScore();\n    }).catch(error => {\n      console.error('Error fetching questions:', error);\n    });\n  }\n  calculateProfileScore() {\n    this.profileScore = 75;\n  }\n  static #_ = this.ɵfac = function QuestionsDashboardComponent_Factory(t) {\n    return new (t || QuestionsDashboardComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuestionsDashboardComponent,\n    selectors: [[\"app-questions-dashboard\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"container\", \"questions-container\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"mt-3\", 4, \"ngIf\"], [1, \"list-group-item\"], [1, \"mt-3\"]],\n    template: function QuestionsDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Answer These Questions to get a sentiment score and Profile score\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ul\", 1);\n        i0.ɵɵtemplate(4, QuestionsDashboardComponent_li_4_Template, 2, 1, \"li\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function QuestionsDashboardComponent_Template_button_click_5_listener() {\n          return ctx.fetchQuestionsAndCalculateScore();\n        });\n        i0.ɵɵtext(6, \"Get Questions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, QuestionsDashboardComponent_p_7_Template, 2, 1, \"p\", 4);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.questions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.profileScore !== null);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["axios","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","question_r2","ɵɵtextInterpolate1","ctx_r1","profileScore","QuestionsDashboardComponent","constructor","questions","fetchQuestionsAndCalculateScore","openaiEndpoint","get","then","response","data","length","calculateProfileScore","catch","error","console","_","_2","selectors","decls","vars","consts","template","QuestionsDashboardComponent_Template","rf","ctx","ɵɵtemplate","QuestionsDashboardComponent_li_4_Template","ɵɵlistener","QuestionsDashboardComponent_Template_button_click_5_listener","QuestionsDashboardComponent_p_7_Template","ɵɵproperty"],"sources":["C:\\Users\\Utkarsh-PC\\Desktop\\Group37UI\\Group37UI\\src\\app\\questions-dashboard\\questions-dashboard.component.ts","C:\\Users\\Utkarsh-PC\\Desktop\\Group37UI\\Group37UI\\src\\app\\questions-dashboard\\questions-dashboard.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport axios from 'axios'; // Import Axios\n\n@Component({\n  selector: 'app-questions-dashboard',\n  templateUrl: './questions-dashboard.component.html',\n  styleUrls: ['./questions-dashboard.component.css']\n})\nexport class QuestionsDashboardComponent {\n  questions: string[] = [];\n  profileScore: number | null = null;\n\n  fetchQuestionsAndCalculateScore() {\n    // Replace 'your_openai_api_endpoint' with the actual API endpoint\n    const openaiEndpoint = 'your_openai_api_endpoint';\n\n    axios.get(openaiEndpoint)\n      .then((response) => {\n        const data = response.data;\n\n        if (data.questions && data.questions.length > 0) {\n          this.questions = data.questions;\n        } else {\n          // If no questions received from API, provide dummy questions\n          this.questions = [\n            'What is your favorite book?',\n            'What is your dream vacation destination?',\n            'Describe your ideal partner.',\n            'What are your hobbies and interests?',\n            'Share a memorable life experience.'\n          ];\n        }\n\n        // Calculate profile score \n        this.calculateProfileScore();\n      })\n      .catch((error) => {\n        console.error('Error fetching questions:', error);\n      });\n  }\n\n  calculateProfileScore() {\n    \n    this.profileScore = 75; \n  }\n}\n","<div class=\"container questions-container\">\n  <h2>Answer These Questions to get a sentiment score and Profile score</h2>\n  <ul class=\"list-group\">\n    <li *ngFor=\"let question of questions\" class=\"list-group-item\">{{ question }}</li>\n  </ul>\n</div>\n<button (click)=\"fetchQuestionsAndCalculateScore()\" class=\"btn btn-primary\">Get Questions</button>\n<p *ngIf=\"profileScore !== null\" class=\"mt-3\">Your Profile Score: {{ profileScore }}</p>\n\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;;;;ICEvBC,EAAA,CAAAC,cAAA,YAA+D;IAAAD,EAAA,CAAAE,MAAA,GAAc;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAnBH,EAAA,CAAAI,SAAA,GAAc;IAAdJ,EAAA,CAAAK,iBAAA,CAAAC,WAAA,CAAc;;;;;IAIjFN,EAAA,CAAAC,cAAA,WAA8C;IAAAD,EAAA,CAAAE,MAAA,GAAsC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAA1CH,EAAA,CAAAI,SAAA,GAAsC;IAAtCJ,EAAA,CAAAO,kBAAA,yBAAAC,MAAA,CAAAC,YAAA,KAAsC;;;ADCpF,OAAM,MAAOC,2BAA2B;EALxCC,YAAA;IAME,KAAAC,SAAS,GAAa,EAAE;IACxB,KAAAH,YAAY,GAAkB,IAAI;;EAElCI,+BAA+BA,CAAA;IAC7B;IACA,MAAMC,cAAc,GAAG,0BAA0B;IAEjDf,KAAK,CAACgB,GAAG,CAACD,cAAc,CAAC,CACtBE,IAAI,CAAEC,QAAQ,IAAI;MACjB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAE1B,IAAIA,IAAI,CAACN,SAAS,IAAIM,IAAI,CAACN,SAAS,CAACO,MAAM,GAAG,CAAC,EAAE;QAC/C,IAAI,CAACP,SAAS,GAAGM,IAAI,CAACN,SAAS;OAChC,MAAM;QACL;QACA,IAAI,CAACA,SAAS,GAAG,CACf,6BAA6B,EAC7B,0CAA0C,EAC1C,8BAA8B,EAC9B,sCAAsC,EACtC,oCAAoC,CACrC;;MAGH;MACA,IAAI,CAACQ,qBAAqB,EAAE;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAI;MACfC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN;EAEAF,qBAAqBA,CAAA;IAEnB,IAAI,CAACX,YAAY,GAAG,EAAE;EACxB;EAAC,QAAAe,CAAA,G;qBApCUd,2BAA2B;EAAA;EAAA,QAAAe,EAAA,G;UAA3Bf,2BAA2B;IAAAgB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRxChC,EAAA,CAAAC,cAAA,aAA2C;QACrCD,EAAA,CAAAE,MAAA,wEAAiE;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC1EH,EAAA,CAAAC,cAAA,YAAuB;QACrBD,EAAA,CAAAkC,UAAA,IAAAC,yCAAA,gBAAkF;QACpFnC,EAAA,CAAAG,YAAA,EAAK;QAEPH,EAAA,CAAAC,cAAA,gBAA4E;QAApED,EAAA,CAAAoC,UAAA,mBAAAC,6DAAA;UAAA,OAASJ,GAAA,CAAApB,+BAAA,EAAiC;QAAA,EAAC;QAAyBb,EAAA,CAAAE,MAAA,oBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAClGH,EAAA,CAAAkC,UAAA,IAAAI,wCAAA,eAAwF;;;QAJ3DtC,EAAA,CAAAI,SAAA,GAAY;QAAZJ,EAAA,CAAAuC,UAAA,YAAAN,GAAA,CAAArB,SAAA,CAAY;QAIrCZ,EAAA,CAAAI,SAAA,GAA2B;QAA3BJ,EAAA,CAAAuC,UAAA,SAAAN,GAAA,CAAAxB,YAAA,UAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}