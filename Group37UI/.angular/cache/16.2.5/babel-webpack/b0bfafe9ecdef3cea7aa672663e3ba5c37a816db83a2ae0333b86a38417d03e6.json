{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Utkarsh-PC/Desktop/Group37UI/Group37UI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, makeEnvironmentProviders, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, switchMap, map, first, catchError, timeout, take, mergeMap } from 'rxjs/operators';\n\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\nclass NullValidationHandler {\n  validateSignature(validationParams) {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams) {\n    return Promise.resolve(true);\n  }\n}\nclass OAuthModuleConfig {}\nclass OAuthResourceServerConfig {}\nclass DateTimeProvider {}\nclass SystemDateTimeProvider extends DateTimeProvider {\n  now() {\n    return Date.now();\n  }\n  new() {\n    return new Date();\n  }\n}\nSystemDateTimeProvider.ɵfac = /* @__PURE__ */function () {\n  let ɵSystemDateTimeProvider_BaseFactory;\n  return function SystemDateTimeProvider_Factory(t) {\n    return (ɵSystemDateTimeProvider_BaseFactory || (ɵSystemDateTimeProvider_BaseFactory = i0.ɵɵgetInheritedFactory(SystemDateTimeProvider)))(t || SystemDateTimeProvider);\n  };\n}();\nSystemDateTimeProvider.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SystemDateTimeProvider,\n  factory: SystemDateTimeProvider.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SystemDateTimeProvider, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\nclass LoginOptions {\n  constructor() {\n    /**\r\n     * Set this to true to disable the nonce\r\n     * check which is used to avoid\r\n     * replay attacks.\r\n     * This flag should never be true in\r\n     * production environments.\r\n     */\n    this.disableNonceCheck = false;\n    /**\r\n     * Normally, you want to clear your hash fragment after\r\n     * the lib read the token(s) so that they are not displayed\r\n     * anymore in the url. If not, set this to true. For code flow\r\n     * this controls removing query string values.\r\n     */\n    this.preventClearHashAfterLogin = false;\n  }\n}\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\nclass OAuthLogger {}\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\nclass OAuthStorage {}\nclass MemoryStorage {\n  constructor() {\n    this.data = new Map();\n  }\n  getItem(key) {\n    return this.data.get(key);\n  }\n  removeItem(key) {\n    this.data.delete(key);\n  }\n  setItem(key, data) {\n    this.data.set(key, data);\n  }\n}\nMemoryStorage.ɵfac = function MemoryStorage_Factory(t) {\n  return new (t || MemoryStorage)();\n};\nMemoryStorage.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MemoryStorage,\n  factory: MemoryStorage.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MemoryStorage, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\nclass ReceivedTokens {}\nclass OAuthEvent {\n  constructor(type) {\n    this.type = type;\n  }\n}\nclass OAuthSuccessEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n}\nclass OAuthInfoEvent extends OAuthEvent {\n  constructor(type, info = null) {\n    super(type);\n    this.info = info;\n  }\n}\nclass OAuthErrorEvent extends OAuthEvent {\n  constructor(type, reason, params = null) {\n    super(type);\n    this.reason = reason;\n    this.params = params;\n  }\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\nfunction b64DecodeUnicode(str) {\n  const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\n  return decodeURIComponent(atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n}\nfunction base64UrlEncode(str) {\n  const base64 = btoa(str);\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\nclass AuthConfig {\n  constructor(json) {\n    /**\r\n     * The client's id as registered with the auth server\r\n     */\n    this.clientId = '';\n    /**\r\n     * The client's redirectUri as registered with the auth server\r\n     */\n    this.redirectUri = '';\n    /**\r\n     * An optional second redirectUri where the auth server\r\n     * redirects the user to after logging out.\r\n     */\n    this.postLogoutRedirectUri = '';\n    /**\r\n     * Defines whether to use 'redirectUri' as a replacement\r\n     * of 'postLogoutRedirectUri' if the latter is not set.\r\n     */\n    this.redirectUriAsPostLogoutRedirectUriFallback = true;\n    /**\r\n     * The auth server's endpoint that allows to log\r\n     * the user in when using implicit flow.\r\n     */\n    this.loginUrl = '';\n    /**\r\n     * The requested scopes\r\n     */\n    this.scope = 'openid profile';\n    this.resource = '';\n    this.rngUrl = '';\n    /**\r\n     * Defines whether to use OpenId Connect during\r\n     * implicit flow.\r\n     */\n    this.oidc = true;\n    /**\r\n     * Defines whether to request an access token during\r\n     * implicit flow.\r\n     */\n    this.requestAccessToken = true;\n    this.options = null;\n    /**\r\n     * The issuer's uri.\r\n     */\n    this.issuer = '';\n    /**\r\n     * The logout url.\r\n     */\n    this.logoutUrl = '';\n    /**\r\n     * Defines whether to clear the hash fragment after logging in.\r\n     */\n    this.clearHashAfterLogin = true;\n    /**\r\n     * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n     */\n    this.tokenEndpoint = null;\n    /**\r\n     * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n     */\n    this.revocationEndpoint = null;\n    /**\r\n     * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n     */\n    this.customTokenParameters = [];\n    /**\r\n     * Url of the userinfo endpoint as defined by OpenId Connect.\r\n     */\n    this.userinfoEndpoint = null;\n    this.responseType = '';\n    /**\r\n     * Defines whether additional debug information should\r\n     * be shown at the console. Note that in certain browsers\r\n     * the verbosity of the console needs to be explicitly set\r\n     * to include Debug level messages.\r\n     */\n    this.showDebugInformation = false;\n    /**\r\n     * The redirect uri used when doing silent refresh.\r\n     */\n    this.silentRefreshRedirectUri = '';\n    this.silentRefreshMessagePrefix = '';\n    /**\r\n     * Set this to true to display the iframe used for\r\n     * silent refresh for debugging.\r\n     */\n    this.silentRefreshShowIFrame = false;\n    /**\r\n     * Timeout for silent refresh.\r\n     * @internal\r\n     * depreacted b/c of typo, see silentRefreshTimeout\r\n     */\n    this.siletRefreshTimeout = 1000 * 20;\n    /**\r\n     * Timeout for silent refresh.\r\n     */\n    this.silentRefreshTimeout = 1000 * 20;\n    /**\r\n     * Some auth servers don't allow using password flow\r\n     * w/o a client secret while the standards do not\r\n     * demand for it. In this case, you can set a password\r\n     * here. As this password is exposed to the public\r\n     * it does not bring additional security and is therefore\r\n     * as good as using no password.\r\n     */\n    this.dummyClientSecret = '';\n    /**\r\n     * Defines whether https is required.\r\n     * The default value is remoteOnly which only allows\r\n     * http for localhost, while every other domains need\r\n     * to be used with https.\r\n     */\n    this.requireHttps = 'remoteOnly';\n    /**\r\n     * Defines whether every url provided by the discovery\r\n     * document has to start with the issuer's url.\r\n     */\n    this.strictDiscoveryDocumentValidation = true;\n    /**\r\n     * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n     * with keys used to validate received id_tokens.\r\n     * This is taken out of the disovery document. Can be set manually too.\r\n     */\n    this.jwks = null;\n    /**\r\n     * Map with additional query parameter that are appended to\r\n     * the request when initializing implicit flow.\r\n     */\n    this.customQueryParams = null;\n    this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\n    /**\r\n     * Defines when the token_timeout event should be raised.\r\n     * If you set this to the default value 0.75, the event\r\n     * is triggered after 75% of the token's life time.\r\n     */\n    this.timeoutFactor = 0.75;\n    /**\r\n     * If true, the lib will try to check whether the user\r\n     * is still logged in on a regular basis as described\r\n     * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n     */\n    this.sessionChecksEnabled = false;\n    /**\r\n     * Interval in msec for checking the session\r\n     * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n     */\n    this.sessionCheckIntervall = 3 * 1000;\n    /**\r\n     * Url for the iframe used for session checks\r\n     */\n    this.sessionCheckIFrameUrl = null;\n    /**\r\n     * Name of the iframe to use for session checks\r\n     */\n    this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\n    /**\r\n     * This property has been introduced to disable at_hash checks\r\n     * and is indented for Identity Provider that does not deliver\r\n     * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n     * Of course, when disabling these checks then we are bypassing\r\n     * a security check which means we are more vulnerable.\r\n     */\n    this.disableAtHashCheck = false;\n    /**\r\n     * Defines wether to check the subject of a refreshed token after silent refresh.\r\n     * Normally, it should be the same as before.\r\n     */\n    this.skipSubjectCheck = false;\n    this.useIdTokenHintForSilentRefresh = false;\n    /**\r\n     * Defined whether to skip the validation of the issuer in the discovery document.\r\n     * Normally, the discovey document's url starts with the url of the issuer.\r\n     */\n    this.skipIssuerCheck = false;\n    /**\r\n     * final state sent to issuer is built as follows:\r\n     * state = nonce + nonceStateSeparator + additional state\r\n     * Default separator is ';' (encoded %3B).\r\n     * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n     */\n    this.nonceStateSeparator = ';';\n    /**\r\n     * Set this to true to use HTTP BASIC auth for AJAX calls\r\n     */\n    this.useHttpBasicAuth = false;\n    /**\r\n     * Decreases the Expiration time of tokens by this number of seconds\r\n     */\n    this.decreaseExpirationBySec = 0;\n    /**\r\n     * The interceptors waits this time span if there is no token\r\n     */\n    this.waitForTokenInMsec = 0;\n    /**\r\n     * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n     * You can disbale it here by setting this flag to true.\r\n     * https://tools.ietf.org/html/rfc7636#section-1.1\r\n     */\n    this.disablePKCE = false;\n    /**\r\n     * Set this to true to preserve the requested route including query parameters after code flow login.\r\n     * This setting enables deep linking for the code flow.\r\n     */\n    this.preserveRequestedRoute = false;\n    /**\r\n     * Allows to disable the timer for the id_token used\r\n     * for token refresh\r\n     */\n    this.disableIdTokenTimer = false;\n    /**\r\n     * Blocks other origins requesting a silent refresh\r\n     */\n    this.checkOrigin = false;\n    /**\r\n     * This property allows you to override the method that is used to open the login url,\r\n     * allowing a way for implementations to specify their own method of routing to new\r\n     * urls.\r\n     */\n    this.openUri = uri => {\n      location.href = uri;\n    };\n    if (json) {\n      Object.assign(this, json);\n    }\n  }\n}\n\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\nclass WebHttpUrlEncodingCodec {\n  encodeKey(k) {\n    return encodeURIComponent(k);\n  }\n  encodeValue(v) {\n    return encodeURIComponent(v);\n  }\n  decodeKey(k) {\n    return decodeURIComponent(k);\n  }\n  decodeValue(v) {\n    return decodeURIComponent(v);\n  }\n}\n\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\nclass ValidationHandler {}\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\nclass AbstractValidationHandler {\n  /**\r\n   * Validates the at_hash in an id_token against the received access_token.\r\n   */\n  validateAtHash(params) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let hashAlg = _this.inferHashAlgorithm(params.idTokenHeader);\n      let tokenHash = yield _this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n      let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n      let atHash = base64UrlEncode(leftMostHalf);\n      let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n      if (atHash !== claimsAtHash) {\n        console.error('exptected at_hash: ' + atHash);\n        console.error('actual at_hash: ' + claimsAtHash);\n      }\n      return atHash === claimsAtHash;\n    })();\n  }\n  /**\r\n   * Infers the name of the hash algorithm to use\r\n   * from the alg field of an id_token.\r\n   *\r\n   * @param jwtHeader the id_token's parsed header\r\n   */\n  inferHashAlgorithm(jwtHeader) {\n    let alg = jwtHeader['alg'];\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n    return 'sha-' + alg.substr(2);\n  }\n}\nclass UrlHelperService {\n  getHashFragmentParams(customHashFragment) {\n    let hash = customHashFragment || window.location.hash;\n    hash = decodeURIComponent(hash);\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n    const questionMarkPosition = hash.indexOf('?');\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n    return this.parseQueryString(hash);\n  }\n  parseQueryString(queryString) {\n    const data = {};\n    let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\n    if (queryString === null) {\n      return data;\n    }\n    pairs = queryString.split('&');\n    for (let i = 0; i < pairs.length; i++) {\n      pair = pairs[i];\n      separatorIndex = pair.indexOf('=');\n      if (separatorIndex === -1) {\n        escapedKey = pair;\n        escapedValue = null;\n      } else {\n        escapedKey = pair.substr(0, separatorIndex);\n        escapedValue = pair.substr(separatorIndex + 1);\n      }\n      key = decodeURIComponent(escapedKey);\n      value = decodeURIComponent(escapedValue);\n      if (key.substr(0, 1) === '/') {\n        key = key.substr(1);\n      }\n      data[key] = value;\n    }\n    return data;\n  }\n}\nUrlHelperService.ɵfac = function UrlHelperService_Factory(t) {\n  return new (t || UrlHelperService)();\n};\nUrlHelperService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UrlHelperService,\n  factory: UrlHelperService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UrlHelperService, [{\n    type: Injectable\n  }], null, null);\n})();\n\n// Credits: https://github.com/dchest/fast-sha256-js/tree/master/src\n// We add this lib directly b/c the published version of fast-sha256-js\n// is commonjs and hence leads to a warning about tree-shakability emitted\n// by the Angular CLI\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nconst digestLength = 32;\nconst blockSize = 64;\n// SHA-256 constants\nconst K = new Uint32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\nfunction hashBlocks(w, v, p, pos, len) {\n  let a, b, c, d, e, f, g, h, u, i, j, t1, t2;\n  while (len >= 64) {\n    a = v[0];\n    b = v[1];\n    c = v[2];\n    d = v[3];\n    e = v[4];\n    f = v[5];\n    g = v[6];\n    h = v[7];\n    for (i = 0; i < 16; i++) {\n      j = pos + i * 4;\n      w[i] = (p[j] & 0xff) << 24 | (p[j + 1] & 0xff) << 16 | (p[j + 2] & 0xff) << 8 | p[j + 3] & 0xff;\n    }\n    for (i = 16; i < 64; i++) {\n      u = w[i - 2];\n      t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n      u = w[i - 15];\n      t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n      w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n    }\n    for (i = 0; i < 64; i++) {\n      t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n      t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n      h = g;\n      g = f;\n      f = e;\n      e = d + t1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = t1 + t2 | 0;\n    }\n    v[0] += a;\n    v[1] += b;\n    v[2] += c;\n    v[3] += d;\n    v[4] += e;\n    v[5] += f;\n    v[6] += g;\n    v[7] += h;\n    pos += 64;\n    len -= 64;\n  }\n  return pos;\n}\n// Hash implements SHA256 hash algorithm.\nclass Hash {\n  constructor() {\n    this.digestLength = digestLength;\n    this.blockSize = blockSize;\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    this.state = new Int32Array(8); // hash state\n    this.temp = new Int32Array(64); // temporary state\n    this.buffer = new Uint8Array(128); // buffer for data to hash\n    this.bufferLength = 0; // number of bytes in buffer\n    this.bytesHashed = 0; // number of total bytes hashed\n    this.finished = false; // indicates whether the hash was finalized\n    this.reset();\n  }\n  // Resets hash state making it possible\n  // to re-use this instance to hash other data.\n  reset() {\n    this.state[0] = 0x6a09e667;\n    this.state[1] = 0xbb67ae85;\n    this.state[2] = 0x3c6ef372;\n    this.state[3] = 0xa54ff53a;\n    this.state[4] = 0x510e527f;\n    this.state[5] = 0x9b05688c;\n    this.state[6] = 0x1f83d9ab;\n    this.state[7] = 0x5be0cd19;\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    this.finished = false;\n    return this;\n  }\n  // Cleans internal buffers and re-initializes hash state.\n  clean() {\n    for (let i = 0; i < this.buffer.length; i++) {\n      this.buffer[i] = 0;\n    }\n    for (let i = 0; i < this.temp.length; i++) {\n      this.temp[i] = 0;\n    }\n    this.reset();\n  }\n  // Updates hash state with the given data.\n  //\n  // Optionally, length of the data can be specified to hash\n  // fewer bytes than data.length.\n  //\n  // Throws error when trying to update already finalized hash:\n  // instance must be reset to use it again.\n  update(data, dataLength = data.length) {\n    if (this.finished) {\n      throw new Error(\"SHA256: can't update because hash was finished.\");\n    }\n    let dataPos = 0;\n    this.bytesHashed += dataLength;\n    if (this.bufferLength > 0) {\n      while (this.bufferLength < 64 && dataLength > 0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n        this.bufferLength = 0;\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n      dataLength %= 64;\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  }\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  finish(out) {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed;\n      const left = this.bufferLength;\n      const bitLenHi = bytesHashed / 0x20000000 | 0;\n      const bitLenLo = bytesHashed << 3;\n      const padLength = bytesHashed % 64 < 56 ? 64 : 128;\n      this.buffer[left] = 0x80;\n      for (let i = left + 1; i < padLength - 8; i++) {\n        this.buffer[i] = 0;\n      }\n      this.buffer[padLength - 8] = bitLenHi >>> 24 & 0xff;\n      this.buffer[padLength - 7] = bitLenHi >>> 16 & 0xff;\n      this.buffer[padLength - 6] = bitLenHi >>> 8 & 0xff;\n      this.buffer[padLength - 5] = bitLenHi >>> 0 & 0xff;\n      this.buffer[padLength - 4] = bitLenLo >>> 24 & 0xff;\n      this.buffer[padLength - 3] = bitLenLo >>> 16 & 0xff;\n      this.buffer[padLength - 2] = bitLenLo >>> 8 & 0xff;\n      this.buffer[padLength - 1] = bitLenLo >>> 0 & 0xff;\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n      this.finished = true;\n    }\n    for (let i = 0; i < 8; i++) {\n      out[i * 4 + 0] = this.state[i] >>> 24 & 0xff;\n      out[i * 4 + 1] = this.state[i] >>> 16 & 0xff;\n      out[i * 4 + 2] = this.state[i] >>> 8 & 0xff;\n      out[i * 4 + 3] = this.state[i] >>> 0 & 0xff;\n    }\n    return this;\n  }\n  // Returns the final hash digest.\n  digest() {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n  // Internal function for use in HMAC for optimization.\n  _saveState(out) {\n    for (let i = 0; i < this.state.length; i++) {\n      out[i] = this.state[i];\n    }\n  }\n  // Internal function for use in HMAC for optimization.\n  _restoreState(from, bytesHashed) {\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i] = from[i];\n    }\n    this.bytesHashed = bytesHashed;\n    this.finished = false;\n    this.bufferLength = 0;\n  }\n}\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nclass HMAC {\n  constructor(key) {\n    this.inner = new Hash();\n    this.outer = new Hash();\n    this.blockSize = this.inner.blockSize;\n    this.digestLength = this.inner.digestLength;\n    const pad = new Uint8Array(this.blockSize);\n    if (key.length > this.blockSize) {\n      new Hash().update(key).finish(pad).clean();\n    } else {\n      for (let i = 0; i < key.length; i++) {\n        pad[i] = key[i];\n      }\n    }\n    for (let i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36;\n    }\n    this.inner.update(pad);\n    for (let i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36 ^ 0x5c;\n    }\n    this.outer.update(pad);\n    this.istate = new Uint32Array(8);\n    this.ostate = new Uint32Array(8);\n    this.inner._saveState(this.istate);\n    this.outer._saveState(this.ostate);\n    for (let i = 0; i < pad.length; i++) {\n      pad[i] = 0;\n    }\n  }\n  // Returns HMAC state to the state initialized with key\n  // to make it possible to run HMAC over the other data with the same\n  // key without creating a new instance.\n  reset() {\n    this.inner._restoreState(this.istate, this.inner.blockSize);\n    this.outer._restoreState(this.ostate, this.outer.blockSize);\n    return this;\n  }\n  // Cleans HMAC state.\n  clean() {\n    for (let i = 0; i < this.istate.length; i++) {\n      this.ostate[i] = this.istate[i] = 0;\n    }\n    this.inner.clean();\n    this.outer.clean();\n  }\n  // Updates state with provided data.\n  update(data) {\n    this.inner.update(data);\n    return this;\n  }\n  // Finalizes HMAC and puts the result in out.\n  finish(out) {\n    if (this.outer.finished) {\n      this.outer.finish(out);\n    } else {\n      this.inner.finish(out);\n      this.outer.update(out, this.digestLength).finish(out);\n    }\n    return this;\n  }\n  // Returns message authentication code.\n  digest() {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n}\n// Returns SHA256 hash of data.\nfunction hash(data) {\n  const h = new Hash().update(data);\n  const digest = h.digest();\n  h.clean();\n  return digest;\n}\n// Returns HMAC-SHA256 of data under the key.\nfunction hmac(key, data) {\n  const h = new HMAC(key).update(data);\n  const digest = h.digest();\n  h.clean();\n  return digest;\n}\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer(buffer, hmac, info, counter) {\n  // Counter is a byte value: check if it overflowed.\n  const num = counter[0];\n  if (num === 0) {\n    throw new Error('hkdf: cannot expand more');\n  }\n  // Prepare HMAC instance for new data with old key.\n  hmac.reset();\n  // Hash in previous output if it was generated\n  // (i.e. counter is greater than 1).\n  if (num > 1) {\n    hmac.update(buffer);\n  }\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info);\n  }\n  // Hash in the counter.\n  hmac.update(counter);\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer);\n  // Increment counter inside typed array, this works properly.\n  counter[0]++;\n}\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nfunction hkdf(key, salt = hkdfSalt, info, length = 32) {\n  const counter = new Uint8Array([1]);\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key);\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm);\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength);\n  let bufpos = buffer.length;\n  const out = new Uint8Array(length);\n  for (let i = 0; i < length; i++) {\n    if (bufpos === buffer.length) {\n      fillBuffer(buffer, hmac_, info, counter);\n      bufpos = 0;\n    }\n    out[i] = buffer[bufpos++];\n  }\n  hmac_.clean();\n  buffer.fill(0);\n  counter.fill(0);\n  return out;\n}\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nfunction pbkdf2(password, salt, iterations, dkLen) {\n  const prf = new HMAC(password);\n  const len = prf.digestLength;\n  const ctr = new Uint8Array(4);\n  const t = new Uint8Array(len);\n  const u = new Uint8Array(len);\n  const dk = new Uint8Array(dkLen);\n  for (let i = 0; i * len < dkLen; i++) {\n    let c = i + 1;\n    ctr[0] = c >>> 24 & 0xff;\n    ctr[1] = c >>> 16 & 0xff;\n    ctr[2] = c >>> 8 & 0xff;\n    ctr[3] = c >>> 0 & 0xff;\n    prf.reset();\n    prf.update(salt);\n    prf.update(ctr);\n    prf.finish(u);\n    for (let j = 0; j < len; j++) {\n      t[j] = u[j];\n    }\n    for (let j = 2; j <= iterations; j++) {\n      prf.reset();\n      prf.update(u).finish(u);\n      for (let k = 0; k < len; k++) {\n        t[k] ^= u[k];\n      }\n    }\n    for (let j = 0; j < len && i * len + j < dkLen; j++) {\n      dk[i * len + j] = t[j];\n    }\n  }\n  for (let i = 0; i < len; i++) {\n    t[i] = u[i] = 0;\n  }\n  for (let i = 0; i < 4; i++) {\n    ctr[i] = 0;\n  }\n  prf.clean();\n  return dk;\n}\n\n/**\r\n * Abstraction for crypto algorithms\r\n */\nclass HashHandler {}\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  var i,\n    d = s,\n    b = new Uint8Array(d.length);\n  for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n  return b;\n}\nfunction encodeUTF8(arr) {\n  var i,\n    s = [];\n  for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n  return s.join('');\n}\nclass DefaultHashHandler {\n  calcHash(valueToHash, algorithm) {\n    return _asyncToGenerator(function* () {\n      // const encoder = new TextEncoder();\n      // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n      // const data = encoder.encode(valueToHash);\n      // const fhash = fsha256(valueToHash);\n      const candHash = encodeUTF8(hash(decodeUTF8(valueToHash)));\n      // const hashArray = (sha256 as any).array(valueToHash);\n      // // const hashString = this.toHashString(hashArray);\n      // const hashString = this.toHashString2(hashArray);\n      // console.debug('hash orig - cand', candHash, hashString);\n      // alert(1);\n      return candHash;\n    })();\n  }\n  toHashString2(byteArray) {\n    let result = '';\n    for (let e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n  toHashString(buffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (let e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n}\nDefaultHashHandler.ɵfac = function DefaultHashHandler_Factory(t) {\n  return new (t || DefaultHashHandler)();\n};\nDefaultHashHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultHashHandler,\n  factory: DefaultHashHandler.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultHashHandler, [{\n    type: Injectable\n  }], null, null);\n})();\n\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\nclass OAuthService extends AuthConfig {\n  constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\n    super();\n    this.ngZone = ngZone;\n    this.http = http;\n    this.config = config;\n    this.urlHelper = urlHelper;\n    this.logger = logger;\n    this.crypto = crypto;\n    this.dateTimeService = dateTimeService;\n    /**\r\n     * @internal\r\n     * Deprecated:  use property events instead\r\n     */\n    this.discoveryDocumentLoaded = false;\n    /**\r\n     * The received (passed around) state, when logging\r\n     * in with implicit flow.\r\n     */\n    this.state = '';\n    this.eventsSubject = new Subject();\n    this.discoveryDocumentLoadedSubject = new Subject();\n    this.grantTypesSupported = [];\n    this.inImplicitFlow = false;\n    this.saveNoncesInLocalStorage = false;\n    this.debug('angular-oauth2-oidc v10');\n    // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\n    this.document = document;\n    if (!config) {\n      config = {};\n    }\n    this.discoveryDocumentLoaded$ = this.discoveryDocumentLoadedSubject.asObservable();\n    this.events = this.eventsSubject.asObservable();\n    if (tokenValidationHandler) {\n      this.tokenValidationHandler = tokenValidationHandler;\n    }\n    if (config) {\n      this.configure(config);\n    }\n    try {\n      if (storage) {\n        this.setStorage(storage);\n      } else if (typeof sessionStorage !== 'undefined') {\n        this.setStorage(sessionStorage);\n      }\n    } catch (e) {\n      console.error('No OAuthStorage provided and cannot access default (sessionStorage).' + 'Consider providing a custom OAuthStorage implementation in your module.', e);\n    }\n    // in IE, sessionStorage does not always survive a redirect\n    if (this.checkLocalStorageAccessable()) {\n      const ua = window?.navigator?.userAgent;\n      const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\n      if (msie) {\n        this.saveNoncesInLocalStorage = true;\n      }\n    }\n    this.setupRefreshTimer();\n  }\n  checkLocalStorageAccessable() {\n    if (typeof window === 'undefined') return false;\n    const test = 'test';\n    try {\n      if (typeof window['localStorage'] === 'undefined') return false;\n      localStorage.setItem(test, test);\n      localStorage.removeItem(test);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\r\n   * Use this method to configure the service\r\n   * @param config the configuration\r\n   */\n  configure(config) {\n    // For the sake of downward compatibility with\n    // original configuration API\n    Object.assign(this, new AuthConfig(), config);\n    this.config = Object.assign({}, new AuthConfig(), config);\n    if (this.sessionChecksEnabled) {\n      this.setupSessionCheck();\n    }\n    this.configChanged();\n  }\n  configChanged() {\n    this.setupRefreshTimer();\n  }\n  restartSessionChecksIfStillLoggedIn() {\n    if (this.hasValidIdToken()) {\n      this.initSessionCheck();\n    }\n  }\n  restartRefreshTimerIfStillLoggedIn() {\n    this.setupExpirationTimers();\n  }\n  setupSessionCheck() {\n    this.events.pipe(filter(e => e.type === 'token_received')).subscribe(e => {\n      this.initSessionCheck();\n    });\n  }\n  /**\r\n   * Will setup up silent refreshing for when the token is\r\n   * about to expire. When the user is logged out via this.logOut method, the\r\n   * silent refreshing will pause and not refresh the tokens until the user is\r\n   * logged back in via receiving a new token.\r\n   * @param params Additional parameter to pass\r\n   * @param listenTo Setup automatic refresh of a specific token type\r\n   */\n  setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\n    let shouldRunSilentRefresh = true;\n    this.clearAutomaticRefreshTimer();\n    this.automaticRefreshSubscription = this.events.pipe(tap(e => {\n      if (e.type === 'token_received') {\n        shouldRunSilentRefresh = true;\n      } else if (e.type === 'logout') {\n        shouldRunSilentRefresh = false;\n      }\n    }), filter(e => e.type === 'token_expires' && (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000)).subscribe(_ => {\n      if (shouldRunSilentRefresh) {\n        // this.silentRefresh(params, noPrompt).catch(_ => {\n        this.refreshInternal(params, noPrompt).catch(_ => {\n          this.debug('Automatic silent refresh did not work');\n        });\n      }\n    });\n    this.restartRefreshTimerIfStillLoggedIn();\n  }\n  refreshInternal(params, noPrompt) {\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      return this.refreshToken();\n    } else {\n      return this.silentRefresh(params, noPrompt);\n    }\n  }\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n   * directly chains using the `then(...)` part of the promise to call\r\n   * the `tryLogin(...)` method.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\n  loadDiscoveryDocumentAndTryLogin(options = null) {\n    return this.loadDiscoveryDocument().then(doc => {\n      return this.tryLogin(options);\n    });\n  }\n  /**\r\n   * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n   * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n   * IdToken or no valid AccessToken.\r\n   *\r\n   * @param options LoginOptions to pass through to `tryLogin(...)`\r\n   */\n  loadDiscoveryDocumentAndLogin(options = null) {\n    options = options || {};\n    return this.loadDiscoveryDocumentAndTryLogin(options).then(_ => {\n      if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\n        const state = typeof options.state === 'string' ? options.state : '';\n        this.initLoginFlow(state);\n        return false;\n      } else {\n        return true;\n      }\n    });\n  }\n  debug(...args) {\n    if (this.showDebugInformation) {\n      this.logger.debug.apply(this.logger, args);\n    }\n  }\n  validateUrlFromDiscoveryDocument(url) {\n    const errors = [];\n    const httpsCheck = this.validateUrlForHttps(url);\n    const issuerCheck = this.validateUrlAgainstIssuer(url);\n    if (!httpsCheck) {\n      errors.push('https for all urls required. Also for urls received by discovery.');\n    }\n    if (!issuerCheck) {\n      errors.push('Every url in discovery document has to start with the issuer url.' + 'Also see property strictDiscoveryDocumentValidation.');\n    }\n    return errors;\n  }\n  validateUrlForHttps(url) {\n    if (!url) {\n      return true;\n    }\n    const lcUrl = url.toLowerCase();\n    if (this.requireHttps === false) {\n      return true;\n    }\n    if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) || lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) && this.requireHttps === 'remoteOnly') {\n      return true;\n    }\n    return lcUrl.startsWith('https://');\n  }\n  assertUrlNotNullAndCorrectProtocol(url, description) {\n    if (!url) {\n      throw new Error(`'${description}' should not be null`);\n    }\n    if (!this.validateUrlForHttps(url)) {\n      throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\n    }\n  }\n  validateUrlAgainstIssuer(url) {\n    if (!this.strictDiscoveryDocumentValidation) {\n      return true;\n    }\n    if (!url) {\n      return true;\n    }\n    return url.toLowerCase().startsWith(this.issuer.toLowerCase());\n  }\n  setupRefreshTimer() {\n    if (typeof window === 'undefined') {\n      this.debug('timer not supported on this plattform');\n      return;\n    }\n    if (this.hasValidIdToken() || this.hasValidAccessToken()) {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    }\n    if (this.tokenReceivedSubscription) this.tokenReceivedSubscription.unsubscribe();\n    this.tokenReceivedSubscription = this.events.pipe(filter(e => e.type === 'token_received')).subscribe(_ => {\n      this.clearAccessTokenTimer();\n      this.clearIdTokenTimer();\n      this.setupExpirationTimers();\n    });\n  }\n  setupExpirationTimers() {\n    if (this.hasValidAccessToken()) {\n      this.setupAccessTokenTimer();\n    }\n    if (!this.disableIdTokenTimer && this.hasValidIdToken()) {\n      this.setupIdTokenTimer();\n    }\n  }\n  setupAccessTokenTimer() {\n    const expiration = this.getAccessTokenExpiration();\n    const storedAt = this.getAccessTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  setupIdTokenTimer() {\n    const expiration = this.getIdTokenExpiration();\n    const storedAt = this.getIdTokenStoredAt();\n    const timeout = this.calcTimeout(storedAt, expiration);\n    this.ngZone.runOutsideAngular(() => {\n      this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token')).pipe(delay(timeout)).subscribe(e => {\n        this.ngZone.run(() => {\n          this.eventsSubject.next(e);\n        });\n      });\n    });\n  }\n  /**\r\n   * Stops timers for automatic refresh.\r\n   * To restart it, call setupAutomaticSilentRefresh again.\r\n   */\n  stopAutomaticRefresh() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.clearAutomaticRefreshTimer();\n  }\n  clearAccessTokenTimer() {\n    if (this.accessTokenTimeoutSubscription) {\n      this.accessTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n  clearIdTokenTimer() {\n    if (this.idTokenTimeoutSubscription) {\n      this.idTokenTimeoutSubscription.unsubscribe();\n    }\n  }\n  clearAutomaticRefreshTimer() {\n    if (this.automaticRefreshSubscription) {\n      this.automaticRefreshSubscription.unsubscribe();\n    }\n  }\n  calcTimeout(storedAt, expiration) {\n    const now = this.dateTimeService.now();\n    const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\n    const duration = Math.max(0, delta);\n    const maxTimeoutValue = 2147483647;\n    return duration > maxTimeoutValue ? maxTimeoutValue : duration;\n  }\n  /**\r\n   * DEPRECATED. Use a provider for OAuthStorage instead:\r\n   *\r\n   * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n   * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n   * Sets a custom storage used to store the received\r\n   * tokens on client side. By default, the browser's\r\n   * sessionStorage is used.\r\n   * @ignore\r\n   *\r\n   * @param storage\r\n   */\n  setStorage(storage) {\n    this._storage = storage;\n    this.configChanged();\n  }\n  /**\r\n   * Loads the discovery document to configure most\r\n   * properties of this service. The url of the discovery\r\n   * document is infered from the issuer's url according\r\n   * to the OpenId Connect spec. To use another url you\r\n   * can pass it to to optional parameter fullUrl.\r\n   *\r\n   * @param fullUrl\r\n   */\n  loadDiscoveryDocument(fullUrl = null) {\n    return new Promise((resolve, reject) => {\n      if (!fullUrl) {\n        fullUrl = this.issuer || '';\n        if (!fullUrl.endsWith('/')) {\n          fullUrl += '/';\n        }\n        fullUrl += '.well-known/openid-configuration';\n      }\n      if (!this.validateUrlForHttps(fullUrl)) {\n        reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n        return;\n      }\n      this.http.get(fullUrl).subscribe(doc => {\n        if (!this.validateDiscoveryDocument(doc)) {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\n          reject('discovery_document_validation_error');\n          return;\n        }\n        this.loginUrl = doc.authorization_endpoint;\n        this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\n        this.grantTypesSupported = doc.grant_types_supported;\n        this.issuer = doc.issuer;\n        this.tokenEndpoint = doc.token_endpoint;\n        this.userinfoEndpoint = doc.userinfo_endpoint || this.userinfoEndpoint;\n        this.jwksUri = doc.jwks_uri;\n        this.sessionCheckIFrameUrl = doc.check_session_iframe || this.sessionCheckIFrameUrl;\n        this.discoveryDocumentLoaded = true;\n        this.discoveryDocumentLoadedSubject.next(doc);\n        this.revocationEndpoint = doc.revocation_endpoint || this.revocationEndpoint;\n        if (this.sessionChecksEnabled) {\n          this.restartSessionChecksIfStillLoggedIn();\n        }\n        this.loadJwks().then(jwks => {\n          const result = {\n            discoveryDocument: doc,\n            jwks: jwks\n          };\n          const event = new OAuthSuccessEvent('discovery_document_loaded', result);\n          this.eventsSubject.next(event);\n          resolve(event);\n          return;\n        }).catch(err => {\n          this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n          reject(err);\n          return;\n        });\n      }, err => {\n        this.logger.error('error loading discovery document', err);\n        this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  loadJwks() {\n    return new Promise((resolve, reject) => {\n      if (this.jwksUri) {\n        this.http.get(this.jwksUri).subscribe(jwks => {\n          this.jwks = jwks;\n          // this.eventsSubject.next(\n          //   new OAuthSuccessEvent('discovery_document_loaded')\n          // );\n          resolve(jwks);\n        }, err => {\n          this.logger.error('error loading jwks', err);\n          this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\n          reject(err);\n        });\n      } else {\n        resolve(null);\n      }\n    });\n  }\n  validateDiscoveryDocument(doc) {\n    let errors;\n    if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\n      this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating authorization_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating end_session_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating token_endpoint in discovery document', errors);\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating revocation_endpoint in discovery document', errors);\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\n    if (errors.length > 0) {\n      this.logger.error('error validating userinfo_endpoint in discovery document', errors);\n      return false;\n    }\n    errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\n    if (errors.length > 0) {\n      this.logger.error('error validating jwks_uri in discovery document', errors);\n      return false;\n    }\n    if (this.sessionChecksEnabled && !doc.check_session_iframe) {\n      this.logger.warn('sessionChecksEnabled is activated but discovery document' + ' does not contain a check_session_iframe field');\n    }\n    return true;\n  }\n  /**\r\n   * Uses password flow to exchange userName and password for an\r\n   * access_token. After receiving the access_token, this method\r\n   * uses it to query the userinfo endpoint in order to get information\r\n   * about the user in question.\r\n   *\r\n   * When using this, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation\r\n   * fail.\r\n   *\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\n  fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\n    return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\n  }\n  /**\r\n   * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n   *\r\n   * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n   * Otherwise stricter validations take place that make this operation fail.\r\n   */\n  loadUserProfile() {\n    if (!this.hasValidAccessToken()) {\n      throw new Error('Can not load User Profile without access_token');\n    }\n    if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\n      throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    return new Promise((resolve, reject) => {\n      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\n      this.http.get(this.userinfoEndpoint, {\n        headers,\n        observe: 'response',\n        responseType: 'text'\n      }).subscribe(response => {\n        this.debug('userinfo received', JSON.stringify(response));\n        if (response.headers.get('content-type').startsWith('application/json')) {\n          let info = JSON.parse(response.body);\n          const existingClaims = this.getIdentityClaims() || {};\n          if (!this.skipSubjectCheck) {\n            if (this.oidc && (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\n              const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' + 'of the user that has logged in with oidc.\\n' + 'if you are not using oidc but just oauth2 password flow set oidc to false';\n              reject(err);\n              return;\n            }\n          }\n          info = Object.assign({}, existingClaims, info);\n          this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve({\n            info\n          });\n        } else {\n          this.debug('userinfo is not JSON, treating it as JWE/JWS');\n          this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\n          resolve(JSON.parse(response.body));\n        }\n      }, err => {\n        this.logger.error('error loading user info', err);\n        this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Uses password flow to exchange userName and password for an access_token.\r\n   * @param userName\r\n   * @param password\r\n   * @param headers Optional additional http-headers.\r\n   */\n  fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\n    const parameters = {\n      username: userName,\n      password: password\n    };\n    return this.fetchTokenUsingGrant('password', parameters, headers);\n  }\n  /**\r\n   * Uses a custom grant type to retrieve tokens.\r\n   * @param grantType Grant type.\r\n   * @param parameters Parameters to pass.\r\n   * @param headers Optional additional HTTP headers.\r\n   */\n  fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    /**\r\n     * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n     * serialize and parse URL parameter keys and values.\r\n     *\r\n     * @stable\r\n     */\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', grantType).set('scope', this.scope);\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n    // set explicit parameters last, to allow overwriting\n    for (const key of Object.keys(parameters)) {\n      params = params.set(key, parameters[key]);\n    }\n    headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\n    return new Promise((resolve, reject) => {\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then(result => {\n            this.storeIdToken(result);\n            resolve(tokenResponse);\n          });\n        }\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error performing ${grantType} flow', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Refreshes the token using a refresh_token.\r\n   * This does not work for implicit flow, b/c\r\n   * there is no refresh_token in this flow.\r\n   * A solution for this is provided by the\r\n   * method silentRefresh.\r\n   */\n  refreshToken() {\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    return new Promise((resolve, reject) => {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      }).set('grant_type', 'refresh_token').set('scope', this.scope).set('refresh_token', this._storage.getItem('refresh_token'));\n      let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n      if (this.useHttpBasicAuth) {\n        const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n        headers = headers.set('Authorization', 'Basic ' + header);\n      }\n      if (!this.useHttpBasicAuth) {\n        params = params.set('client_id', this.clientId);\n      }\n      if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n        params = params.set('client_secret', this.dummyClientSecret);\n      }\n      if (this.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).pipe(switchMap(tokenResponse => {\n        if (this.oidc && tokenResponse.id_token) {\n          return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap(result => this.storeIdToken(result)), map(_ => tokenResponse));\n        } else {\n          return of(tokenResponse);\n        }\n      })).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n        resolve(tokenResponse);\n      }, err => {\n        this.logger.error('Error refreshing token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  removeSilentRefreshEventListener() {\n    if (this.silentRefreshPostMessageEventListener) {\n      window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\n      this.silentRefreshPostMessageEventListener = null;\n    }\n  }\n  setupSilentRefreshEventListener() {\n    this.removeSilentRefreshEventListener();\n    this.silentRefreshPostMessageEventListener = e => {\n      const message = this.processMessageEventMessage(e);\n      if (this.checkOrigin && e.origin !== location.origin) {\n        console.error('wrong origin requested silent refresh!');\n      }\n      this.tryLogin({\n        customHashFragment: message,\n        preventClearHashAfterLogin: true,\n        customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri\n      }).catch(err => this.debug('tryLogin during silent refresh failed', err));\n    };\n    window.addEventListener('message', this.silentRefreshPostMessageEventListener);\n  }\n  /**\r\n   * Performs a silent refresh for implicit flow.\r\n   * Use this method to get new tokens when/before\r\n   * the existing tokens expire.\r\n   */\n  silentRefresh(params = {}, noPrompt = true) {\n    const claims = this.getIdentityClaims() || {};\n    if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\n      params['id_token_hint'] = this.getIdToken();\n    }\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    if (typeof this.document === 'undefined') {\n      throw new Error('silent refresh is not supported on this platform');\n    }\n    const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n    this.silentRefreshSubject = claims['sub'];\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.silentRefreshIFrameName;\n    this.setupSilentRefreshEventListener();\n    const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\n    this.createLoginUrl(null, null, redirectUri, noPrompt, params).then(url => {\n      iframe.setAttribute('src', url);\n      if (!this.silentRefreshShowIFrame) {\n        iframe.style['display'] = 'none';\n      }\n      this.document.body.appendChild(iframe);\n    });\n    const errors = this.events.pipe(filter(e => e instanceof OAuthErrorEvent), first());\n    const success = this.events.pipe(filter(e => e.type === 'token_received'), first());\n    const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\n    return race([errors, success, timeout]).pipe(map(e => {\n      if (e instanceof OAuthErrorEvent) {\n        if (e.type === 'silent_refresh_timeout') {\n          this.eventsSubject.next(e);\n        } else {\n          e = new OAuthErrorEvent('silent_refresh_error', e);\n          this.eventsSubject.next(e);\n        }\n        throw e;\n      } else if (e.type === 'token_received') {\n        e = new OAuthSuccessEvent('silently_refreshed');\n        this.eventsSubject.next(e);\n      }\n      return e;\n    })).toPromise();\n  }\n  /**\r\n   * This method exists for backwards compatibility.\r\n   * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n   * and implicit flows.\r\n   */\n  initImplicitFlowInPopup(options) {\n    return this.initLoginFlowInPopup(options);\n  }\n  initLoginFlowInPopup(options) {\n    options = options || {};\n    return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\n      display: 'popup'\n    }).then(url => {\n      return new Promise((resolve, reject) => {\n        /**\r\n         * Error handling section\r\n         */\n        const checkForPopupClosedInterval = 500;\n        let windowRef = null;\n        // If we got no window reference we open a window\n        // else we are using the window already opened\n        if (!options.windowRef) {\n          windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\n        } else if (options.windowRef && !options.windowRef.closed) {\n          windowRef = options.windowRef;\n          windowRef.location.href = url;\n        }\n        let checkForPopupClosedTimer;\n        const tryLogin = hash => {\n          this.tryLogin({\n            customHashFragment: hash,\n            preventClearHashAfterLogin: true,\n            customRedirectUri: this.silentRefreshRedirectUri\n          }).then(() => {\n            cleanup();\n            resolve(true);\n          }, err => {\n            cleanup();\n            reject(err);\n          });\n        };\n        const checkForPopupClosed = () => {\n          if (!windowRef || windowRef.closed) {\n            cleanup();\n            reject(new OAuthErrorEvent('popup_closed', {}));\n          }\n        };\n        if (!windowRef) {\n          reject(new OAuthErrorEvent('popup_blocked', {}));\n        } else {\n          checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\n        }\n        const cleanup = () => {\n          window.clearInterval(checkForPopupClosedTimer);\n          window.removeEventListener('storage', storageListener);\n          window.removeEventListener('message', listener);\n          if (windowRef !== null) {\n            windowRef.close();\n          }\n          windowRef = null;\n        };\n        const listener = e => {\n          const message = this.processMessageEventMessage(e);\n          if (message && message !== null) {\n            window.removeEventListener('storage', storageListener);\n            tryLogin(message);\n          } else {\n            console.log('false event firing');\n          }\n        };\n        const storageListener = event => {\n          if (event.key === 'auth_hash') {\n            window.removeEventListener('message', listener);\n            tryLogin(event.newValue);\n          }\n        };\n        window.addEventListener('message', listener);\n        window.addEventListener('storage', storageListener);\n      });\n    });\n  }\n  calculatePopupFeatures(options) {\n    // Specify an static height and width and calculate centered position\n    const height = options.height || 470;\n    const width = options.width || 500;\n    const left = window.screenLeft + (window.outerWidth - width) / 2;\n    const top = window.screenTop + (window.outerHeight - height) / 2;\n    return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\n  }\n  processMessageEventMessage(e) {\n    let expectedPrefix = '#';\n    if (this.silentRefreshMessagePrefix) {\n      expectedPrefix += this.silentRefreshMessagePrefix;\n    }\n    if (!e || !e.data || typeof e.data !== 'string') {\n      return;\n    }\n    const prefixedMessage = e.data;\n    if (!prefixedMessage.startsWith(expectedPrefix)) {\n      return;\n    }\n    return '#' + prefixedMessage.substr(expectedPrefix.length);\n  }\n  canPerformSessionCheck() {\n    if (!this.sessionChecksEnabled) {\n      return false;\n    }\n    if (!this.sessionCheckIFrameUrl) {\n      console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\n      return false;\n    }\n    const sessionState = this.getSessionState();\n    if (!sessionState) {\n      console.warn('sessionChecksEnabled is activated but there is no session_state');\n      return false;\n    }\n    if (typeof this.document === 'undefined') {\n      return false;\n    }\n    return true;\n  }\n  setupSessionCheckEventListener() {\n    this.removeSessionCheckEventListener();\n    this.sessionCheckEventListener = e => {\n      const origin = e.origin.toLowerCase();\n      const issuer = this.issuer.toLowerCase();\n      this.debug('sessionCheckEventListener');\n      if (!issuer.startsWith(origin)) {\n        this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\n        return;\n      }\n      // only run in Angular zone if it is 'changed' or 'error'\n      switch (e.data) {\n        case 'unchanged':\n          this.ngZone.run(() => {\n            this.handleSessionUnchanged();\n          });\n          break;\n        case 'changed':\n          this.ngZone.run(() => {\n            this.handleSessionChange();\n          });\n          break;\n        case 'error':\n          this.ngZone.run(() => {\n            this.handleSessionError();\n          });\n          break;\n      }\n      this.debug('got info from session check inframe', e);\n    };\n    // prevent Angular from refreshing the view on every message (runs in intervals)\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('message', this.sessionCheckEventListener);\n    });\n  }\n  handleSessionUnchanged() {\n    this.debug('session check', 'session unchanged');\n    this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\n  }\n  handleSessionChange() {\n    this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\n    this.stopSessionCheckTimer();\n    if (!this.useSilentRefresh && this.responseType === 'code') {\n      this.refreshToken().then(_ => {\n        this.debug('token refresh after session change worked');\n      }).catch(_ => {\n        this.debug('token refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      });\n    } else if (this.silentRefreshRedirectUri) {\n      this.silentRefresh().catch(_ => this.debug('silent refresh failed after session changed'));\n      this.waitForSilentRefreshAfterSessionChange();\n    } else {\n      this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n      this.logOut(true);\n    }\n  }\n  waitForSilentRefreshAfterSessionChange() {\n    this.events.pipe(filter(e => e.type === 'silently_refreshed' || e.type === 'silent_refresh_timeout' || e.type === 'silent_refresh_error'), first()).subscribe(e => {\n      if (e.type !== 'silently_refreshed') {\n        this.debug('silent refresh did not work after session changed');\n        this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\n        this.logOut(true);\n      }\n    });\n  }\n  handleSessionError() {\n    this.stopSessionCheckTimer();\n    this.eventsSubject.next(new OAuthInfoEvent('session_error'));\n  }\n  removeSessionCheckEventListener() {\n    if (this.sessionCheckEventListener) {\n      window.removeEventListener('message', this.sessionCheckEventListener);\n      this.sessionCheckEventListener = null;\n    }\n  }\n  initSessionCheck() {\n    if (!this.canPerformSessionCheck()) {\n      return;\n    }\n    const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\n    if (existingIframe) {\n      this.document.body.removeChild(existingIframe);\n    }\n    const iframe = this.document.createElement('iframe');\n    iframe.id = this.sessionCheckIFrameName;\n    this.setupSessionCheckEventListener();\n    const url = this.sessionCheckIFrameUrl;\n    iframe.setAttribute('src', url);\n    iframe.style.display = 'none';\n    this.document.body.appendChild(iframe);\n    this.startSessionCheckTimer();\n  }\n  startSessionCheckTimer() {\n    this.stopSessionCheckTimer();\n    this.ngZone.runOutsideAngular(() => {\n      this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\n    });\n  }\n  stopSessionCheckTimer() {\n    if (this.sessionCheckTimer) {\n      clearInterval(this.sessionCheckTimer);\n      this.sessionCheckTimer = null;\n    }\n  }\n  checkSession() {\n    const iframe = this.document.getElementById(this.sessionCheckIFrameName);\n    if (!iframe) {\n      this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\n    }\n    const sessionState = this.getSessionState();\n    if (!sessionState) {\n      this.stopSessionCheckTimer();\n    }\n    const message = this.clientId + ' ' + sessionState;\n    iframe.contentWindow.postMessage(message, this.issuer);\n  }\n  createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const that = _this2;\n      let redirectUri;\n      if (customRedirectUri) {\n        redirectUri = customRedirectUri;\n      } else {\n        redirectUri = _this2.redirectUri;\n      }\n      const nonce = yield _this2.createAndSaveNonce();\n      if (state) {\n        state = nonce + _this2.config.nonceStateSeparator + encodeURIComponent(state);\n      } else {\n        state = nonce;\n      }\n      if (!_this2.requestAccessToken && !_this2.oidc) {\n        throw new Error('Either requestAccessToken or oidc or both must be true');\n      }\n      if (_this2.config.responseType) {\n        _this2.responseType = _this2.config.responseType;\n      } else {\n        if (_this2.oidc && _this2.requestAccessToken) {\n          _this2.responseType = 'id_token token';\n        } else if (_this2.oidc && !_this2.requestAccessToken) {\n          _this2.responseType = 'id_token';\n        } else {\n          _this2.responseType = 'token';\n        }\n      }\n      const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\n      let scope = that.scope;\n      if (_this2.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\n        scope = 'openid ' + scope;\n      }\n      let url = that.loginUrl + seperationChar + 'response_type=' + encodeURIComponent(that.responseType) + '&client_id=' + encodeURIComponent(that.clientId) + '&state=' + encodeURIComponent(state) + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&scope=' + encodeURIComponent(scope);\n      if (_this2.responseType.includes('code') && !_this2.disablePKCE) {\n        const [challenge, verifier] = yield _this2.createChallangeVerifierPairForPKCE();\n        if (_this2.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n          localStorage.setItem('PKCE_verifier', verifier);\n        } else {\n          _this2._storage.setItem('PKCE_verifier', verifier);\n        }\n        url += '&code_challenge=' + challenge;\n        url += '&code_challenge_method=S256';\n      }\n      if (loginHint) {\n        url += '&login_hint=' + encodeURIComponent(loginHint);\n      }\n      if (that.resource) {\n        url += '&resource=' + encodeURIComponent(that.resource);\n      }\n      if (that.oidc) {\n        url += '&nonce=' + encodeURIComponent(nonce);\n      }\n      if (noPrompt) {\n        url += '&prompt=none';\n      }\n      for (const key of Object.keys(params)) {\n        url += '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n      }\n      if (_this2.customQueryParams) {\n        for (const key of Object.getOwnPropertyNames(_this2.customQueryParams)) {\n          url += '&' + key + '=' + encodeURIComponent(_this2.customQueryParams[key]);\n        }\n      }\n      return url;\n    })();\n  }\n  initImplicitFlowInternal(additionalState = '', params = '') {\n    if (this.inImplicitFlow) {\n      return;\n    }\n    this.inImplicitFlow = true;\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    let addParams = {};\n    let loginHint = null;\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initImplicitFlow', error);\n      this.inImplicitFlow = false;\n    });\n  }\n  /**\r\n   * Starts the implicit flow and redirects to user to\r\n   * the auth servers' login url.\r\n   *\r\n   * @param additionalState Optional state that is passed around.\r\n   *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n   * @param params Hash with additional parameter. If it is a string, it is used for the\r\n   *               parameter loginHint (for the sake of compatibility with former versions)\r\n   */\n  initImplicitFlow(additionalState = '', params = '') {\n    if (this.loginUrl !== '') {\n      this.initImplicitFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(_ => this.initImplicitFlowInternal(additionalState, params));\n    }\n  }\n  /**\r\n   * Reset current implicit flow\r\n   *\r\n   * @description This method allows resetting the current implict flow in order to be initialized again.\r\n   */\n  resetImplicitFlow() {\n    this.inImplicitFlow = false;\n  }\n  callOnTokenReceivedIfExists(options) {\n    const that = this;\n    if (options.onTokenReceived) {\n      const tokenParams = {\n        idClaims: that.getIdentityClaims(),\n        idToken: that.getIdToken(),\n        accessToken: that.getAccessToken(),\n        state: that.state\n      };\n      options.onTokenReceived(tokenParams);\n    }\n  }\n  storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\n    this._storage.setItem('access_token', accessToken);\n    if (grantedScopes && !Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\n    } else if (grantedScopes && Array.isArray(grantedScopes)) {\n      this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\n    }\n    this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\n    if (expiresIn) {\n      const expiresInMilliSeconds = expiresIn * 1000;\n      const now = this.dateTimeService.new();\n      const expiresAt = now.getTime() + expiresInMilliSeconds;\n      this._storage.setItem('expires_at', '' + expiresAt);\n    }\n    if (refreshToken) {\n      this._storage.setItem('refresh_token', refreshToken);\n    }\n    if (customParameters) {\n      customParameters.forEach((value, key) => {\n        this._storage.setItem(key, value);\n      });\n    }\n  }\n  /**\r\n   * Delegates to tryLoginImplicitFlow for the sake of competability\r\n   * @param options Optional options.\r\n   */\n  tryLogin(options = null) {\n    if (this.config.responseType === 'code') {\n      return this.tryLoginCodeFlow(options).then(_ => true);\n    } else {\n      return this.tryLoginImplicitFlow(options);\n    }\n  }\n  parseQueryString(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return {};\n    }\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  tryLoginCodeFlow(options = null) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      options = options || {};\n      const querySource = options.customHashFragment ? options.customHashFragment.substring(1) : window.location.search;\n      const parts = _this3.getCodePartsFromUrl(querySource);\n      const code = parts['code'];\n      const state = parts['state'];\n      const sessionState = parts['session_state'];\n      if (!options.preventClearHashAfterLogin) {\n        const href = location.origin + location.pathname + location.search.replace(/code=[^&\\$]*/, '').replace(/scope=[^&\\$]*/, '').replace(/state=[^&\\$]*/, '').replace(/session_state=[^&\\$]*/, '').replace(/^\\?&/, '?').replace(/&$/, '').replace(/^\\?$/, '').replace(/&+/g, '&').replace(/\\?&/, '?').replace(/\\?$/, '') + location.hash;\n        history.replaceState(null, window.name, href);\n      }\n      let [nonceInState, userState] = _this3.parseState(state);\n      _this3.state = userState;\n      if (parts['error']) {\n        _this3.debug('error trying to login');\n        _this3.handleLoginError(options, parts);\n        const err = new OAuthErrorEvent('code_error', {}, parts);\n        _this3.eventsSubject.next(err);\n        return Promise.reject(err);\n      }\n      if (!options.disableNonceCheck) {\n        if (!nonceInState) {\n          _this3.saveRequestedRoute();\n          return Promise.resolve();\n        }\n        if (!options.disableOAuth2StateCheck) {\n          const success = _this3.validateNonce(nonceInState);\n          if (!success) {\n            const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n            _this3.eventsSubject.next(event);\n            return Promise.reject(event);\n          }\n        }\n      }\n      _this3.storeSessionState(sessionState);\n      if (code) {\n        yield _this3.getTokenFromCode(code, options);\n        _this3.restoreRequestedRoute();\n        return Promise.resolve();\n      } else {\n        return Promise.resolve();\n      }\n    })();\n  }\n  saveRequestedRoute() {\n    if (this.config.preserveRequestedRoute) {\n      this._storage.setItem('requested_route', window.location.pathname + window.location.search);\n    }\n  }\n  restoreRequestedRoute() {\n    const requestedRoute = this._storage.getItem('requested_route');\n    if (requestedRoute) {\n      history.replaceState(null, '', window.location.origin + requestedRoute);\n    }\n  }\n  /**\r\n   * Retrieve the returned auth code from the redirect uri that has been called.\r\n   * If required also check hash, as we could use hash location strategy.\r\n   */\n  getCodePartsFromUrl(queryString) {\n    if (!queryString || queryString.length === 0) {\n      return this.urlHelper.getHashFragmentParams();\n    }\n    // normalize query string\n    if (queryString.charAt(0) === '?') {\n      queryString = queryString.substr(1);\n    }\n    return this.urlHelper.parseQueryString(queryString);\n  }\n  /**\r\n   * Get token using an intermediate code. Works for the Authorization Code flow.\r\n   */\n  getTokenFromCode(code, options) {\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    }).set('grant_type', 'authorization_code').set('code', code).set('redirect_uri', options.customRedirectUri || this.redirectUri);\n    if (!this.disablePKCE) {\n      let PKCEVerifier;\n      if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        PKCEVerifier = localStorage.getItem('PKCE_verifier');\n      } else {\n        PKCEVerifier = this._storage.getItem('PKCE_verifier');\n      }\n      if (!PKCEVerifier) {\n        console.warn('No PKCE verifier found in oauth storage!');\n      } else {\n        params = params.set('code_verifier', PKCEVerifier);\n      }\n    }\n    return this.fetchAndProcessToken(params, options);\n  }\n  fetchAndProcessToken(params, options) {\n    options = options || {};\n    this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    return new Promise((resolve, reject) => {\n      if (this.customQueryParams) {\n        for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\n          params = params.set(key, this.customQueryParams[key]);\n        }\n      }\n      this.http.post(this.tokenEndpoint, params, {\n        headers\n      }).subscribe(tokenResponse => {\n        this.debug('refresh tokenResponse', tokenResponse);\n        this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in || this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\n        if (this.oidc && tokenResponse.id_token) {\n          this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck).then(result => {\n            this.storeIdToken(result);\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n            this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n            resolve(tokenResponse);\n          }).catch(reason => {\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n            console.error('Error validating tokens');\n            console.error(reason);\n            reject(reason);\n          });\n        } else {\n          this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n          this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\n          resolve(tokenResponse);\n        }\n      }, err => {\n        console.error('Error getting token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Checks whether there are tokens in the hash fragment\r\n   * as a result of the implicit flow. These tokens are\r\n   * parsed, validated and used to sign the user in to the\r\n   * current client.\r\n   *\r\n   * @param options Optional options.\r\n   */\n  tryLoginImplicitFlow(options = null) {\n    options = options || {};\n    let parts;\n    if (options.customHashFragment) {\n      parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\n    } else {\n      parts = this.urlHelper.getHashFragmentParams();\n    }\n    this.debug('parsed url', parts);\n    const state = parts['state'];\n    let [nonceInState, userState] = this.parseState(state);\n    this.state = userState;\n    if (parts['error']) {\n      this.debug('error trying to login');\n      this.handleLoginError(options, parts);\n      const err = new OAuthErrorEvent('token_error', {}, parts);\n      this.eventsSubject.next(err);\n      return Promise.reject(err);\n    }\n    const accessToken = parts['access_token'];\n    const idToken = parts['id_token'];\n    const sessionState = parts['session_state'];\n    const grantedScopes = parts['scope'];\n    if (!this.requestAccessToken && !this.oidc) {\n      return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\n    }\n    if (this.requestAccessToken && !accessToken) {\n      return Promise.resolve(false);\n    }\n    if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\n      return Promise.resolve(false);\n    }\n    if (this.oidc && !idToken) {\n      return Promise.resolve(false);\n    }\n    if (this.sessionChecksEnabled && !sessionState) {\n      this.logger.warn('session checks (Session Status Change Notification) ' + 'were activated in the configuration but the id_token ' + 'does not contain a session_state claim');\n    }\n    if (this.requestAccessToken && !options.disableNonceCheck) {\n      const success = this.validateNonce(nonceInState);\n      if (!success) {\n        const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\n        this.eventsSubject.next(event);\n        return Promise.reject(event);\n      }\n    }\n    if (this.requestAccessToken) {\n      this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\n    }\n    if (!this.oidc) {\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n      this.callOnTokenReceivedIfExists(options);\n      return Promise.resolve(true);\n    }\n    return this.processIdToken(idToken, accessToken, options.disableNonceCheck).then(result => {\n      if (options.validationHandler) {\n        return options.validationHandler({\n          accessToken: accessToken,\n          idClaims: result.idTokenClaims,\n          idToken: result.idToken,\n          state: state\n        }).then(_ => result);\n      }\n      return result;\n    }).then(result => {\n      this.storeIdToken(result);\n      this.storeSessionState(sessionState);\n      if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n        this.clearLocationHash();\n      }\n      this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\n      this.callOnTokenReceivedIfExists(options);\n      this.inImplicitFlow = false;\n      return true;\n    }).catch(reason => {\n      this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\n      this.logger.error('Error validating tokens');\n      this.logger.error(reason);\n      return Promise.reject(reason);\n    });\n  }\n  parseState(state) {\n    let nonce = state;\n    let userState = '';\n    if (state) {\n      const idx = state.indexOf(this.config.nonceStateSeparator);\n      if (idx > -1) {\n        nonce = state.substr(0, idx);\n        userState = state.substr(idx + this.config.nonceStateSeparator.length);\n      }\n    }\n    return [nonce, userState];\n  }\n  validateNonce(nonceInState) {\n    let savedNonce;\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n    if (savedNonce !== nonceInState) {\n      const err = 'Validating access_token failed, wrong state/nonce.';\n      console.error(err, savedNonce, nonceInState);\n      return false;\n    }\n    return true;\n  }\n  storeIdToken(idToken) {\n    this._storage.setItem('id_token', idToken.idToken);\n    this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\n    this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\n    this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\n  }\n  storeSessionState(sessionState) {\n    this._storage.setItem('session_state', sessionState);\n  }\n  getSessionState() {\n    return this._storage.getItem('session_state');\n  }\n  handleLoginError(options, parts) {\n    if (options.onLoginError) {\n      options.onLoginError(parts);\n    }\n    if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\n      this.clearLocationHash();\n    }\n  }\n  getClockSkewInMsec(defaultSkewMsc = 600000) {\n    if (!this.clockSkewInSec && this.clockSkewInSec !== 0) {\n      return defaultSkewMsc;\n    }\n    return this.clockSkewInSec * 1000;\n  }\n  /**\r\n   * @ignore\r\n   */\n  processIdToken(idToken, accessToken, skipNonceCheck = false) {\n    const tokenParts = idToken.split('.');\n    const headerBase64 = this.padBase64(tokenParts[0]);\n    const headerJson = b64DecodeUnicode(headerBase64);\n    const header = JSON.parse(headerJson);\n    const claimsBase64 = this.padBase64(tokenParts[1]);\n    const claimsJson = b64DecodeUnicode(claimsBase64);\n    const claims = JSON.parse(claimsJson);\n    let savedNonce;\n    if (this.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n      savedNonce = localStorage.getItem('nonce');\n    } else {\n      savedNonce = this._storage.getItem('nonce');\n    }\n    if (Array.isArray(claims.aud)) {\n      if (claims.aud.every(v => v !== this.clientId)) {\n        const err = 'Wrong audience: ' + claims.aud.join(',');\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    } else {\n      if (claims.aud !== this.clientId) {\n        const err = 'Wrong audience: ' + claims.aud;\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n    }\n    if (!claims.sub) {\n      const err = 'No sub claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    /* For now, we only check whether the sub against\r\n     * silentRefreshSubject when sessionChecksEnabled is on\r\n     * We will reconsider in a later version to do this\r\n     * in every other case too.\r\n     */\n    if (this.sessionChecksEnabled && this.silentRefreshSubject && this.silentRefreshSubject !== claims['sub']) {\n      const err = 'After refreshing, we got an id_token for another user (sub). ' + `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!claims.iat) {\n      const err = 'No iat claim in id_token';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\n      const err = 'Wrong issuer: ' + claims.iss;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    if (!skipNonceCheck && claims.nonce !== savedNonce) {\n      const err = 'Wrong nonce: ' + claims.nonce;\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    // at_hash is not applicable to authorization code flow\n    // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\n    // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\n    // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\n    if (this.hasOwnProperty('responseType') && (this.responseType === 'code' || this.responseType === 'id_token')) {\n      this.disableAtHashCheck = true;\n    }\n    if (!this.disableAtHashCheck && this.requestAccessToken && !claims['at_hash']) {\n      const err = 'An at_hash is needed!';\n      this.logger.warn(err);\n      return Promise.reject(err);\n    }\n    const now = this.dateTimeService.now();\n    const issuedAtMSec = claims.iat * 1000;\n    const expiresAtMSec = claims.exp * 1000;\n    const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\n    if (issuedAtMSec - clockSkewInMSec >= now || expiresAtMSec + clockSkewInMSec - this.decreaseExpirationBySec <= now) {\n      const err = 'Token has expired';\n      console.error(err);\n      console.error({\n        now: now,\n        issuedAtMSec: issuedAtMSec,\n        expiresAtMSec: expiresAtMSec\n      });\n      return Promise.reject(err);\n    }\n    const validationParams = {\n      accessToken: accessToken,\n      idToken: idToken,\n      jwks: this.jwks,\n      idTokenClaims: claims,\n      idTokenHeader: header,\n      loadKeys: () => this.loadJwks()\n    };\n    if (this.disableAtHashCheck) {\n      return this.checkSignature(validationParams).then(_ => {\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        return result;\n      });\n    }\n    return this.checkAtHash(validationParams).then(atHashValid => {\n      if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\n        const err = 'Wrong at_hash';\n        this.logger.warn(err);\n        return Promise.reject(err);\n      }\n      return this.checkSignature(validationParams).then(_ => {\n        const atHashCheckEnabled = !this.disableAtHashCheck;\n        const result = {\n          idToken: idToken,\n          idTokenClaims: claims,\n          idTokenClaimsJson: claimsJson,\n          idTokenHeader: header,\n          idTokenHeaderJson: headerJson,\n          idTokenExpiresAt: expiresAtMSec\n        };\n        if (atHashCheckEnabled) {\n          return this.checkAtHash(validationParams).then(atHashValid => {\n            if (this.requestAccessToken && !atHashValid) {\n              const err = 'Wrong at_hash';\n              this.logger.warn(err);\n              return Promise.reject(err);\n            } else {\n              return result;\n            }\n          });\n        } else {\n          return result;\n        }\n      });\n    });\n  }\n  /**\r\n   * Returns the received claims about the user.\r\n   */\n  getIdentityClaims() {\n    const claims = this._storage.getItem('id_token_claims_obj');\n    if (!claims) {\n      return null;\n    }\n    return JSON.parse(claims);\n  }\n  /**\r\n   * Returns the granted scopes from the server.\r\n   */\n  getGrantedScopes() {\n    const scopes = this._storage.getItem('granted_scopes');\n    if (!scopes) {\n      return null;\n    }\n    return JSON.parse(scopes);\n  }\n  /**\r\n   * Returns the current id_token.\r\n   */\n  getIdToken() {\n    return this._storage ? this._storage.getItem('id_token') : null;\n  }\n  padBase64(base64data) {\n    while (base64data.length % 4 !== 0) {\n      base64data += '=';\n    }\n    return base64data;\n  }\n  /**\r\n   * Returns the current access_token.\r\n   */\n  getAccessToken() {\n    return this._storage ? this._storage.getItem('access_token') : null;\n  }\n  getRefreshToken() {\n    return this._storage ? this._storage.getItem('refresh_token') : null;\n  }\n  /**\r\n   * Returns the expiration date of the access_token\r\n   * as milliseconds since 1970.\r\n   */\n  getAccessTokenExpiration() {\n    if (!this._storage.getItem('expires_at')) {\n      return null;\n    }\n    return parseInt(this._storage.getItem('expires_at'), 10);\n  }\n  getAccessTokenStoredAt() {\n    return parseInt(this._storage.getItem('access_token_stored_at'), 10);\n  }\n  getIdTokenStoredAt() {\n    return parseInt(this._storage.getItem('id_token_stored_at'), 10);\n  }\n  /**\r\n   * Returns the expiration date of the id_token\r\n   * as milliseconds since 1970.\r\n   */\n  getIdTokenExpiration() {\n    if (!this._storage.getItem('id_token_expires_at')) {\n      return null;\n    }\n    return parseInt(this._storage.getItem('id_token_expires_at'), 10);\n  }\n  /**\r\n   * Checkes, whether there is a valid access_token.\r\n   */\n  hasValidAccessToken() {\n    if (this.getAccessToken()) {\n      const expiresAt = this._storage.getItem('expires_at');\n      const now = this.dateTimeService.new();\n      if (expiresAt && parseInt(expiresAt, 10) - this.decreaseExpirationBySec < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\r\n   * Checks whether there is a valid id_token.\r\n   */\n  hasValidIdToken() {\n    if (this.getIdToken()) {\n      const expiresAt = this._storage.getItem('id_token_expires_at');\n      const now = this.dateTimeService.new();\n      if (expiresAt && parseInt(expiresAt, 10) - this.decreaseExpirationBySec < now.getTime() - this.getClockSkewInMsec()) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n  /**\r\n   * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n   */\n  getCustomTokenResponseProperty(requestedProperty) {\n    return this._storage && this.config.customTokenParameters && this.config.customTokenParameters.indexOf(requestedProperty) >= 0 && this._storage.getItem(requestedProperty) !== null ? JSON.parse(this._storage.getItem(requestedProperty)) : null;\n  }\n  /**\r\n   * Returns the auth-header that can be used\r\n   * to transmit the access_token to a service\r\n   */\n  authorizationHeader() {\n    return 'Bearer ' + this.getAccessToken();\n  }\n  logOut(customParameters = {}, state = '') {\n    let noRedirectToLogoutUrl = false;\n    if (typeof customParameters === 'boolean') {\n      noRedirectToLogoutUrl = customParameters;\n      customParameters = {};\n    }\n    const id_token = this.getIdToken();\n    this._storage.removeItem('access_token');\n    this._storage.removeItem('id_token');\n    this._storage.removeItem('refresh_token');\n    if (this.saveNoncesInLocalStorage) {\n      localStorage.removeItem('nonce');\n      localStorage.removeItem('PKCE_verifier');\n    } else {\n      this._storage.removeItem('nonce');\n      this._storage.removeItem('PKCE_verifier');\n    }\n    this._storage.removeItem('expires_at');\n    this._storage.removeItem('id_token_claims_obj');\n    this._storage.removeItem('id_token_expires_at');\n    this._storage.removeItem('id_token_stored_at');\n    this._storage.removeItem('access_token_stored_at');\n    this._storage.removeItem('granted_scopes');\n    this._storage.removeItem('session_state');\n    if (this.config.customTokenParameters) {\n      this.config.customTokenParameters.forEach(customParam => this._storage.removeItem(customParam));\n    }\n    this.silentRefreshSubject = null;\n    this.eventsSubject.next(new OAuthInfoEvent('logout'));\n    if (!this.logoutUrl) {\n      return;\n    }\n    if (noRedirectToLogoutUrl) {\n      return;\n    }\n    // if (!id_token && !this.postLogoutRedirectUri) {\n    //   return;\n    // }\n    let logoutUrl;\n    if (!this.validateUrlForHttps(this.logoutUrl)) {\n      throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    // For backward compatibility\n    if (this.logoutUrl.indexOf('{{') > -1) {\n      logoutUrl = this.logoutUrl.replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token)).replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\n    } else {\n      let params = new HttpParams({\n        encoder: new WebHttpUrlEncodingCodec()\n      });\n      if (id_token) {\n        params = params.set('id_token_hint', id_token);\n      }\n      const postLogoutUrl = this.postLogoutRedirectUri || this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri || '';\n      if (postLogoutUrl) {\n        params = params.set('post_logout_redirect_uri', postLogoutUrl);\n        if (state) {\n          params = params.set('state', state);\n        }\n      }\n      for (let key in customParameters) {\n        params = params.set(key, customParameters[key]);\n      }\n      logoutUrl = this.logoutUrl + (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') + params.toString();\n    }\n    this.config.openUri(logoutUrl);\n  }\n  /**\r\n   * @ignore\r\n   */\n  createAndSaveNonce() {\n    const that = this;\n    return this.createNonce().then(function (nonce) {\n      // Use localStorage for nonce if possible\n      // localStorage is the only storage who survives a\n      // redirect in ALL browsers (also IE)\n      // Otherwiese we'd force teams who have to support\n      // IE into using localStorage for everything\n      if (that.saveNoncesInLocalStorage && typeof window['localStorage'] !== 'undefined') {\n        localStorage.setItem('nonce', nonce);\n      } else {\n        that._storage.setItem('nonce', nonce);\n      }\n      return nonce;\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  ngOnDestroy() {\n    this.clearAccessTokenTimer();\n    this.clearIdTokenTimer();\n    this.removeSilentRefreshEventListener();\n    const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\n    if (silentRefreshFrame) {\n      silentRefreshFrame.remove();\n    }\n    this.stopSessionCheckTimer();\n    this.removeSessionCheckEventListener();\n    const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\n    if (sessionCheckFrame) {\n      sessionCheckFrame.remove();\n    }\n  }\n  createNonce() {\n    return new Promise(resolve => {\n      if (this.rngUrl) {\n        throw new Error('createNonce with rng-web-api has not been implemented so far');\n      }\n      /*\r\n       * This alphabet is from:\r\n       * https://tools.ietf.org/html/rfc7636#section-4.1\r\n       *\r\n       * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n       */\n      const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n      let size = 45;\n      let id = '';\n      const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\n      if (crypto) {\n        let bytes = new Uint8Array(size);\n        crypto.getRandomValues(bytes);\n        // Needed for IE\n        if (!bytes.map) {\n          bytes.map = Array.prototype.map;\n        }\n        bytes = bytes.map(x => unreserved.charCodeAt(x % unreserved.length));\n        id = String.fromCharCode.apply(null, bytes);\n      } else {\n        while (0 < size--) {\n          id += unreserved[Math.random() * unreserved.length | 0];\n        }\n      }\n      resolve(base64UrlEncode(id));\n    });\n  }\n  checkAtHash(params) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this4.tokenValidationHandler) {\n        _this4.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\n        return true;\n      }\n      return _this4.tokenValidationHandler.validateAtHash(params);\n    })();\n  }\n  checkSignature(params) {\n    if (!this.tokenValidationHandler) {\n      this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\n      return Promise.resolve(null);\n    }\n    return this.tokenValidationHandler.validateSignature(params);\n  }\n  /**\r\n   * Start the implicit flow or the code flow,\r\n   * depending on your configuration.\r\n   */\n  initLoginFlow(additionalState = '', params = {}) {\n    if (this.responseType === 'code') {\n      return this.initCodeFlow(additionalState, params);\n    } else {\n      return this.initImplicitFlow(additionalState, params);\n    }\n  }\n  /**\r\n   * Starts the authorization code flow and redirects to user to\r\n   * the auth servers login url.\r\n   */\n  initCodeFlow(additionalState = '', params = {}) {\n    if (this.loginUrl !== '') {\n      this.initCodeFlowInternal(additionalState, params);\n    } else {\n      this.events.pipe(filter(e => e.type === 'discovery_document_loaded')).subscribe(_ => this.initCodeFlowInternal(additionalState, params));\n    }\n  }\n  initCodeFlowInternal(additionalState = '', params = {}) {\n    if (!this.validateUrlForHttps(this.loginUrl)) {\n      throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\n    }\n    let addParams = {};\n    let loginHint = null;\n    if (typeof params === 'string') {\n      loginHint = params;\n    } else if (typeof params === 'object') {\n      addParams = params;\n    }\n    this.createLoginUrl(additionalState, loginHint, null, false, addParams).then(this.config.openUri).catch(error => {\n      console.error('Error in initAuthorizationCodeFlow');\n      console.error(error);\n    });\n  }\n  createChallangeVerifierPairForPKCE() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this5.crypto) {\n        throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\n      }\n      const verifier = yield _this5.createNonce();\n      const challengeRaw = yield _this5.crypto.calcHash(verifier, 'sha-256');\n      const challenge = base64UrlEncode(challengeRaw);\n      return [challenge, verifier];\n    })();\n  }\n  extractRecognizedCustomParameters(tokenResponse) {\n    let foundParameters = new Map();\n    if (!this.config.customTokenParameters) {\n      return foundParameters;\n    }\n    this.config.customTokenParameters.forEach(recognizedParameter => {\n      if (tokenResponse[recognizedParameter]) {\n        foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\n      }\n    });\n    return foundParameters;\n  }\n  /**\r\n   * Revokes the auth token to secure the vulnarability\r\n   * of the token issued allowing the authorization server to clean\r\n   * up any security credentials associated with the authorization\r\n   */\n  revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\n    let revokeEndpoint = this.revocationEndpoint;\n    let accessToken = this.getAccessToken();\n    let refreshToken = this.getRefreshToken();\n    if (!accessToken) {\n      return Promise.resolve();\n    }\n    let params = new HttpParams({\n      encoder: new WebHttpUrlEncodingCodec()\n    });\n    let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\n    if (this.useHttpBasicAuth) {\n      const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\n      headers = headers.set('Authorization', 'Basic ' + header);\n    }\n    if (!this.useHttpBasicAuth) {\n      params = params.set('client_id', this.clientId);\n    }\n    if (!this.useHttpBasicAuth && this.dummyClientSecret) {\n      params = params.set('client_secret', this.dummyClientSecret);\n    }\n    if (this.customQueryParams) {\n      for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\n        params = params.set(key, this.customQueryParams[key]);\n      }\n    }\n    return new Promise((resolve, reject) => {\n      let revokeAccessToken;\n      let revokeRefreshToken;\n      if (accessToken) {\n        let revokationParams = params.set('token', accessToken).set('token_type_hint', 'access_token');\n        revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeAccessToken = of(null);\n      }\n      if (refreshToken) {\n        let revokationParams = params.set('token', refreshToken).set('token_type_hint', 'refresh_token');\n        revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, {\n          headers\n        });\n      } else {\n        revokeRefreshToken = of(null);\n      }\n      if (ignoreCorsIssues) {\n        revokeAccessToken = revokeAccessToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n          return throwError(err);\n        }));\n        revokeRefreshToken = revokeRefreshToken.pipe(catchError(err => {\n          if (err.status === 0) {\n            return of(null);\n          }\n          return throwError(err);\n        }));\n      }\n      combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe(res => {\n        this.logOut(customParameters);\n        resolve(res);\n        this.logger.info('Token successfully revoked');\n      }, err => {\n        this.logger.error('Error revoking token', err);\n        this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\n        reject(err);\n      });\n    });\n  }\n  /**\r\n   * Clear location.hash if it's present\r\n   */\n  clearLocationHash() {\n    // Checking for empty hash is necessary for Firefox\n    // as setting an empty hash to an empty string adds # to the URL\n    if (location.hash != '') {\n      location.hash = '';\n    }\n  }\n}\nOAuthService.ɵfac = function OAuthService_Factory(t) {\n  return new (t || OAuthService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(OAuthStorage, 8), i0.ɵɵinject(ValidationHandler, 8), i0.ɵɵinject(AuthConfig, 8), i0.ɵɵinject(UrlHelperService), i0.ɵɵinject(OAuthLogger), i0.ɵɵinject(HashHandler, 8), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(DateTimeProvider));\n};\nOAuthService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OAuthService,\n  factory: OAuthService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i1.HttpClient\n    }, {\n      type: OAuthStorage,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ValidationHandler,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: AuthConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: UrlHelperService\n    }, {\n      type: OAuthLogger\n    }, {\n      type: HashHandler,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: DateTimeProvider\n    }];\n  }, null);\n})();\nclass OAuthResourceServerErrorHandler {}\nclass OAuthNoopResourceServerErrorHandler {\n  handleError(err) {\n    return throwError(err);\n  }\n}\nclass DefaultOAuthInterceptor {\n  constructor(oAuthService, errorHandler, moduleConfig) {\n    this.oAuthService = oAuthService;\n    this.errorHandler = errorHandler;\n    this.moduleConfig = moduleConfig;\n  }\n  checkUrl(url) {\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\n    }\n    if (this.moduleConfig.resourceServer.allowedUrls) {\n      return !!this.moduleConfig.resourceServer.allowedUrls.find(u => url.toLowerCase().startsWith(u.toLowerCase()));\n    }\n    return true;\n  }\n  intercept(req, next) {\n    const url = req.url.toLowerCase();\n    if (!this.moduleConfig || !this.moduleConfig.resourceServer || !this.checkUrl(url)) {\n      return next.handle(req);\n    }\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n    if (!sendAccessToken) {\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }\n    return merge(of(this.oAuthService.getAccessToken()).pipe(filter(token => !!token)), this.oAuthService.events.pipe(filter(e => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError(_ => of(null)),\n    // timeout is not an error\n    map(_ => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap(token => {\n      if (token) {\n        const header = 'Bearer ' + token;\n        const headers = req.headers.set('Authorization', header);\n        req = req.clone({\n          headers\n        });\n      }\n      return next.handle(req).pipe(catchError(err => this.errorHandler.handleError(err)));\n    }));\n  }\n}\nDefaultOAuthInterceptor.ɵfac = function DefaultOAuthInterceptor_Factory(t) {\n  return new (t || DefaultOAuthInterceptor)(i0.ɵɵinject(OAuthService), i0.ɵɵinject(OAuthResourceServerErrorHandler), i0.ɵɵinject(OAuthModuleConfig, 8));\n};\nDefaultOAuthInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DefaultOAuthInterceptor,\n  factory: DefaultOAuthInterceptor.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DefaultOAuthInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: OAuthService\n    }, {\n      type: OAuthResourceServerErrorHandler\n    }, {\n      type: OAuthModuleConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nfunction createDefaultLogger() {\n  return console;\n}\nfunction createDefaultStorage() {\n  return typeof sessionStorage !== 'undefined' ? sessionStorage : new MemoryStorage();\n}\nfunction provideOAuthClient(config = null, validationHandlerClass = NullValidationHandler) {\n  return makeEnvironmentProviders([OAuthService, UrlHelperService, {\n    provide: OAuthLogger,\n    useFactory: createDefaultLogger\n  }, {\n    provide: OAuthStorage,\n    useFactory: createDefaultStorage\n  }, {\n    provide: ValidationHandler,\n    useClass: validationHandlerClass\n  }, {\n    provide: HashHandler,\n    useClass: DefaultHashHandler\n  }, {\n    provide: OAuthResourceServerErrorHandler,\n    useClass: OAuthNoopResourceServerErrorHandler\n  }, {\n    provide: OAuthModuleConfig,\n    useValue: config\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: DefaultOAuthInterceptor,\n    multi: true\n  }, {\n    provide: DateTimeProvider,\n    useClass: SystemDateTimeProvider\n  }]);\n}\nclass OAuthModule {\n  static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\n    return {\n      ngModule: OAuthModule,\n      providers: [provideOAuthClient(config, validationHandlerClass)]\n    };\n  }\n}\nOAuthModule.ɵfac = function OAuthModule_Factory(t) {\n  return new (t || OAuthModule)();\n};\nOAuthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OAuthModule\n});\nOAuthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OAuthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [],\n      exports: []\n    }]\n  }], null, null);\n})();\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\nclass JwksValidationHandler extends NullValidationHandler {\n  constructor() {\n    super();\n    console.error(err);\n  }\n}\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler, provideOAuthClient };","map":{"version":3,"names":["i0","Injectable","Optional","Inject","makeEnvironmentProviders","NgModule","InjectionToken","DOCUMENT","CommonModule","i1","HttpHeaders","HttpParams","HTTP_INTERCEPTORS","Subject","of","from","race","throwError","combineLatest","merge","filter","tap","debounceTime","delay","switchMap","map","first","catchError","timeout","take","mergeMap","NullValidationHandler","validateSignature","validationParams","Promise","resolve","validateAtHash","OAuthModuleConfig","OAuthResourceServerConfig","DateTimeProvider","SystemDateTimeProvider","now","Date","new","ɵfac","ɵSystemDateTimeProvider_BaseFactory","SystemDateTimeProvider_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","LoginOptions","constructor","disableNonceCheck","preventClearHashAfterLogin","OAuthLogger","OAuthStorage","MemoryStorage","data","Map","getItem","key","get","removeItem","delete","setItem","set","MemoryStorage_Factory","ReceivedTokens","OAuthEvent","OAuthSuccessEvent","info","OAuthInfoEvent","OAuthErrorEvent","reason","params","b64DecodeUnicode","str","base64","replace","decodeURIComponent","atob","split","c","charCodeAt","toString","slice","join","base64UrlEncode","btoa","AuthConfig","json","clientId","redirectUri","postLogoutRedirectUri","redirectUriAsPostLogoutRedirectUriFallback","loginUrl","scope","resource","rngUrl","oidc","requestAccessToken","options","issuer","logoutUrl","clearHashAfterLogin","tokenEndpoint","revocationEndpoint","customTokenParameters","userinfoEndpoint","responseType","showDebugInformation","silentRefreshRedirectUri","silentRefreshMessagePrefix","silentRefreshShowIFrame","siletRefreshTimeout","silentRefreshTimeout","dummyClientSecret","requireHttps","strictDiscoveryDocumentValidation","jwks","customQueryParams","silentRefreshIFrameName","timeoutFactor","sessionChecksEnabled","sessionCheckIntervall","sessionCheckIFrameUrl","sessionCheckIFrameName","disableAtHashCheck","skipSubjectCheck","useIdTokenHintForSilentRefresh","skipIssuerCheck","nonceStateSeparator","useHttpBasicAuth","decreaseExpirationBySec","waitForTokenInMsec","disablePKCE","preserveRequestedRoute","disableIdTokenTimer","checkOrigin","openUri","uri","location","href","Object","assign","WebHttpUrlEncodingCodec","encodeKey","k","encodeURIComponent","encodeValue","v","decodeKey","decodeValue","ValidationHandler","AbstractValidationHandler","_this","_asyncToGenerator","hashAlg","inferHashAlgorithm","idTokenHeader","tokenHash","calcHash","accessToken","leftMostHalf","substr","length","atHash","claimsAtHash","idTokenClaims","console","error","jwtHeader","alg","match","Error","UrlHelperService","getHashFragmentParams","customHashFragment","hash","window","indexOf","questionMarkPosition","parseQueryString","queryString","pairs","pair","separatorIndex","escapedKey","escapedValue","value","i","UrlHelperService_Factory","digestLength","blockSize","K","Uint32Array","hashBlocks","w","p","pos","len","a","b","d","e","f","g","h","u","j","t1","t2","Hash","state","Int32Array","temp","buffer","Uint8Array","bufferLength","bytesHashed","finished","reset","clean","update","dataLength","dataPos","finish","out","left","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","HMAC","inner","outer","pad","istate","ostate","hmac","fillBuffer","counter","num","hkdfSalt","hkdf","salt","okm","hmac_","bufpos","fill","pbkdf2","password","iterations","dkLen","prf","ctr","dk","HashHandler","decodeUTF8","s","TypeError","encodeUTF8","arr","push","String","fromCharCode","DefaultHashHandler","valueToHash","algorithm","candHash","toHashString2","byteArray","result","toHashString","DefaultHashHandler_Factory","OAuthService","ngZone","http","storage","tokenValidationHandler","config","urlHelper","logger","crypto","document","dateTimeService","discoveryDocumentLoaded","eventsSubject","discoveryDocumentLoadedSubject","grantTypesSupported","inImplicitFlow","saveNoncesInLocalStorage","debug","discoveryDocumentLoaded$","asObservable","events","configure","setStorage","sessionStorage","checkLocalStorageAccessable","ua","navigator","userAgent","msie","includes","setupRefreshTimer","test","localStorage","setupSessionCheck","configChanged","restartSessionChecksIfStillLoggedIn","hasValidIdToken","initSessionCheck","restartRefreshTimerIfStillLoggedIn","setupExpirationTimers","pipe","subscribe","setupAutomaticSilentRefresh","listenTo","noPrompt","shouldRunSilentRefresh","clearAutomaticRefreshTimer","automaticRefreshSubscription","_","refreshInternal","catch","useSilentRefresh","refreshToken","silentRefresh","loadDiscoveryDocumentAndTryLogin","loadDiscoveryDocument","then","doc","tryLogin","loadDiscoveryDocumentAndLogin","hasValidAccessToken","initLoginFlow","args","apply","validateUrlFromDiscoveryDocument","url","errors","httpsCheck","validateUrlForHttps","issuerCheck","validateUrlAgainstIssuer","lcUrl","toLowerCase","startsWith","assertUrlNotNullAndCorrectProtocol","description","clearAccessTokenTimer","clearIdTokenTimer","tokenReceivedSubscription","unsubscribe","setupAccessTokenTimer","setupIdTokenTimer","expiration","getAccessTokenExpiration","storedAt","getAccessTokenStoredAt","calcTimeout","runOutsideAngular","accessTokenTimeoutSubscription","run","next","getIdTokenExpiration","getIdTokenStoredAt","idTokenTimeoutSubscription","stopAutomaticRefresh","delta","duration","Math","max","maxTimeoutValue","_storage","fullUrl","reject","endsWith","validateDiscoveryDocument","authorization_endpoint","end_session_endpoint","grant_types_supported","token_endpoint","userinfo_endpoint","jwksUri","jwks_uri","check_session_iframe","revocation_endpoint","loadJwks","discoveryDocument","event","err","warn","fetchTokenUsingPasswordFlowAndLoadUserProfile","userName","headers","fetchTokenUsingPasswordFlow","loadUserProfile","getAccessToken","observe","response","JSON","stringify","parse","body","existingClaims","getIdentityClaims","sub","parameters","username","fetchTokenUsingGrant","grantType","encoder","header","getOwnPropertyNames","keys","post","tokenResponse","storeAccessTokenResponse","access_token","refresh_token","expires_in","fallbackAccessTokenExpirationTimeInSec","extractRecognizedCustomParameters","id_token","processIdToken","storeIdToken","removeSilentRefreshEventListener","silentRefreshPostMessageEventListener","removeEventListener","setupSilentRefreshEventListener","message","processMessageEventMessage","origin","customRedirectUri","addEventListener","claims","getIdToken","existingIframe","getElementById","removeChild","silentRefreshSubject","iframe","createElement","id","createLoginUrl","setAttribute","style","appendChild","success","toPromise","initImplicitFlowInPopup","initLoginFlowInPopup","display","checkForPopupClosedInterval","windowRef","open","calculatePopupFeatures","closed","checkForPopupClosedTimer","cleanup","checkForPopupClosed","setInterval","clearInterval","storageListener","listener","close","log","newValue","height","width","screenLeft","outerWidth","top","screenTop","outerHeight","expectedPrefix","prefixedMessage","canPerformSessionCheck","sessionState","getSessionState","setupSessionCheckEventListener","removeSessionCheckEventListener","sessionCheckEventListener","handleSessionUnchanged","handleSessionChange","handleSessionError","stopSessionCheckTimer","logOut","waitForSilentRefreshAfterSessionChange","startSessionCheckTimer","sessionCheckTimer","checkSession","bind","contentWindow","postMessage","loginHint","_this2","that","nonce","createAndSaveNonce","seperationChar","challenge","verifier","createChallangeVerifierPairForPKCE","initImplicitFlowInternal","additionalState","addParams","initImplicitFlow","resetImplicitFlow","callOnTokenReceivedIfExists","onTokenReceived","tokenParams","idClaims","idToken","expiresIn","grantedScopes","customParameters","Array","isArray","expiresInMilliSeconds","expiresAt","getTime","forEach","tryLoginCodeFlow","tryLoginImplicitFlow","charAt","_this3","querySource","substring","search","parts","getCodePartsFromUrl","code","pathname","history","replaceState","name","nonceInState","userState","parseState","handleLoginError","saveRequestedRoute","disableOAuth2StateCheck","validateNonce","storeSessionState","getTokenFromCode","restoreRequestedRoute","requestedRoute","PKCEVerifier","fetchAndProcessToken","clearLocationHash","validationHandler","idx","savedNonce","idTokenClaimsJson","idTokenExpiresAt","onLoginError","getClockSkewInMsec","defaultSkewMsc","clockSkewInSec","skipNonceCheck","tokenParts","headerBase64","padBase64","headerJson","claimsBase64","claimsJson","aud","every","iat","iss","hasOwnProperty","issuedAtMSec","expiresAtMSec","exp","clockSkewInMSec","loadKeys","checkSignature","idTokenHeaderJson","checkAtHash","atHashValid","atHashCheckEnabled","getGrantedScopes","scopes","base64data","getRefreshToken","parseInt","getCustomTokenResponseProperty","requestedProperty","authorizationHeader","noRedirectToLogoutUrl","customParam","postLogoutUrl","createNonce","ngOnDestroy","silentRefreshFrame","remove","sessionCheckFrame","unreserved","size","self","bytes","getRandomValues","prototype","x","random","_this4","initCodeFlow","initCodeFlowInternal","_this5","challengeRaw","foundParameters","recognizedParameter","revokeTokenAndLogout","ignoreCorsIssues","revokeEndpoint","revokeAccessToken","revokeRefreshToken","revokationParams","status","res","OAuthService_Factory","ɵɵinject","NgZone","HttpClient","decorators","undefined","OAuthResourceServerErrorHandler","OAuthNoopResourceServerErrorHandler","handleError","DefaultOAuthInterceptor","oAuthService","errorHandler","moduleConfig","checkUrl","resourceServer","customUrlValidation","allowedUrls","find","intercept","req","handle","sendAccessToken","clone","DefaultOAuthInterceptor_Factory","createDefaultLogger","createDefaultStorage","provideOAuthClient","validationHandlerClass","provide","useFactory","useClass","useValue","multi","OAuthModule","forRoot","ngModule","providers","OAuthModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","JwksValidationHandler","AUTH_CONFIG"],"sources":["C:/Users/Utkarsh-PC/Desktop/Group37UI/Group37UI/node_modules/angular-oauth2-oidc/fesm2020/angular-oauth2-oidc.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Optional, Inject, makeEnvironmentProviders, NgModule, InjectionToken } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Subject, of, from, race, throwError, combineLatest, merge } from 'rxjs';\nimport { filter, tap, debounceTime, delay, switchMap, map, first, catchError, timeout, take, mergeMap } from 'rxjs/operators';\n\n/**\r\n * A validation handler that isn't validating nothing.\r\n * Can be used to skip validation (at your own risk).\r\n */\r\nclass NullValidationHandler {\r\n    validateSignature(validationParams) {\r\n        return Promise.resolve(null);\r\n    }\r\n    validateAtHash(validationParams) {\r\n        return Promise.resolve(true);\r\n    }\r\n}\n\nclass OAuthModuleConfig {\r\n}\r\nclass OAuthResourceServerConfig {\r\n}\n\nclass DateTimeProvider {\r\n}\r\nclass SystemDateTimeProvider extends DateTimeProvider {\r\n    now() {\r\n        return Date.now();\r\n    }\r\n    new() {\r\n        return new Date();\r\n    }\r\n}\r\nSystemDateTimeProvider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SystemDateTimeProvider, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nSystemDateTimeProvider.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SystemDateTimeProvider });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SystemDateTimeProvider, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * Additional options that can be passed to tryLogin.\r\n */\r\nclass LoginOptions {\r\n    constructor() {\r\n        /**\r\n         * Set this to true to disable the nonce\r\n         * check which is used to avoid\r\n         * replay attacks.\r\n         * This flag should never be true in\r\n         * production environments.\r\n         */\r\n        this.disableNonceCheck = false;\r\n        /**\r\n         * Normally, you want to clear your hash fragment after\r\n         * the lib read the token(s) so that they are not displayed\r\n         * anymore in the url. If not, set this to true. For code flow\r\n         * this controls removing query string values.\r\n         */\r\n        this.preventClearHashAfterLogin = false;\r\n    }\r\n}\r\n/**\r\n * Defines the logging interface the OAuthService uses\r\n * internally. Is compatible with the `console` object,\r\n * but you can provide your own implementation as well\r\n * through dependency injection.\r\n */\r\nclass OAuthLogger {\r\n}\r\n/**\r\n * Defines a simple storage that can be used for\r\n * storing the tokens at client side.\r\n * Is compatible to localStorage and sessionStorage,\r\n * but you can also create your own implementations.\r\n */\r\nclass OAuthStorage {\r\n}\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.data = new Map();\r\n    }\r\n    getItem(key) {\r\n        return this.data.get(key);\r\n    }\r\n    removeItem(key) {\r\n        this.data.delete(key);\r\n    }\r\n    setItem(key, data) {\r\n        this.data.set(key, data);\r\n    }\r\n}\r\nMemoryStorage.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MemoryStorage, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nMemoryStorage.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MemoryStorage });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: MemoryStorage, decorators: [{\r\n            type: Injectable\r\n        }] });\r\n/**\r\n * Represents the received tokens, the received state\r\n * and the parsed claims from the id-token.\r\n */\r\nclass ReceivedTokens {\r\n}\n\nclass OAuthEvent {\r\n    constructor(type) {\r\n        this.type = type;\r\n    }\r\n}\r\nclass OAuthSuccessEvent extends OAuthEvent {\r\n    constructor(type, info = null) {\r\n        super(type);\r\n        this.info = info;\r\n    }\r\n}\r\nclass OAuthInfoEvent extends OAuthEvent {\r\n    constructor(type, info = null) {\r\n        super(type);\r\n        this.info = info;\r\n    }\r\n}\r\nclass OAuthErrorEvent extends OAuthEvent {\r\n    constructor(type, reason, params = null) {\r\n        super(type);\r\n        this.reason = reason;\r\n        this.params = params;\r\n    }\r\n}\n\n// see: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_.22Unicode_Problem.22\r\nfunction b64DecodeUnicode(str) {\r\n    const base64 = str.replace(/\\-/g, '+').replace(/\\_/g, '/');\r\n    return decodeURIComponent(atob(base64)\r\n        .split('')\r\n        .map(function (c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    })\r\n        .join(''));\r\n}\r\nfunction base64UrlEncode(str) {\r\n    const base64 = btoa(str);\r\n    return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n}\n\nclass AuthConfig {\r\n    constructor(json) {\r\n        /**\r\n         * The client's id as registered with the auth server\r\n         */\r\n        this.clientId = '';\r\n        /**\r\n         * The client's redirectUri as registered with the auth server\r\n         */\r\n        this.redirectUri = '';\r\n        /**\r\n         * An optional second redirectUri where the auth server\r\n         * redirects the user to after logging out.\r\n         */\r\n        this.postLogoutRedirectUri = '';\r\n        /**\r\n         * Defines whether to use 'redirectUri' as a replacement\r\n         * of 'postLogoutRedirectUri' if the latter is not set.\r\n         */\r\n        this.redirectUriAsPostLogoutRedirectUriFallback = true;\r\n        /**\r\n         * The auth server's endpoint that allows to log\r\n         * the user in when using implicit flow.\r\n         */\r\n        this.loginUrl = '';\r\n        /**\r\n         * The requested scopes\r\n         */\r\n        this.scope = 'openid profile';\r\n        this.resource = '';\r\n        this.rngUrl = '';\r\n        /**\r\n         * Defines whether to use OpenId Connect during\r\n         * implicit flow.\r\n         */\r\n        this.oidc = true;\r\n        /**\r\n         * Defines whether to request an access token during\r\n         * implicit flow.\r\n         */\r\n        this.requestAccessToken = true;\r\n        this.options = null;\r\n        /**\r\n         * The issuer's uri.\r\n         */\r\n        this.issuer = '';\r\n        /**\r\n         * The logout url.\r\n         */\r\n        this.logoutUrl = '';\r\n        /**\r\n         * Defines whether to clear the hash fragment after logging in.\r\n         */\r\n        this.clearHashAfterLogin = true;\r\n        /**\r\n         * Url of the token endpoint as defined by OpenId Connect and OAuth 2.\r\n         */\r\n        this.tokenEndpoint = null;\r\n        /**\r\n         * Url of the revocation endpoint as defined by OpenId Connect and OAuth 2.\r\n         */\r\n        this.revocationEndpoint = null;\r\n        /**\r\n         * Names of known parameters sent out in the TokenResponse. https://tools.ietf.org/html/rfc6749#section-5.1\r\n         */\r\n        this.customTokenParameters = [];\r\n        /**\r\n         * Url of the userinfo endpoint as defined by OpenId Connect.\r\n         */\r\n        this.userinfoEndpoint = null;\r\n        this.responseType = '';\r\n        /**\r\n         * Defines whether additional debug information should\r\n         * be shown at the console. Note that in certain browsers\r\n         * the verbosity of the console needs to be explicitly set\r\n         * to include Debug level messages.\r\n         */\r\n        this.showDebugInformation = false;\r\n        /**\r\n         * The redirect uri used when doing silent refresh.\r\n         */\r\n        this.silentRefreshRedirectUri = '';\r\n        this.silentRefreshMessagePrefix = '';\r\n        /**\r\n         * Set this to true to display the iframe used for\r\n         * silent refresh for debugging.\r\n         */\r\n        this.silentRefreshShowIFrame = false;\r\n        /**\r\n         * Timeout for silent refresh.\r\n         * @internal\r\n         * depreacted b/c of typo, see silentRefreshTimeout\r\n         */\r\n        this.siletRefreshTimeout = 1000 * 20;\r\n        /**\r\n         * Timeout for silent refresh.\r\n         */\r\n        this.silentRefreshTimeout = 1000 * 20;\r\n        /**\r\n         * Some auth servers don't allow using password flow\r\n         * w/o a client secret while the standards do not\r\n         * demand for it. In this case, you can set a password\r\n         * here. As this password is exposed to the public\r\n         * it does not bring additional security and is therefore\r\n         * as good as using no password.\r\n         */\r\n        this.dummyClientSecret = '';\r\n        /**\r\n         * Defines whether https is required.\r\n         * The default value is remoteOnly which only allows\r\n         * http for localhost, while every other domains need\r\n         * to be used with https.\r\n         */\r\n        this.requireHttps = 'remoteOnly';\r\n        /**\r\n         * Defines whether every url provided by the discovery\r\n         * document has to start with the issuer's url.\r\n         */\r\n        this.strictDiscoveryDocumentValidation = true;\r\n        /**\r\n         * JSON Web Key Set (https://tools.ietf.org/html/rfc7517)\r\n         * with keys used to validate received id_tokens.\r\n         * This is taken out of the disovery document. Can be set manually too.\r\n         */\r\n        this.jwks = null;\r\n        /**\r\n         * Map with additional query parameter that are appended to\r\n         * the request when initializing implicit flow.\r\n         */\r\n        this.customQueryParams = null;\r\n        this.silentRefreshIFrameName = 'angular-oauth-oidc-silent-refresh-iframe';\r\n        /**\r\n         * Defines when the token_timeout event should be raised.\r\n         * If you set this to the default value 0.75, the event\r\n         * is triggered after 75% of the token's life time.\r\n         */\r\n        this.timeoutFactor = 0.75;\r\n        /**\r\n         * If true, the lib will try to check whether the user\r\n         * is still logged in on a regular basis as described\r\n         * in http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n         */\r\n        this.sessionChecksEnabled = false;\r\n        /**\r\n         * Interval in msec for checking the session\r\n         * according to http://openid.net/specs/openid-connect-session-1_0.html#ChangeNotification\r\n         */\r\n        this.sessionCheckIntervall = 3 * 1000;\r\n        /**\r\n         * Url for the iframe used for session checks\r\n         */\r\n        this.sessionCheckIFrameUrl = null;\r\n        /**\r\n         * Name of the iframe to use for session checks\r\n         */\r\n        this.sessionCheckIFrameName = 'angular-oauth-oidc-check-session-iframe';\r\n        /**\r\n         * This property has been introduced to disable at_hash checks\r\n         * and is indented for Identity Provider that does not deliver\r\n         * an at_hash EVEN THOUGH its recommended by the OIDC specs.\r\n         * Of course, when disabling these checks then we are bypassing\r\n         * a security check which means we are more vulnerable.\r\n         */\r\n        this.disableAtHashCheck = false;\r\n        /**\r\n         * Defines wether to check the subject of a refreshed token after silent refresh.\r\n         * Normally, it should be the same as before.\r\n         */\r\n        this.skipSubjectCheck = false;\r\n        this.useIdTokenHintForSilentRefresh = false;\r\n        /**\r\n         * Defined whether to skip the validation of the issuer in the discovery document.\r\n         * Normally, the discovey document's url starts with the url of the issuer.\r\n         */\r\n        this.skipIssuerCheck = false;\r\n        /**\r\n         * final state sent to issuer is built as follows:\r\n         * state = nonce + nonceStateSeparator + additional state\r\n         * Default separator is ';' (encoded %3B).\r\n         * In rare cases, this character might be forbidden or inconvenient to use by the issuer so it can be customized.\r\n         */\r\n        this.nonceStateSeparator = ';';\r\n        /**\r\n         * Set this to true to use HTTP BASIC auth for AJAX calls\r\n         */\r\n        this.useHttpBasicAuth = false;\r\n        /**\r\n         * Decreases the Expiration time of tokens by this number of seconds\r\n         */\r\n        this.decreaseExpirationBySec = 0;\r\n        /**\r\n         * The interceptors waits this time span if there is no token\r\n         */\r\n        this.waitForTokenInMsec = 0;\r\n        /**\r\n         * Code Flow is by defauld used together with PKCI which is also higly recommented.\r\n         * You can disbale it here by setting this flag to true.\r\n         * https://tools.ietf.org/html/rfc7636#section-1.1\r\n         */\r\n        this.disablePKCE = false;\r\n        /**\r\n         * Set this to true to preserve the requested route including query parameters after code flow login.\r\n         * This setting enables deep linking for the code flow.\r\n         */\r\n        this.preserveRequestedRoute = false;\r\n        /**\r\n         * Allows to disable the timer for the id_token used\r\n         * for token refresh\r\n         */\r\n        this.disableIdTokenTimer = false;\r\n        /**\r\n         * Blocks other origins requesting a silent refresh\r\n         */\r\n        this.checkOrigin = false;\r\n        /**\r\n         * This property allows you to override the method that is used to open the login url,\r\n         * allowing a way for implementations to specify their own method of routing to new\r\n         * urls.\r\n         */\r\n        this.openUri = (uri) => {\r\n            location.href = uri;\r\n        };\r\n        if (json) {\r\n            Object.assign(this, json);\r\n        }\r\n    }\r\n}\n\n/**\r\n * This custom encoder allows charactes like +, % and / to be used in passwords\r\n */\r\nclass WebHttpUrlEncodingCodec {\r\n    encodeKey(k) {\r\n        return encodeURIComponent(k);\r\n    }\r\n    encodeValue(v) {\r\n        return encodeURIComponent(v);\r\n    }\r\n    decodeKey(k) {\r\n        return decodeURIComponent(k);\r\n    }\r\n    decodeValue(v) {\r\n        return decodeURIComponent(v);\r\n    }\r\n}\n\n/**\r\n * Interface for Handlers that are hooked in to\r\n * validate tokens.\r\n */\r\nclass ValidationHandler {\r\n}\r\n/**\r\n * This abstract implementation of ValidationHandler already implements\r\n * the method validateAtHash. However, to make use of it,\r\n * you have to override the method calcHash.\r\n */\r\nclass AbstractValidationHandler {\r\n    /**\r\n     * Validates the at_hash in an id_token against the received access_token.\r\n     */\r\n    async validateAtHash(params) {\r\n        let hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\r\n        let tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\r\n        let leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\r\n        let atHash = base64UrlEncode(leftMostHalf);\r\n        let claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\r\n        if (atHash !== claimsAtHash) {\r\n            console.error('exptected at_hash: ' + atHash);\r\n            console.error('actual at_hash: ' + claimsAtHash);\r\n        }\r\n        return atHash === claimsAtHash;\r\n    }\r\n    /**\r\n     * Infers the name of the hash algorithm to use\r\n     * from the alg field of an id_token.\r\n     *\r\n     * @param jwtHeader the id_token's parsed header\r\n     */\r\n    inferHashAlgorithm(jwtHeader) {\r\n        let alg = jwtHeader['alg'];\r\n        if (!alg.match(/^.S[0-9]{3}$/)) {\r\n            throw new Error('Algorithm not supported: ' + alg);\r\n        }\r\n        return 'sha-' + alg.substr(2);\r\n    }\r\n}\n\nclass UrlHelperService {\r\n    getHashFragmentParams(customHashFragment) {\r\n        let hash = customHashFragment || window.location.hash;\r\n        hash = decodeURIComponent(hash);\r\n        if (hash.indexOf('#') !== 0) {\r\n            return {};\r\n        }\r\n        const questionMarkPosition = hash.indexOf('?');\r\n        if (questionMarkPosition > -1) {\r\n            hash = hash.substr(questionMarkPosition + 1);\r\n        }\r\n        else {\r\n            hash = hash.substr(1);\r\n        }\r\n        return this.parseQueryString(hash);\r\n    }\r\n    parseQueryString(queryString) {\r\n        const data = {};\r\n        let pairs, pair, separatorIndex, escapedKey, escapedValue, key, value;\r\n        if (queryString === null) {\r\n            return data;\r\n        }\r\n        pairs = queryString.split('&');\r\n        for (let i = 0; i < pairs.length; i++) {\r\n            pair = pairs[i];\r\n            separatorIndex = pair.indexOf('=');\r\n            if (separatorIndex === -1) {\r\n                escapedKey = pair;\r\n                escapedValue = null;\r\n            }\r\n            else {\r\n                escapedKey = pair.substr(0, separatorIndex);\r\n                escapedValue = pair.substr(separatorIndex + 1);\r\n            }\r\n            key = decodeURIComponent(escapedKey);\r\n            value = decodeURIComponent(escapedValue);\r\n            if (key.substr(0, 1) === '/') {\r\n                key = key.substr(1);\r\n            }\r\n            data[key] = value;\r\n        }\r\n        return data;\r\n    }\r\n}\r\nUrlHelperService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: UrlHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nUrlHelperService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: UrlHelperService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: UrlHelperService, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n// Credits: https://github.com/dchest/fast-sha256-js/tree/master/src\r\n// We add this lib directly b/c the published version of fast-sha256-js\r\n// is commonjs and hence leads to a warning about tree-shakability emitted\r\n// by the Angular CLI\r\n// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\r\n//\r\n// Written in 2014-2016 by Dmitry Chestnykh.\r\n// Public domain, no warranty.\r\n//\r\n// Functions (accept and return Uint8Arrays):\r\n//\r\n//   sha256(message) -> hash\r\n//   sha256.hmac(key, message) -> mac\r\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\r\n//\r\n//  Classes:\r\n//\r\n//   new sha256.Hash()\r\n//   new sha256.HMAC(key)\r\n//\r\nconst digestLength = 32;\r\nconst blockSize = 64;\r\n// SHA-256 constants\r\nconst K = new Uint32Array([\r\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\r\n    0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\r\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\r\n    0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\r\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\r\n    0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\r\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\r\n    0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\r\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\r\n    0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\r\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\r\n]);\r\nfunction hashBlocks(w, v, p, pos, len) {\r\n    let a, b, c, d, e, f, g, h, u, i, j, t1, t2;\r\n    while (len >= 64) {\r\n        a = v[0];\r\n        b = v[1];\r\n        c = v[2];\r\n        d = v[3];\r\n        e = v[4];\r\n        f = v[5];\r\n        g = v[6];\r\n        h = v[7];\r\n        for (i = 0; i < 16; i++) {\r\n            j = pos + i * 4;\r\n            w[i] =\r\n                ((p[j] & 0xff) << 24) |\r\n                    ((p[j + 1] & 0xff) << 16) |\r\n                    ((p[j + 2] & 0xff) << 8) |\r\n                    (p[j + 3] & 0xff);\r\n        }\r\n        for (i = 16; i < 64; i++) {\r\n            u = w[i - 2];\r\n            t1 =\r\n                ((u >>> 17) | (u << (32 - 17))) ^\r\n                    ((u >>> 19) | (u << (32 - 19))) ^\r\n                    (u >>> 10);\r\n            u = w[i - 15];\r\n            t2 =\r\n                ((u >>> 7) | (u << (32 - 7))) ^\r\n                    ((u >>> 18) | (u << (32 - 18))) ^\r\n                    (u >>> 3);\r\n            w[i] = ((t1 + w[i - 7]) | 0) + ((t2 + w[i - 16]) | 0);\r\n        }\r\n        for (i = 0; i < 64; i++) {\r\n            t1 =\r\n                ((((((e >>> 6) | (e << (32 - 6))) ^\r\n                    ((e >>> 11) | (e << (32 - 11))) ^\r\n                    ((e >>> 25) | (e << (32 - 25)))) +\r\n                    ((e & f) ^ (~e & g))) |\r\n                    0) +\r\n                    ((h + ((K[i] + w[i]) | 0)) | 0)) |\r\n                    0;\r\n            t2 =\r\n                ((((a >>> 2) | (a << (32 - 2))) ^\r\n                    ((a >>> 13) | (a << (32 - 13))) ^\r\n                    ((a >>> 22) | (a << (32 - 22)))) +\r\n                    ((a & b) ^ (a & c) ^ (b & c))) |\r\n                    0;\r\n            h = g;\r\n            g = f;\r\n            f = e;\r\n            e = (d + t1) | 0;\r\n            d = c;\r\n            c = b;\r\n            b = a;\r\n            a = (t1 + t2) | 0;\r\n        }\r\n        v[0] += a;\r\n        v[1] += b;\r\n        v[2] += c;\r\n        v[3] += d;\r\n        v[4] += e;\r\n        v[5] += f;\r\n        v[6] += g;\r\n        v[7] += h;\r\n        pos += 64;\r\n        len -= 64;\r\n    }\r\n    return pos;\r\n}\r\n// Hash implements SHA256 hash algorithm.\r\nclass Hash {\r\n    constructor() {\r\n        this.digestLength = digestLength;\r\n        this.blockSize = blockSize;\r\n        // Note: Int32Array is used instead of Uint32Array for performance reasons.\r\n        this.state = new Int32Array(8); // hash state\r\n        this.temp = new Int32Array(64); // temporary state\r\n        this.buffer = new Uint8Array(128); // buffer for data to hash\r\n        this.bufferLength = 0; // number of bytes in buffer\r\n        this.bytesHashed = 0; // number of total bytes hashed\r\n        this.finished = false; // indicates whether the hash was finalized\r\n        this.reset();\r\n    }\r\n    // Resets hash state making it possible\r\n    // to re-use this instance to hash other data.\r\n    reset() {\r\n        this.state[0] = 0x6a09e667;\r\n        this.state[1] = 0xbb67ae85;\r\n        this.state[2] = 0x3c6ef372;\r\n        this.state[3] = 0xa54ff53a;\r\n        this.state[4] = 0x510e527f;\r\n        this.state[5] = 0x9b05688c;\r\n        this.state[6] = 0x1f83d9ab;\r\n        this.state[7] = 0x5be0cd19;\r\n        this.bufferLength = 0;\r\n        this.bytesHashed = 0;\r\n        this.finished = false;\r\n        return this;\r\n    }\r\n    // Cleans internal buffers and re-initializes hash state.\r\n    clean() {\r\n        for (let i = 0; i < this.buffer.length; i++) {\r\n            this.buffer[i] = 0;\r\n        }\r\n        for (let i = 0; i < this.temp.length; i++) {\r\n            this.temp[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    // Updates hash state with the given data.\r\n    //\r\n    // Optionally, length of the data can be specified to hash\r\n    // fewer bytes than data.length.\r\n    //\r\n    // Throws error when trying to update already finalized hash:\r\n    // instance must be reset to use it again.\r\n    update(data, dataLength = data.length) {\r\n        if (this.finished) {\r\n            throw new Error(\"SHA256: can't update because hash was finished.\");\r\n        }\r\n        let dataPos = 0;\r\n        this.bytesHashed += dataLength;\r\n        if (this.bufferLength > 0) {\r\n            while (this.bufferLength < 64 && dataLength > 0) {\r\n                this.buffer[this.bufferLength++] = data[dataPos++];\r\n                dataLength--;\r\n            }\r\n            if (this.bufferLength === 64) {\r\n                hashBlocks(this.temp, this.state, this.buffer, 0, 64);\r\n                this.bufferLength = 0;\r\n            }\r\n        }\r\n        if (dataLength >= 64) {\r\n            dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\r\n            dataLength %= 64;\r\n        }\r\n        while (dataLength > 0) {\r\n            this.buffer[this.bufferLength++] = data[dataPos++];\r\n            dataLength--;\r\n        }\r\n        return this;\r\n    }\r\n    // Finalizes hash state and puts hash into out.\r\n    //\r\n    // If hash was already finalized, puts the same value.\r\n    finish(out) {\r\n        if (!this.finished) {\r\n            const bytesHashed = this.bytesHashed;\r\n            const left = this.bufferLength;\r\n            const bitLenHi = (bytesHashed / 0x20000000) | 0;\r\n            const bitLenLo = bytesHashed << 3;\r\n            const padLength = bytesHashed % 64 < 56 ? 64 : 128;\r\n            this.buffer[left] = 0x80;\r\n            for (let i = left + 1; i < padLength - 8; i++) {\r\n                this.buffer[i] = 0;\r\n            }\r\n            this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff;\r\n            this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\r\n            this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\r\n            this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\r\n            this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\r\n            this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\r\n            this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\r\n            this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\r\n            hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\r\n            this.finished = true;\r\n        }\r\n        for (let i = 0; i < 8; i++) {\r\n            out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff;\r\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\r\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\r\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\r\n        }\r\n        return this;\r\n    }\r\n    // Returns the final hash digest.\r\n    digest() {\r\n        const out = new Uint8Array(this.digestLength);\r\n        this.finish(out);\r\n        return out;\r\n    }\r\n    // Internal function for use in HMAC for optimization.\r\n    _saveState(out) {\r\n        for (let i = 0; i < this.state.length; i++) {\r\n            out[i] = this.state[i];\r\n        }\r\n    }\r\n    // Internal function for use in HMAC for optimization.\r\n    _restoreState(from, bytesHashed) {\r\n        for (let i = 0; i < this.state.length; i++) {\r\n            this.state[i] = from[i];\r\n        }\r\n        this.bytesHashed = bytesHashed;\r\n        this.finished = false;\r\n        this.bufferLength = 0;\r\n    }\r\n}\r\n// HMAC implements HMAC-SHA256 message authentication algorithm.\r\nclass HMAC {\r\n    constructor(key) {\r\n        this.inner = new Hash();\r\n        this.outer = new Hash();\r\n        this.blockSize = this.inner.blockSize;\r\n        this.digestLength = this.inner.digestLength;\r\n        const pad = new Uint8Array(this.blockSize);\r\n        if (key.length > this.blockSize) {\r\n            new Hash().update(key).finish(pad).clean();\r\n        }\r\n        else {\r\n            for (let i = 0; i < key.length; i++) {\r\n                pad[i] = key[i];\r\n            }\r\n        }\r\n        for (let i = 0; i < pad.length; i++) {\r\n            pad[i] ^= 0x36;\r\n        }\r\n        this.inner.update(pad);\r\n        for (let i = 0; i < pad.length; i++) {\r\n            pad[i] ^= 0x36 ^ 0x5c;\r\n        }\r\n        this.outer.update(pad);\r\n        this.istate = new Uint32Array(8);\r\n        this.ostate = new Uint32Array(8);\r\n        this.inner._saveState(this.istate);\r\n        this.outer._saveState(this.ostate);\r\n        for (let i = 0; i < pad.length; i++) {\r\n            pad[i] = 0;\r\n        }\r\n    }\r\n    // Returns HMAC state to the state initialized with key\r\n    // to make it possible to run HMAC over the other data with the same\r\n    // key without creating a new instance.\r\n    reset() {\r\n        this.inner._restoreState(this.istate, this.inner.blockSize);\r\n        this.outer._restoreState(this.ostate, this.outer.blockSize);\r\n        return this;\r\n    }\r\n    // Cleans HMAC state.\r\n    clean() {\r\n        for (let i = 0; i < this.istate.length; i++) {\r\n            this.ostate[i] = this.istate[i] = 0;\r\n        }\r\n        this.inner.clean();\r\n        this.outer.clean();\r\n    }\r\n    // Updates state with provided data.\r\n    update(data) {\r\n        this.inner.update(data);\r\n        return this;\r\n    }\r\n    // Finalizes HMAC and puts the result in out.\r\n    finish(out) {\r\n        if (this.outer.finished) {\r\n            this.outer.finish(out);\r\n        }\r\n        else {\r\n            this.inner.finish(out);\r\n            this.outer.update(out, this.digestLength).finish(out);\r\n        }\r\n        return this;\r\n    }\r\n    // Returns message authentication code.\r\n    digest() {\r\n        const out = new Uint8Array(this.digestLength);\r\n        this.finish(out);\r\n        return out;\r\n    }\r\n}\r\n// Returns SHA256 hash of data.\r\nfunction hash(data) {\r\n    const h = new Hash().update(data);\r\n    const digest = h.digest();\r\n    h.clean();\r\n    return digest;\r\n}\r\n// Returns HMAC-SHA256 of data under the key.\r\nfunction hmac(key, data) {\r\n    const h = new HMAC(key).update(data);\r\n    const digest = h.digest();\r\n    h.clean();\r\n    return digest;\r\n}\r\n// Fills hkdf buffer like this:\r\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\r\nfunction fillBuffer(buffer, hmac, info, counter) {\r\n    // Counter is a byte value: check if it overflowed.\r\n    const num = counter[0];\r\n    if (num === 0) {\r\n        throw new Error('hkdf: cannot expand more');\r\n    }\r\n    // Prepare HMAC instance for new data with old key.\r\n    hmac.reset();\r\n    // Hash in previous output if it was generated\r\n    // (i.e. counter is greater than 1).\r\n    if (num > 1) {\r\n        hmac.update(buffer);\r\n    }\r\n    // Hash in info if it exists.\r\n    if (info) {\r\n        hmac.update(info);\r\n    }\r\n    // Hash in the counter.\r\n    hmac.update(counter);\r\n    // Output result to buffer and clean HMAC instance.\r\n    hmac.finish(buffer);\r\n    // Increment counter inside typed array, this works properly.\r\n    counter[0]++;\r\n}\r\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\r\nfunction hkdf(key, salt = hkdfSalt, info, length = 32) {\r\n    const counter = new Uint8Array([1]);\r\n    // HKDF-Extract uses salt as HMAC key, and key as data.\r\n    const okm = hmac(salt, key);\r\n    // Initialize HMAC for expanding with extracted key.\r\n    // Ensure no collisions with `hmac` function.\r\n    const hmac_ = new HMAC(okm);\r\n    // Allocate buffer.\r\n    const buffer = new Uint8Array(hmac_.digestLength);\r\n    let bufpos = buffer.length;\r\n    const out = new Uint8Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        if (bufpos === buffer.length) {\r\n            fillBuffer(buffer, hmac_, info, counter);\r\n            bufpos = 0;\r\n        }\r\n        out[i] = buffer[bufpos++];\r\n    }\r\n    hmac_.clean();\r\n    buffer.fill(0);\r\n    counter.fill(0);\r\n    return out;\r\n}\r\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\r\n// with the given number of iterations.\r\n//\r\n// The number of bytes returned is equal to dkLen.\r\n//\r\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\r\nfunction pbkdf2(password, salt, iterations, dkLen) {\r\n    const prf = new HMAC(password);\r\n    const len = prf.digestLength;\r\n    const ctr = new Uint8Array(4);\r\n    const t = new Uint8Array(len);\r\n    const u = new Uint8Array(len);\r\n    const dk = new Uint8Array(dkLen);\r\n    for (let i = 0; i * len < dkLen; i++) {\r\n        let c = i + 1;\r\n        ctr[0] = (c >>> 24) & 0xff;\r\n        ctr[1] = (c >>> 16) & 0xff;\r\n        ctr[2] = (c >>> 8) & 0xff;\r\n        ctr[3] = (c >>> 0) & 0xff;\r\n        prf.reset();\r\n        prf.update(salt);\r\n        prf.update(ctr);\r\n        prf.finish(u);\r\n        for (let j = 0; j < len; j++) {\r\n            t[j] = u[j];\r\n        }\r\n        for (let j = 2; j <= iterations; j++) {\r\n            prf.reset();\r\n            prf.update(u).finish(u);\r\n            for (let k = 0; k < len; k++) {\r\n                t[k] ^= u[k];\r\n            }\r\n        }\r\n        for (let j = 0; j < len && i * len + j < dkLen; j++) {\r\n            dk[i * len + j] = t[j];\r\n        }\r\n    }\r\n    for (let i = 0; i < len; i++) {\r\n        t[i] = u[i] = 0;\r\n    }\r\n    for (let i = 0; i < 4; i++) {\r\n        ctr[i] = 0;\r\n    }\r\n    prf.clean();\r\n    return dk;\r\n}\n\n/**\r\n * Abstraction for crypto algorithms\r\n */\r\nclass HashHandler {\r\n}\r\nfunction decodeUTF8(s) {\r\n    if (typeof s !== 'string')\r\n        throw new TypeError('expected string');\r\n    var i, d = s, b = new Uint8Array(d.length);\r\n    for (i = 0; i < d.length; i++)\r\n        b[i] = d.charCodeAt(i);\r\n    return b;\r\n}\r\nfunction encodeUTF8(arr) {\r\n    var i, s = [];\r\n    for (i = 0; i < arr.length; i++)\r\n        s.push(String.fromCharCode(arr[i]));\r\n    return s.join('');\r\n}\r\nclass DefaultHashHandler {\r\n    async calcHash(valueToHash, algorithm) {\r\n        // const encoder = new TextEncoder();\r\n        // const hashArray = await window.crypto.subtle.digest(algorithm, data);\r\n        // const data = encoder.encode(valueToHash);\r\n        // const fhash = fsha256(valueToHash);\r\n        const candHash = encodeUTF8(hash(decodeUTF8(valueToHash)));\r\n        // const hashArray = (sha256 as any).array(valueToHash);\r\n        // // const hashString = this.toHashString(hashArray);\r\n        // const hashString = this.toHashString2(hashArray);\r\n        // console.debug('hash orig - cand', candHash, hashString);\r\n        // alert(1);\r\n        return candHash;\r\n    }\r\n    toHashString2(byteArray) {\r\n        let result = '';\r\n        for (let e of byteArray) {\r\n            result += String.fromCharCode(e);\r\n        }\r\n        return result;\r\n    }\r\n    toHashString(buffer) {\r\n        const byteArray = new Uint8Array(buffer);\r\n        let result = '';\r\n        for (let e of byteArray) {\r\n            result += String.fromCharCode(e);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nDefaultHashHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DefaultHashHandler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\r\nDefaultHashHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DefaultHashHandler });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DefaultHashHandler, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * Service for logging in and logging out with\r\n * OIDC and OAuth2. Supports implicit flow and\r\n * password flow.\r\n */\r\nclass OAuthService extends AuthConfig {\r\n    constructor(ngZone, http, storage, tokenValidationHandler, config, urlHelper, logger, crypto, document, dateTimeService) {\r\n        super();\r\n        this.ngZone = ngZone;\r\n        this.http = http;\r\n        this.config = config;\r\n        this.urlHelper = urlHelper;\r\n        this.logger = logger;\r\n        this.crypto = crypto;\r\n        this.dateTimeService = dateTimeService;\r\n        /**\r\n         * @internal\r\n         * Deprecated:  use property events instead\r\n         */\r\n        this.discoveryDocumentLoaded = false;\r\n        /**\r\n         * The received (passed around) state, when logging\r\n         * in with implicit flow.\r\n         */\r\n        this.state = '';\r\n        this.eventsSubject = new Subject();\r\n        this.discoveryDocumentLoadedSubject = new Subject();\r\n        this.grantTypesSupported = [];\r\n        this.inImplicitFlow = false;\r\n        this.saveNoncesInLocalStorage = false;\r\n        this.debug('angular-oauth2-oidc v10');\r\n        // See https://github.com/manfredsteyer/angular-oauth2-oidc/issues/773 for why this is needed\r\n        this.document = document;\r\n        if (!config) {\r\n            config = {};\r\n        }\r\n        this.discoveryDocumentLoaded$ =\r\n            this.discoveryDocumentLoadedSubject.asObservable();\r\n        this.events = this.eventsSubject.asObservable();\r\n        if (tokenValidationHandler) {\r\n            this.tokenValidationHandler = tokenValidationHandler;\r\n        }\r\n        if (config) {\r\n            this.configure(config);\r\n        }\r\n        try {\r\n            if (storage) {\r\n                this.setStorage(storage);\r\n            }\r\n            else if (typeof sessionStorage !== 'undefined') {\r\n                this.setStorage(sessionStorage);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error('No OAuthStorage provided and cannot access default (sessionStorage).' +\r\n                'Consider providing a custom OAuthStorage implementation in your module.', e);\r\n        }\r\n        // in IE, sessionStorage does not always survive a redirect\r\n        if (this.checkLocalStorageAccessable()) {\r\n            const ua = window?.navigator?.userAgent;\r\n            const msie = ua?.includes('MSIE ') || ua?.includes('Trident');\r\n            if (msie) {\r\n                this.saveNoncesInLocalStorage = true;\r\n            }\r\n        }\r\n        this.setupRefreshTimer();\r\n    }\r\n    checkLocalStorageAccessable() {\r\n        if (typeof window === 'undefined')\r\n            return false;\r\n        const test = 'test';\r\n        try {\r\n            if (typeof window['localStorage'] === 'undefined')\r\n                return false;\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Use this method to configure the service\r\n     * @param config the configuration\r\n     */\r\n    configure(config) {\r\n        // For the sake of downward compatibility with\r\n        // original configuration API\r\n        Object.assign(this, new AuthConfig(), config);\r\n        this.config = Object.assign({}, new AuthConfig(), config);\r\n        if (this.sessionChecksEnabled) {\r\n            this.setupSessionCheck();\r\n        }\r\n        this.configChanged();\r\n    }\r\n    configChanged() {\r\n        this.setupRefreshTimer();\r\n    }\r\n    restartSessionChecksIfStillLoggedIn() {\r\n        if (this.hasValidIdToken()) {\r\n            this.initSessionCheck();\r\n        }\r\n    }\r\n    restartRefreshTimerIfStillLoggedIn() {\r\n        this.setupExpirationTimers();\r\n    }\r\n    setupSessionCheck() {\r\n        this.events\r\n            .pipe(filter((e) => e.type === 'token_received'))\r\n            .subscribe((e) => {\r\n            this.initSessionCheck();\r\n        });\r\n    }\r\n    /**\r\n     * Will setup up silent refreshing for when the token is\r\n     * about to expire. When the user is logged out via this.logOut method, the\r\n     * silent refreshing will pause and not refresh the tokens until the user is\r\n     * logged back in via receiving a new token.\r\n     * @param params Additional parameter to pass\r\n     * @param listenTo Setup automatic refresh of a specific token type\r\n     */\r\n    setupAutomaticSilentRefresh(params = {}, listenTo, noPrompt = true) {\r\n        let shouldRunSilentRefresh = true;\r\n        this.clearAutomaticRefreshTimer();\r\n        this.automaticRefreshSubscription = this.events\r\n            .pipe(tap((e) => {\r\n            if (e.type === 'token_received') {\r\n                shouldRunSilentRefresh = true;\r\n            }\r\n            else if (e.type === 'logout') {\r\n                shouldRunSilentRefresh = false;\r\n            }\r\n        }), filter((e) => e.type === 'token_expires' &&\r\n            (listenTo == null || listenTo === 'any' || e.info === listenTo)), debounceTime(1000))\r\n            .subscribe((_) => {\r\n            if (shouldRunSilentRefresh) {\r\n                // this.silentRefresh(params, noPrompt).catch(_ => {\r\n                this.refreshInternal(params, noPrompt).catch((_) => {\r\n                    this.debug('Automatic silent refresh did not work');\r\n                });\r\n            }\r\n        });\r\n        this.restartRefreshTimerIfStillLoggedIn();\r\n    }\r\n    refreshInternal(params, noPrompt) {\r\n        if (!this.useSilentRefresh && this.responseType === 'code') {\r\n            return this.refreshToken();\r\n        }\r\n        else {\r\n            return this.silentRefresh(params, noPrompt);\r\n        }\r\n    }\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocument(...)` and\r\n     * directly chains using the `then(...)` part of the promise to call\r\n     * the `tryLogin(...)` method.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    loadDiscoveryDocumentAndTryLogin(options = null) {\r\n        return this.loadDiscoveryDocument().then((doc) => {\r\n            return this.tryLogin(options);\r\n        });\r\n    }\r\n    /**\r\n     * Convenience method that first calls `loadDiscoveryDocumentAndTryLogin(...)`\r\n     * and if then chains to `initLoginFlow()`, but only if there is no valid\r\n     * IdToken or no valid AccessToken.\r\n     *\r\n     * @param options LoginOptions to pass through to `tryLogin(...)`\r\n     */\r\n    loadDiscoveryDocumentAndLogin(options = null) {\r\n        options = options || {};\r\n        return this.loadDiscoveryDocumentAndTryLogin(options).then((_) => {\r\n            if (!this.hasValidIdToken() || !this.hasValidAccessToken()) {\r\n                const state = typeof options.state === 'string' ? options.state : '';\r\n                this.initLoginFlow(state);\r\n                return false;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        });\r\n    }\r\n    debug(...args) {\r\n        if (this.showDebugInformation) {\r\n            this.logger.debug.apply(this.logger, args);\r\n        }\r\n    }\r\n    validateUrlFromDiscoveryDocument(url) {\r\n        const errors = [];\r\n        const httpsCheck = this.validateUrlForHttps(url);\r\n        const issuerCheck = this.validateUrlAgainstIssuer(url);\r\n        if (!httpsCheck) {\r\n            errors.push('https for all urls required. Also for urls received by discovery.');\r\n        }\r\n        if (!issuerCheck) {\r\n            errors.push('Every url in discovery document has to start with the issuer url.' +\r\n                'Also see property strictDiscoveryDocumentValidation.');\r\n        }\r\n        return errors;\r\n    }\r\n    validateUrlForHttps(url) {\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        const lcUrl = url.toLowerCase();\r\n        if (this.requireHttps === false) {\r\n            return true;\r\n        }\r\n        if ((lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/) ||\r\n            lcUrl.match(/^http:\\/\\/localhost($|[:\\/])/)) &&\r\n            this.requireHttps === 'remoteOnly') {\r\n            return true;\r\n        }\r\n        return lcUrl.startsWith('https://');\r\n    }\r\n    assertUrlNotNullAndCorrectProtocol(url, description) {\r\n        if (!url) {\r\n            throw new Error(`'${description}' should not be null`);\r\n        }\r\n        if (!this.validateUrlForHttps(url)) {\r\n            throw new Error(`'${description}' must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).`);\r\n        }\r\n    }\r\n    validateUrlAgainstIssuer(url) {\r\n        if (!this.strictDiscoveryDocumentValidation) {\r\n            return true;\r\n        }\r\n        if (!url) {\r\n            return true;\r\n        }\r\n        return url.toLowerCase().startsWith(this.issuer.toLowerCase());\r\n    }\r\n    setupRefreshTimer() {\r\n        if (typeof window === 'undefined') {\r\n            this.debug('timer not supported on this plattform');\r\n            return;\r\n        }\r\n        if (this.hasValidIdToken() || this.hasValidAccessToken()) {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        }\r\n        if (this.tokenReceivedSubscription)\r\n            this.tokenReceivedSubscription.unsubscribe();\r\n        this.tokenReceivedSubscription = this.events\r\n            .pipe(filter((e) => e.type === 'token_received'))\r\n            .subscribe((_) => {\r\n            this.clearAccessTokenTimer();\r\n            this.clearIdTokenTimer();\r\n            this.setupExpirationTimers();\r\n        });\r\n    }\r\n    setupExpirationTimers() {\r\n        if (this.hasValidAccessToken()) {\r\n            this.setupAccessTokenTimer();\r\n        }\r\n        if (!this.disableIdTokenTimer && this.hasValidIdToken()) {\r\n            this.setupIdTokenTimer();\r\n        }\r\n    }\r\n    setupAccessTokenTimer() {\r\n        const expiration = this.getAccessTokenExpiration();\r\n        const storedAt = this.getAccessTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.accessTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'access_token'))\r\n                .pipe(delay(timeout))\r\n                .subscribe((e) => {\r\n                this.ngZone.run(() => {\r\n                    this.eventsSubject.next(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    setupIdTokenTimer() {\r\n        const expiration = this.getIdTokenExpiration();\r\n        const storedAt = this.getIdTokenStoredAt();\r\n        const timeout = this.calcTimeout(storedAt, expiration);\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.idTokenTimeoutSubscription = of(new OAuthInfoEvent('token_expires', 'id_token'))\r\n                .pipe(delay(timeout))\r\n                .subscribe((e) => {\r\n                this.ngZone.run(() => {\r\n                    this.eventsSubject.next(e);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Stops timers for automatic refresh.\r\n     * To restart it, call setupAutomaticSilentRefresh again.\r\n     */\r\n    stopAutomaticRefresh() {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.clearAutomaticRefreshTimer();\r\n    }\r\n    clearAccessTokenTimer() {\r\n        if (this.accessTokenTimeoutSubscription) {\r\n            this.accessTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n    clearIdTokenTimer() {\r\n        if (this.idTokenTimeoutSubscription) {\r\n            this.idTokenTimeoutSubscription.unsubscribe();\r\n        }\r\n    }\r\n    clearAutomaticRefreshTimer() {\r\n        if (this.automaticRefreshSubscription) {\r\n            this.automaticRefreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    calcTimeout(storedAt, expiration) {\r\n        const now = this.dateTimeService.now();\r\n        const delta = (expiration - storedAt) * this.timeoutFactor - (now - storedAt);\r\n        const duration = Math.max(0, delta);\r\n        const maxTimeoutValue = 2147483647;\r\n        return duration > maxTimeoutValue ? maxTimeoutValue : duration;\r\n    }\r\n    /**\r\n     * DEPRECATED. Use a provider for OAuthStorage instead:\r\n     *\r\n     * { provide: OAuthStorage, useFactory: oAuthStorageFactory }\r\n     * export function oAuthStorageFactory(): OAuthStorage { return localStorage; }\r\n     * Sets a custom storage used to store the received\r\n     * tokens on client side. By default, the browser's\r\n     * sessionStorage is used.\r\n     * @ignore\r\n     *\r\n     * @param storage\r\n     */\r\n    setStorage(storage) {\r\n        this._storage = storage;\r\n        this.configChanged();\r\n    }\r\n    /**\r\n     * Loads the discovery document to configure most\r\n     * properties of this service. The url of the discovery\r\n     * document is infered from the issuer's url according\r\n     * to the OpenId Connect spec. To use another url you\r\n     * can pass it to to optional parameter fullUrl.\r\n     *\r\n     * @param fullUrl\r\n     */\r\n    loadDiscoveryDocument(fullUrl = null) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!fullUrl) {\r\n                fullUrl = this.issuer || '';\r\n                if (!fullUrl.endsWith('/')) {\r\n                    fullUrl += '/';\r\n                }\r\n                fullUrl += '.well-known/openid-configuration';\r\n            }\r\n            if (!this.validateUrlForHttps(fullUrl)) {\r\n                reject(\"issuer  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n                return;\r\n            }\r\n            this.http.get(fullUrl).subscribe((doc) => {\r\n                if (!this.validateDiscoveryDocument(doc)) {\r\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_validation_error', null));\r\n                    reject('discovery_document_validation_error');\r\n                    return;\r\n                }\r\n                this.loginUrl = doc.authorization_endpoint;\r\n                this.logoutUrl = doc.end_session_endpoint || this.logoutUrl;\r\n                this.grantTypesSupported = doc.grant_types_supported;\r\n                this.issuer = doc.issuer;\r\n                this.tokenEndpoint = doc.token_endpoint;\r\n                this.userinfoEndpoint =\r\n                    doc.userinfo_endpoint || this.userinfoEndpoint;\r\n                this.jwksUri = doc.jwks_uri;\r\n                this.sessionCheckIFrameUrl =\r\n                    doc.check_session_iframe || this.sessionCheckIFrameUrl;\r\n                this.discoveryDocumentLoaded = true;\r\n                this.discoveryDocumentLoadedSubject.next(doc);\r\n                this.revocationEndpoint =\r\n                    doc.revocation_endpoint || this.revocationEndpoint;\r\n                if (this.sessionChecksEnabled) {\r\n                    this.restartSessionChecksIfStillLoggedIn();\r\n                }\r\n                this.loadJwks()\r\n                    .then((jwks) => {\r\n                    const result = {\r\n                        discoveryDocument: doc,\r\n                        jwks: jwks,\r\n                    };\r\n                    const event = new OAuthSuccessEvent('discovery_document_loaded', result);\r\n                    this.eventsSubject.next(event);\r\n                    resolve(event);\r\n                    return;\r\n                })\r\n                    .catch((err) => {\r\n                    this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\r\n                    reject(err);\r\n                    return;\r\n                });\r\n            }, (err) => {\r\n                this.logger.error('error loading discovery document', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('discovery_document_load_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    loadJwks() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.jwksUri) {\r\n                this.http.get(this.jwksUri).subscribe((jwks) => {\r\n                    this.jwks = jwks;\r\n                    // this.eventsSubject.next(\r\n                    //   new OAuthSuccessEvent('discovery_document_loaded')\r\n                    // );\r\n                    resolve(jwks);\r\n                }, (err) => {\r\n                    this.logger.error('error loading jwks', err);\r\n                    this.eventsSubject.next(new OAuthErrorEvent('jwks_load_error', err));\r\n                    reject(err);\r\n                });\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    }\r\n    validateDiscoveryDocument(doc) {\r\n        let errors;\r\n        if (!this.skipIssuerCheck && doc.issuer !== this.issuer) {\r\n            this.logger.error('invalid issuer in discovery document', 'expected: ' + this.issuer, 'current: ' + doc.issuer);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.authorization_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating authorization_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.end_session_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating end_session_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.token_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating token_endpoint in discovery document', errors);\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.revocation_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating revocation_endpoint in discovery document', errors);\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.userinfo_endpoint);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating userinfo_endpoint in discovery document', errors);\r\n            return false;\r\n        }\r\n        errors = this.validateUrlFromDiscoveryDocument(doc.jwks_uri);\r\n        if (errors.length > 0) {\r\n            this.logger.error('error validating jwks_uri in discovery document', errors);\r\n            return false;\r\n        }\r\n        if (this.sessionChecksEnabled && !doc.check_session_iframe) {\r\n            this.logger.warn('sessionChecksEnabled is activated but discovery document' +\r\n                ' does not contain a check_session_iframe field');\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Uses password flow to exchange userName and password for an\r\n     * access_token. After receiving the access_token, this method\r\n     * uses it to query the userinfo endpoint in order to get information\r\n     * about the user in question.\r\n     *\r\n     * When using this, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation\r\n     * fail.\r\n     *\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    fetchTokenUsingPasswordFlowAndLoadUserProfile(userName, password, headers = new HttpHeaders()) {\r\n        return this.fetchTokenUsingPasswordFlow(userName, password, headers).then(() => this.loadUserProfile());\r\n    }\r\n    /**\r\n     * Loads the user profile by accessing the user info endpoint defined by OpenId Connect.\r\n     *\r\n     * When using this with OAuth2 password flow, make sure that the property oidc is set to false.\r\n     * Otherwise stricter validations take place that make this operation fail.\r\n     */\r\n    loadUserProfile() {\r\n        if (!this.hasValidAccessToken()) {\r\n            throw new Error('Can not load User Profile without access_token');\r\n        }\r\n        if (!this.validateUrlForHttps(this.userinfoEndpoint)) {\r\n            throw new Error(\"userinfoEndpoint must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getAccessToken());\r\n            this.http\r\n                .get(this.userinfoEndpoint, {\r\n                headers,\r\n                observe: 'response',\r\n                responseType: 'text',\r\n            })\r\n                .subscribe((response) => {\r\n                this.debug('userinfo received', JSON.stringify(response));\r\n                if (response.headers\r\n                    .get('content-type')\r\n                    .startsWith('application/json')) {\r\n                    let info = JSON.parse(response.body);\r\n                    const existingClaims = this.getIdentityClaims() || {};\r\n                    if (!this.skipSubjectCheck) {\r\n                        if (this.oidc &&\r\n                            (!existingClaims['sub'] || info.sub !== existingClaims['sub'])) {\r\n                            const err = 'if property oidc is true, the received user-id (sub) has to be the user-id ' +\r\n                                'of the user that has logged in with oidc.\\n' +\r\n                                'if you are not using oidc but just oauth2 password flow set oidc to false';\r\n                            reject(err);\r\n                            return;\r\n                        }\r\n                    }\r\n                    info = Object.assign({}, existingClaims, info);\r\n                    this._storage.setItem('id_token_claims_obj', JSON.stringify(info));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve({ info });\r\n                }\r\n                else {\r\n                    this.debug('userinfo is not JSON, treating it as JWE/JWS');\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('user_profile_loaded'));\r\n                    resolve(JSON.parse(response.body));\r\n                }\r\n            }, (err) => {\r\n                this.logger.error('error loading user info', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('user_profile_load_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Uses password flow to exchange userName and password for an access_token.\r\n     * @param userName\r\n     * @param password\r\n     * @param headers Optional additional http-headers.\r\n     */\r\n    fetchTokenUsingPasswordFlow(userName, password, headers = new HttpHeaders()) {\r\n        const parameters = {\r\n            username: userName,\r\n            password: password,\r\n        };\r\n        return this.fetchTokenUsingGrant('password', parameters, headers);\r\n    }\r\n    /**\r\n     * Uses a custom grant type to retrieve tokens.\r\n     * @param grantType Grant type.\r\n     * @param parameters Parameters to pass.\r\n     * @param headers Optional additional HTTP headers.\r\n     */\r\n    fetchTokenUsingGrant(grantType, parameters, headers = new HttpHeaders()) {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        /**\r\n         * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\r\n         * serialize and parse URL parameter keys and values.\r\n         *\r\n         * @stable\r\n         */\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n            .set('grant_type', grantType)\r\n            .set('scope', this.scope);\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                params = params.set(key, this.customQueryParams[key]);\r\n            }\r\n        }\r\n        // set explicit parameters last, to allow overwriting\r\n        for (const key of Object.keys(parameters)) {\r\n            params = params.set(key, parameters[key]);\r\n        }\r\n        headers = headers.set('Content-Type', 'application/x-www-form-urlencoded');\r\n        return new Promise((resolve, reject) => {\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token).then((result) => {\r\n                        this.storeIdToken(result);\r\n                        resolve(tokenResponse);\r\n                    });\r\n                }\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                resolve(tokenResponse);\r\n            }, (err) => {\r\n                this.logger.error('Error performing ${grantType} flow', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Refreshes the token using a refresh_token.\r\n     * This does not work for implicit flow, b/c\r\n     * there is no refresh_token in this flow.\r\n     * A solution for this is provided by the\r\n     * method silentRefresh.\r\n     */\r\n    refreshToken() {\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        return new Promise((resolve, reject) => {\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n                .set('grant_type', 'refresh_token')\r\n                .set('scope', this.scope)\r\n                .set('refresh_token', this._storage.getItem('refresh_token'));\r\n            let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n            if (this.useHttpBasicAuth) {\r\n                const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n                headers = headers.set('Authorization', 'Basic ' + header);\r\n            }\r\n            if (!this.useHttpBasicAuth) {\r\n                params = params.set('client_id', this.clientId);\r\n            }\r\n            if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n                params = params.set('client_secret', this.dummyClientSecret);\r\n            }\r\n            if (this.customQueryParams) {\r\n                for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .pipe(switchMap((tokenResponse) => {\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    return from(this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, true)).pipe(tap((result) => this.storeIdToken(result)), map((_) => tokenResponse));\r\n                }\r\n                else {\r\n                    return of(tokenResponse);\r\n                }\r\n            }))\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('refresh tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                resolve(tokenResponse);\r\n            }, (err) => {\r\n                this.logger.error('Error refreshing token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    removeSilentRefreshEventListener() {\r\n        if (this.silentRefreshPostMessageEventListener) {\r\n            window.removeEventListener('message', this.silentRefreshPostMessageEventListener);\r\n            this.silentRefreshPostMessageEventListener = null;\r\n        }\r\n    }\r\n    setupSilentRefreshEventListener() {\r\n        this.removeSilentRefreshEventListener();\r\n        this.silentRefreshPostMessageEventListener = (e) => {\r\n            const message = this.processMessageEventMessage(e);\r\n            if (this.checkOrigin && e.origin !== location.origin) {\r\n                console.error('wrong origin requested silent refresh!');\r\n            }\r\n            this.tryLogin({\r\n                customHashFragment: message,\r\n                preventClearHashAfterLogin: true,\r\n                customRedirectUri: this.silentRefreshRedirectUri || this.redirectUri,\r\n            }).catch((err) => this.debug('tryLogin during silent refresh failed', err));\r\n        };\r\n        window.addEventListener('message', this.silentRefreshPostMessageEventListener);\r\n    }\r\n    /**\r\n     * Performs a silent refresh for implicit flow.\r\n     * Use this method to get new tokens when/before\r\n     * the existing tokens expire.\r\n     */\r\n    silentRefresh(params = {}, noPrompt = true) {\r\n        const claims = this.getIdentityClaims() || {};\r\n        if (this.useIdTokenHintForSilentRefresh && this.hasValidIdToken()) {\r\n            params['id_token_hint'] = this.getIdToken();\r\n        }\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        if (typeof this.document === 'undefined') {\r\n            throw new Error('silent refresh is not supported on this platform');\r\n        }\r\n        const existingIframe = this.document.getElementById(this.silentRefreshIFrameName);\r\n        if (existingIframe) {\r\n            this.document.body.removeChild(existingIframe);\r\n        }\r\n        this.silentRefreshSubject = claims['sub'];\r\n        const iframe = this.document.createElement('iframe');\r\n        iframe.id = this.silentRefreshIFrameName;\r\n        this.setupSilentRefreshEventListener();\r\n        const redirectUri = this.silentRefreshRedirectUri || this.redirectUri;\r\n        this.createLoginUrl(null, null, redirectUri, noPrompt, params).then((url) => {\r\n            iframe.setAttribute('src', url);\r\n            if (!this.silentRefreshShowIFrame) {\r\n                iframe.style['display'] = 'none';\r\n            }\r\n            this.document.body.appendChild(iframe);\r\n        });\r\n        const errors = this.events.pipe(filter((e) => e instanceof OAuthErrorEvent), first());\r\n        const success = this.events.pipe(filter((e) => e.type === 'token_received'), first());\r\n        const timeout = of(new OAuthErrorEvent('silent_refresh_timeout', null)).pipe(delay(this.silentRefreshTimeout));\r\n        return race([errors, success, timeout])\r\n            .pipe(map((e) => {\r\n            if (e instanceof OAuthErrorEvent) {\r\n                if (e.type === 'silent_refresh_timeout') {\r\n                    this.eventsSubject.next(e);\r\n                }\r\n                else {\r\n                    e = new OAuthErrorEvent('silent_refresh_error', e);\r\n                    this.eventsSubject.next(e);\r\n                }\r\n                throw e;\r\n            }\r\n            else if (e.type === 'token_received') {\r\n                e = new OAuthSuccessEvent('silently_refreshed');\r\n                this.eventsSubject.next(e);\r\n            }\r\n            return e;\r\n        }))\r\n            .toPromise();\r\n    }\r\n    /**\r\n     * This method exists for backwards compatibility.\r\n     * {@link OAuthService#initLoginFlowInPopup} handles both code\r\n     * and implicit flows.\r\n     */\r\n    initImplicitFlowInPopup(options) {\r\n        return this.initLoginFlowInPopup(options);\r\n    }\r\n    initLoginFlowInPopup(options) {\r\n        options = options || {};\r\n        return this.createLoginUrl(null, null, this.silentRefreshRedirectUri, false, {\r\n            display: 'popup',\r\n        }).then((url) => {\r\n            return new Promise((resolve, reject) => {\r\n                /**\r\n                 * Error handling section\r\n                 */\r\n                const checkForPopupClosedInterval = 500;\r\n                let windowRef = null;\r\n                // If we got no window reference we open a window\r\n                // else we are using the window already opened\r\n                if (!options.windowRef) {\r\n                    windowRef = window.open(url, 'ngx-oauth2-oidc-login', this.calculatePopupFeatures(options));\r\n                }\r\n                else if (options.windowRef && !options.windowRef.closed) {\r\n                    windowRef = options.windowRef;\r\n                    windowRef.location.href = url;\r\n                }\r\n                let checkForPopupClosedTimer;\r\n                const tryLogin = (hash) => {\r\n                    this.tryLogin({\r\n                        customHashFragment: hash,\r\n                        preventClearHashAfterLogin: true,\r\n                        customRedirectUri: this.silentRefreshRedirectUri,\r\n                    }).then(() => {\r\n                        cleanup();\r\n                        resolve(true);\r\n                    }, (err) => {\r\n                        cleanup();\r\n                        reject(err);\r\n                    });\r\n                };\r\n                const checkForPopupClosed = () => {\r\n                    if (!windowRef || windowRef.closed) {\r\n                        cleanup();\r\n                        reject(new OAuthErrorEvent('popup_closed', {}));\r\n                    }\r\n                };\r\n                if (!windowRef) {\r\n                    reject(new OAuthErrorEvent('popup_blocked', {}));\r\n                }\r\n                else {\r\n                    checkForPopupClosedTimer = window.setInterval(checkForPopupClosed, checkForPopupClosedInterval);\r\n                }\r\n                const cleanup = () => {\r\n                    window.clearInterval(checkForPopupClosedTimer);\r\n                    window.removeEventListener('storage', storageListener);\r\n                    window.removeEventListener('message', listener);\r\n                    if (windowRef !== null) {\r\n                        windowRef.close();\r\n                    }\r\n                    windowRef = null;\r\n                };\r\n                const listener = (e) => {\r\n                    const message = this.processMessageEventMessage(e);\r\n                    if (message && message !== null) {\r\n                        window.removeEventListener('storage', storageListener);\r\n                        tryLogin(message);\r\n                    }\r\n                    else {\r\n                        console.log('false event firing');\r\n                    }\r\n                };\r\n                const storageListener = (event) => {\r\n                    if (event.key === 'auth_hash') {\r\n                        window.removeEventListener('message', listener);\r\n                        tryLogin(event.newValue);\r\n                    }\r\n                };\r\n                window.addEventListener('message', listener);\r\n                window.addEventListener('storage', storageListener);\r\n            });\r\n        });\r\n    }\r\n    calculatePopupFeatures(options) {\r\n        // Specify an static height and width and calculate centered position\r\n        const height = options.height || 470;\r\n        const width = options.width || 500;\r\n        const left = window.screenLeft + (window.outerWidth - width) / 2;\r\n        const top = window.screenTop + (window.outerHeight - height) / 2;\r\n        return `location=no,toolbar=no,width=${width},height=${height},top=${top},left=${left}`;\r\n    }\r\n    processMessageEventMessage(e) {\r\n        let expectedPrefix = '#';\r\n        if (this.silentRefreshMessagePrefix) {\r\n            expectedPrefix += this.silentRefreshMessagePrefix;\r\n        }\r\n        if (!e || !e.data || typeof e.data !== 'string') {\r\n            return;\r\n        }\r\n        const prefixedMessage = e.data;\r\n        if (!prefixedMessage.startsWith(expectedPrefix)) {\r\n            return;\r\n        }\r\n        return '#' + prefixedMessage.substr(expectedPrefix.length);\r\n    }\r\n    canPerformSessionCheck() {\r\n        if (!this.sessionChecksEnabled) {\r\n            return false;\r\n        }\r\n        if (!this.sessionCheckIFrameUrl) {\r\n            console.warn('sessionChecksEnabled is activated but there is no sessionCheckIFrameUrl');\r\n            return false;\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            console.warn('sessionChecksEnabled is activated but there is no session_state');\r\n            return false;\r\n        }\r\n        if (typeof this.document === 'undefined') {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    setupSessionCheckEventListener() {\r\n        this.removeSessionCheckEventListener();\r\n        this.sessionCheckEventListener = (e) => {\r\n            const origin = e.origin.toLowerCase();\r\n            const issuer = this.issuer.toLowerCase();\r\n            this.debug('sessionCheckEventListener');\r\n            if (!issuer.startsWith(origin)) {\r\n                this.debug('sessionCheckEventListener', 'wrong origin', origin, 'expected', issuer, 'event', e);\r\n                return;\r\n            }\r\n            // only run in Angular zone if it is 'changed' or 'error'\r\n            switch (e.data) {\r\n                case 'unchanged':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionUnchanged();\r\n                    });\r\n                    break;\r\n                case 'changed':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionChange();\r\n                    });\r\n                    break;\r\n                case 'error':\r\n                    this.ngZone.run(() => {\r\n                        this.handleSessionError();\r\n                    });\r\n                    break;\r\n            }\r\n            this.debug('got info from session check inframe', e);\r\n        };\r\n        // prevent Angular from refreshing the view on every message (runs in intervals)\r\n        this.ngZone.runOutsideAngular(() => {\r\n            window.addEventListener('message', this.sessionCheckEventListener);\r\n        });\r\n    }\r\n    handleSessionUnchanged() {\r\n        this.debug('session check', 'session unchanged');\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_unchanged'));\r\n    }\r\n    handleSessionChange() {\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_changed'));\r\n        this.stopSessionCheckTimer();\r\n        if (!this.useSilentRefresh && this.responseType === 'code') {\r\n            this.refreshToken()\r\n                .then((_) => {\r\n                this.debug('token refresh after session change worked');\r\n            })\r\n                .catch((_) => {\r\n                this.debug('token refresh did not work after session changed');\r\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                this.logOut(true);\r\n            });\r\n        }\r\n        else if (this.silentRefreshRedirectUri) {\r\n            this.silentRefresh().catch((_) => this.debug('silent refresh failed after session changed'));\r\n            this.waitForSilentRefreshAfterSessionChange();\r\n        }\r\n        else {\r\n            this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n            this.logOut(true);\r\n        }\r\n    }\r\n    waitForSilentRefreshAfterSessionChange() {\r\n        this.events\r\n            .pipe(filter((e) => e.type === 'silently_refreshed' ||\r\n            e.type === 'silent_refresh_timeout' ||\r\n            e.type === 'silent_refresh_error'), first())\r\n            .subscribe((e) => {\r\n            if (e.type !== 'silently_refreshed') {\r\n                this.debug('silent refresh did not work after session changed');\r\n                this.eventsSubject.next(new OAuthInfoEvent('session_terminated'));\r\n                this.logOut(true);\r\n            }\r\n        });\r\n    }\r\n    handleSessionError() {\r\n        this.stopSessionCheckTimer();\r\n        this.eventsSubject.next(new OAuthInfoEvent('session_error'));\r\n    }\r\n    removeSessionCheckEventListener() {\r\n        if (this.sessionCheckEventListener) {\r\n            window.removeEventListener('message', this.sessionCheckEventListener);\r\n            this.sessionCheckEventListener = null;\r\n        }\r\n    }\r\n    initSessionCheck() {\r\n        if (!this.canPerformSessionCheck()) {\r\n            return;\r\n        }\r\n        const existingIframe = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (existingIframe) {\r\n            this.document.body.removeChild(existingIframe);\r\n        }\r\n        const iframe = this.document.createElement('iframe');\r\n        iframe.id = this.sessionCheckIFrameName;\r\n        this.setupSessionCheckEventListener();\r\n        const url = this.sessionCheckIFrameUrl;\r\n        iframe.setAttribute('src', url);\r\n        iframe.style.display = 'none';\r\n        this.document.body.appendChild(iframe);\r\n        this.startSessionCheckTimer();\r\n    }\r\n    startSessionCheckTimer() {\r\n        this.stopSessionCheckTimer();\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.sessionCheckTimer = setInterval(this.checkSession.bind(this), this.sessionCheckIntervall);\r\n        });\r\n    }\r\n    stopSessionCheckTimer() {\r\n        if (this.sessionCheckTimer) {\r\n            clearInterval(this.sessionCheckTimer);\r\n            this.sessionCheckTimer = null;\r\n        }\r\n    }\r\n    checkSession() {\r\n        const iframe = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (!iframe) {\r\n            this.logger.warn('checkSession did not find iframe', this.sessionCheckIFrameName);\r\n        }\r\n        const sessionState = this.getSessionState();\r\n        if (!sessionState) {\r\n            this.stopSessionCheckTimer();\r\n        }\r\n        const message = this.clientId + ' ' + sessionState;\r\n        iframe.contentWindow.postMessage(message, this.issuer);\r\n    }\r\n    async createLoginUrl(state = '', loginHint = '', customRedirectUri = '', noPrompt = false, params = {}) {\r\n        const that = this;\r\n        let redirectUri;\r\n        if (customRedirectUri) {\r\n            redirectUri = customRedirectUri;\r\n        }\r\n        else {\r\n            redirectUri = this.redirectUri;\r\n        }\r\n        const nonce = await this.createAndSaveNonce();\r\n        if (state) {\r\n            state =\r\n                nonce + this.config.nonceStateSeparator + encodeURIComponent(state);\r\n        }\r\n        else {\r\n            state = nonce;\r\n        }\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            throw new Error('Either requestAccessToken or oidc or both must be true');\r\n        }\r\n        if (this.config.responseType) {\r\n            this.responseType = this.config.responseType;\r\n        }\r\n        else {\r\n            if (this.oidc && this.requestAccessToken) {\r\n                this.responseType = 'id_token token';\r\n            }\r\n            else if (this.oidc && !this.requestAccessToken) {\r\n                this.responseType = 'id_token';\r\n            }\r\n            else {\r\n                this.responseType = 'token';\r\n            }\r\n        }\r\n        const seperationChar = that.loginUrl.indexOf('?') > -1 ? '&' : '?';\r\n        let scope = that.scope;\r\n        if (this.oidc && !scope.match(/(^|\\s)openid($|\\s)/)) {\r\n            scope = 'openid ' + scope;\r\n        }\r\n        let url = that.loginUrl +\r\n            seperationChar +\r\n            'response_type=' +\r\n            encodeURIComponent(that.responseType) +\r\n            '&client_id=' +\r\n            encodeURIComponent(that.clientId) +\r\n            '&state=' +\r\n            encodeURIComponent(state) +\r\n            '&redirect_uri=' +\r\n            encodeURIComponent(redirectUri) +\r\n            '&scope=' +\r\n            encodeURIComponent(scope);\r\n        if (this.responseType.includes('code') && !this.disablePKCE) {\r\n            const [challenge, verifier] = await this.createChallangeVerifierPairForPKCE();\r\n            if (this.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                localStorage.setItem('PKCE_verifier', verifier);\r\n            }\r\n            else {\r\n                this._storage.setItem('PKCE_verifier', verifier);\r\n            }\r\n            url += '&code_challenge=' + challenge;\r\n            url += '&code_challenge_method=S256';\r\n        }\r\n        if (loginHint) {\r\n            url += '&login_hint=' + encodeURIComponent(loginHint);\r\n        }\r\n        if (that.resource) {\r\n            url += '&resource=' + encodeURIComponent(that.resource);\r\n        }\r\n        if (that.oidc) {\r\n            url += '&nonce=' + encodeURIComponent(nonce);\r\n        }\r\n        if (noPrompt) {\r\n            url += '&prompt=none';\r\n        }\r\n        for (const key of Object.keys(params)) {\r\n            url +=\r\n                '&' + encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                url +=\r\n                    '&' + key + '=' + encodeURIComponent(this.customQueryParams[key]);\r\n            }\r\n        }\r\n        return url;\r\n    }\r\n    initImplicitFlowInternal(additionalState = '', params = '') {\r\n        if (this.inImplicitFlow) {\r\n            return;\r\n        }\r\n        this.inImplicitFlow = true;\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        let addParams = {};\r\n        let loginHint = null;\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        }\r\n        else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch((error) => {\r\n            console.error('Error in initImplicitFlow', error);\r\n            this.inImplicitFlow = false;\r\n        });\r\n    }\r\n    /**\r\n     * Starts the implicit flow and redirects to user to\r\n     * the auth servers' login url.\r\n     *\r\n     * @param additionalState Optional state that is passed around.\r\n     *  You'll find this state in the property `state` after `tryLogin` logged in the user.\r\n     * @param params Hash with additional parameter. If it is a string, it is used for the\r\n     *               parameter loginHint (for the sake of compatibility with former versions)\r\n     */\r\n    initImplicitFlow(additionalState = '', params = '') {\r\n        if (this.loginUrl !== '') {\r\n            this.initImplicitFlowInternal(additionalState, params);\r\n        }\r\n        else {\r\n            this.events\r\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\r\n                .subscribe((_) => this.initImplicitFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n    /**\r\n     * Reset current implicit flow\r\n     *\r\n     * @description This method allows resetting the current implict flow in order to be initialized again.\r\n     */\r\n    resetImplicitFlow() {\r\n        this.inImplicitFlow = false;\r\n    }\r\n    callOnTokenReceivedIfExists(options) {\r\n        const that = this;\r\n        if (options.onTokenReceived) {\r\n            const tokenParams = {\r\n                idClaims: that.getIdentityClaims(),\r\n                idToken: that.getIdToken(),\r\n                accessToken: that.getAccessToken(),\r\n                state: that.state,\r\n            };\r\n            options.onTokenReceived(tokenParams);\r\n        }\r\n    }\r\n    storeAccessTokenResponse(accessToken, refreshToken, expiresIn, grantedScopes, customParameters) {\r\n        this._storage.setItem('access_token', accessToken);\r\n        if (grantedScopes && !Array.isArray(grantedScopes)) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes.split(' ')));\r\n        }\r\n        else if (grantedScopes && Array.isArray(grantedScopes)) {\r\n            this._storage.setItem('granted_scopes', JSON.stringify(grantedScopes));\r\n        }\r\n        this._storage.setItem('access_token_stored_at', '' + this.dateTimeService.now());\r\n        if (expiresIn) {\r\n            const expiresInMilliSeconds = expiresIn * 1000;\r\n            const now = this.dateTimeService.new();\r\n            const expiresAt = now.getTime() + expiresInMilliSeconds;\r\n            this._storage.setItem('expires_at', '' + expiresAt);\r\n        }\r\n        if (refreshToken) {\r\n            this._storage.setItem('refresh_token', refreshToken);\r\n        }\r\n        if (customParameters) {\r\n            customParameters.forEach((value, key) => {\r\n                this._storage.setItem(key, value);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Delegates to tryLoginImplicitFlow for the sake of competability\r\n     * @param options Optional options.\r\n     */\r\n    tryLogin(options = null) {\r\n        if (this.config.responseType === 'code') {\r\n            return this.tryLoginCodeFlow(options).then((_) => true);\r\n        }\r\n        else {\r\n            return this.tryLoginImplicitFlow(options);\r\n        }\r\n    }\r\n    parseQueryString(queryString) {\r\n        if (!queryString || queryString.length === 0) {\r\n            return {};\r\n        }\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n    async tryLoginCodeFlow(options = null) {\r\n        options = options || {};\r\n        const querySource = options.customHashFragment\r\n            ? options.customHashFragment.substring(1)\r\n            : window.location.search;\r\n        const parts = this.getCodePartsFromUrl(querySource);\r\n        const code = parts['code'];\r\n        const state = parts['state'];\r\n        const sessionState = parts['session_state'];\r\n        if (!options.preventClearHashAfterLogin) {\r\n            const href = location.origin +\r\n                location.pathname +\r\n                location.search\r\n                    .replace(/code=[^&\\$]*/, '')\r\n                    .replace(/scope=[^&\\$]*/, '')\r\n                    .replace(/state=[^&\\$]*/, '')\r\n                    .replace(/session_state=[^&\\$]*/, '')\r\n                    .replace(/^\\?&/, '?')\r\n                    .replace(/&$/, '')\r\n                    .replace(/^\\?$/, '')\r\n                    .replace(/&+/g, '&')\r\n                    .replace(/\\?&/, '?')\r\n                    .replace(/\\?$/, '') +\r\n                location.hash;\r\n            history.replaceState(null, window.name, href);\r\n        }\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('code_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!options.disableNonceCheck) {\r\n            if (!nonceInState) {\r\n                this.saveRequestedRoute();\r\n                return Promise.resolve();\r\n            }\r\n            if (!options.disableOAuth2StateCheck) {\r\n                const success = this.validateNonce(nonceInState);\r\n                if (!success) {\r\n                    const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                    this.eventsSubject.next(event);\r\n                    return Promise.reject(event);\r\n                }\r\n            }\r\n        }\r\n        this.storeSessionState(sessionState);\r\n        if (code) {\r\n            await this.getTokenFromCode(code, options);\r\n            this.restoreRequestedRoute();\r\n            return Promise.resolve();\r\n        }\r\n        else {\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n    saveRequestedRoute() {\r\n        if (this.config.preserveRequestedRoute) {\r\n            this._storage.setItem('requested_route', window.location.pathname + window.location.search);\r\n        }\r\n    }\r\n    restoreRequestedRoute() {\r\n        const requestedRoute = this._storage.getItem('requested_route');\r\n        if (requestedRoute) {\r\n            history.replaceState(null, '', window.location.origin + requestedRoute);\r\n        }\r\n    }\r\n    /**\r\n     * Retrieve the returned auth code from the redirect uri that has been called.\r\n     * If required also check hash, as we could use hash location strategy.\r\n     */\r\n    getCodePartsFromUrl(queryString) {\r\n        if (!queryString || queryString.length === 0) {\r\n            return this.urlHelper.getHashFragmentParams();\r\n        }\r\n        // normalize query string\r\n        if (queryString.charAt(0) === '?') {\r\n            queryString = queryString.substr(1);\r\n        }\r\n        return this.urlHelper.parseQueryString(queryString);\r\n    }\r\n    /**\r\n     * Get token using an intermediate code. Works for the Authorization Code flow.\r\n     */\r\n    getTokenFromCode(code, options) {\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() })\r\n            .set('grant_type', 'authorization_code')\r\n            .set('code', code)\r\n            .set('redirect_uri', options.customRedirectUri || this.redirectUri);\r\n        if (!this.disablePKCE) {\r\n            let PKCEVerifier;\r\n            if (this.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                PKCEVerifier = localStorage.getItem('PKCE_verifier');\r\n            }\r\n            else {\r\n                PKCEVerifier = this._storage.getItem('PKCE_verifier');\r\n            }\r\n            if (!PKCEVerifier) {\r\n                console.warn('No PKCE verifier found in oauth storage!');\r\n            }\r\n            else {\r\n                params = params.set('code_verifier', PKCEVerifier);\r\n            }\r\n        }\r\n        return this.fetchAndProcessToken(params, options);\r\n    }\r\n    fetchAndProcessToken(params, options) {\r\n        options = options || {};\r\n        this.assertUrlNotNullAndCorrectProtocol(this.tokenEndpoint, 'tokenEndpoint');\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            if (this.customQueryParams) {\r\n                for (let key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                    params = params.set(key, this.customQueryParams[key]);\r\n                }\r\n            }\r\n            this.http\r\n                .post(this.tokenEndpoint, params, { headers })\r\n                .subscribe((tokenResponse) => {\r\n                this.debug('refresh tokenResponse', tokenResponse);\r\n                this.storeAccessTokenResponse(tokenResponse.access_token, tokenResponse.refresh_token, tokenResponse.expires_in ||\r\n                    this.fallbackAccessTokenExpirationTimeInSec, tokenResponse.scope, this.extractRecognizedCustomParameters(tokenResponse));\r\n                if (this.oidc && tokenResponse.id_token) {\r\n                    this.processIdToken(tokenResponse.id_token, tokenResponse.access_token, options.disableNonceCheck)\r\n                        .then((result) => {\r\n                        this.storeIdToken(result);\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                        this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                        resolve(tokenResponse);\r\n                    })\r\n                        .catch((reason) => {\r\n                        this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n                        console.error('Error validating tokens');\r\n                        console.error(reason);\r\n                        reject(reason);\r\n                    });\r\n                }\r\n                else {\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n                    this.eventsSubject.next(new OAuthSuccessEvent('token_refreshed'));\r\n                    resolve(tokenResponse);\r\n                }\r\n            }, (err) => {\r\n                console.error('Error getting token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_refresh_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Checks whether there are tokens in the hash fragment\r\n     * as a result of the implicit flow. These tokens are\r\n     * parsed, validated and used to sign the user in to the\r\n     * current client.\r\n     *\r\n     * @param options Optional options.\r\n     */\r\n    tryLoginImplicitFlow(options = null) {\r\n        options = options || {};\r\n        let parts;\r\n        if (options.customHashFragment) {\r\n            parts = this.urlHelper.getHashFragmentParams(options.customHashFragment);\r\n        }\r\n        else {\r\n            parts = this.urlHelper.getHashFragmentParams();\r\n        }\r\n        this.debug('parsed url', parts);\r\n        const state = parts['state'];\r\n        let [nonceInState, userState] = this.parseState(state);\r\n        this.state = userState;\r\n        if (parts['error']) {\r\n            this.debug('error trying to login');\r\n            this.handleLoginError(options, parts);\r\n            const err = new OAuthErrorEvent('token_error', {}, parts);\r\n            this.eventsSubject.next(err);\r\n            return Promise.reject(err);\r\n        }\r\n        const accessToken = parts['access_token'];\r\n        const idToken = parts['id_token'];\r\n        const sessionState = parts['session_state'];\r\n        const grantedScopes = parts['scope'];\r\n        if (!this.requestAccessToken && !this.oidc) {\r\n            return Promise.reject('Either requestAccessToken or oidc (or both) must be true.');\r\n        }\r\n        if (this.requestAccessToken && !accessToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.requestAccessToken && !options.disableOAuth2StateCheck && !state) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.oidc && !idToken) {\r\n            return Promise.resolve(false);\r\n        }\r\n        if (this.sessionChecksEnabled && !sessionState) {\r\n            this.logger.warn('session checks (Session Status Change Notification) ' +\r\n                'were activated in the configuration but the id_token ' +\r\n                'does not contain a session_state claim');\r\n        }\r\n        if (this.requestAccessToken && !options.disableNonceCheck) {\r\n            const success = this.validateNonce(nonceInState);\r\n            if (!success) {\r\n                const event = new OAuthErrorEvent('invalid_nonce_in_state', null);\r\n                this.eventsSubject.next(event);\r\n                return Promise.reject(event);\r\n            }\r\n        }\r\n        if (this.requestAccessToken) {\r\n            this.storeAccessTokenResponse(accessToken, null, parts['expires_in'] || this.fallbackAccessTokenExpirationTimeInSec, grantedScopes);\r\n        }\r\n        if (!this.oidc) {\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                this.clearLocationHash();\r\n            }\r\n            this.callOnTokenReceivedIfExists(options);\r\n            return Promise.resolve(true);\r\n        }\r\n        return this.processIdToken(idToken, accessToken, options.disableNonceCheck)\r\n            .then((result) => {\r\n            if (options.validationHandler) {\r\n                return options\r\n                    .validationHandler({\r\n                    accessToken: accessToken,\r\n                    idClaims: result.idTokenClaims,\r\n                    idToken: result.idToken,\r\n                    state: state,\r\n                })\r\n                    .then((_) => result);\r\n            }\r\n            return result;\r\n        })\r\n            .then((result) => {\r\n            this.storeIdToken(result);\r\n            this.storeSessionState(sessionState);\r\n            if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n                this.clearLocationHash();\r\n            }\r\n            this.eventsSubject.next(new OAuthSuccessEvent('token_received'));\r\n            this.callOnTokenReceivedIfExists(options);\r\n            this.inImplicitFlow = false;\r\n            return true;\r\n        })\r\n            .catch((reason) => {\r\n            this.eventsSubject.next(new OAuthErrorEvent('token_validation_error', reason));\r\n            this.logger.error('Error validating tokens');\r\n            this.logger.error(reason);\r\n            return Promise.reject(reason);\r\n        });\r\n    }\r\n    parseState(state) {\r\n        let nonce = state;\r\n        let userState = '';\r\n        if (state) {\r\n            const idx = state.indexOf(this.config.nonceStateSeparator);\r\n            if (idx > -1) {\r\n                nonce = state.substr(0, idx);\r\n                userState = state.substr(idx + this.config.nonceStateSeparator.length);\r\n            }\r\n        }\r\n        return [nonce, userState];\r\n    }\r\n    validateNonce(nonceInState) {\r\n        let savedNonce;\r\n        if (this.saveNoncesInLocalStorage &&\r\n            typeof window['localStorage'] !== 'undefined') {\r\n            savedNonce = localStorage.getItem('nonce');\r\n        }\r\n        else {\r\n            savedNonce = this._storage.getItem('nonce');\r\n        }\r\n        if (savedNonce !== nonceInState) {\r\n            const err = 'Validating access_token failed, wrong state/nonce.';\r\n            console.error(err, savedNonce, nonceInState);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    storeIdToken(idToken) {\r\n        this._storage.setItem('id_token', idToken.idToken);\r\n        this._storage.setItem('id_token_claims_obj', idToken.idTokenClaimsJson);\r\n        this._storage.setItem('id_token_expires_at', '' + idToken.idTokenExpiresAt);\r\n        this._storage.setItem('id_token_stored_at', '' + this.dateTimeService.now());\r\n    }\r\n    storeSessionState(sessionState) {\r\n        this._storage.setItem('session_state', sessionState);\r\n    }\r\n    getSessionState() {\r\n        return this._storage.getItem('session_state');\r\n    }\r\n    handleLoginError(options, parts) {\r\n        if (options.onLoginError) {\r\n            options.onLoginError(parts);\r\n        }\r\n        if (this.clearHashAfterLogin && !options.preventClearHashAfterLogin) {\r\n            this.clearLocationHash();\r\n        }\r\n    }\r\n    getClockSkewInMsec(defaultSkewMsc = 600000) {\r\n        if (!this.clockSkewInSec && this.clockSkewInSec !== 0) {\r\n            return defaultSkewMsc;\r\n        }\r\n        return this.clockSkewInSec * 1000;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    processIdToken(idToken, accessToken, skipNonceCheck = false) {\r\n        const tokenParts = idToken.split('.');\r\n        const headerBase64 = this.padBase64(tokenParts[0]);\r\n        const headerJson = b64DecodeUnicode(headerBase64);\r\n        const header = JSON.parse(headerJson);\r\n        const claimsBase64 = this.padBase64(tokenParts[1]);\r\n        const claimsJson = b64DecodeUnicode(claimsBase64);\r\n        const claims = JSON.parse(claimsJson);\r\n        let savedNonce;\r\n        if (this.saveNoncesInLocalStorage &&\r\n            typeof window['localStorage'] !== 'undefined') {\r\n            savedNonce = localStorage.getItem('nonce');\r\n        }\r\n        else {\r\n            savedNonce = this._storage.getItem('nonce');\r\n        }\r\n        if (Array.isArray(claims.aud)) {\r\n            if (claims.aud.every((v) => v !== this.clientId)) {\r\n                const err = 'Wrong audience: ' + claims.aud.join(',');\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        else {\r\n            if (claims.aud !== this.clientId) {\r\n                const err = 'Wrong audience: ' + claims.aud;\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n        }\r\n        if (!claims.sub) {\r\n            const err = 'No sub claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        /* For now, we only check whether the sub against\r\n         * silentRefreshSubject when sessionChecksEnabled is on\r\n         * We will reconsider in a later version to do this\r\n         * in every other case too.\r\n         */\r\n        if (this.sessionChecksEnabled &&\r\n            this.silentRefreshSubject &&\r\n            this.silentRefreshSubject !== claims['sub']) {\r\n            const err = 'After refreshing, we got an id_token for another user (sub). ' +\r\n                `Expected sub: ${this.silentRefreshSubject}, received sub: ${claims['sub']}`;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!claims.iat) {\r\n            const err = 'No iat claim in id_token';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!this.skipIssuerCheck && claims.iss !== this.issuer) {\r\n            const err = 'Wrong issuer: ' + claims.iss;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        if (!skipNonceCheck && claims.nonce !== savedNonce) {\r\n            const err = 'Wrong nonce: ' + claims.nonce;\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        // at_hash is not applicable to authorization code flow\r\n        // addressing https://github.com/manfredsteyer/angular-oauth2-oidc/issues/661\r\n        // i.e. Based on spec the at_hash check is only true for implicit code flow on Ping Federate\r\n        // https://www.pingidentity.com/developer/en/resources/openid-connect-developers-guide.html\r\n        if (this.hasOwnProperty('responseType') &&\r\n            (this.responseType === 'code' || this.responseType === 'id_token')) {\r\n            this.disableAtHashCheck = true;\r\n        }\r\n        if (!this.disableAtHashCheck &&\r\n            this.requestAccessToken &&\r\n            !claims['at_hash']) {\r\n            const err = 'An at_hash is needed!';\r\n            this.logger.warn(err);\r\n            return Promise.reject(err);\r\n        }\r\n        const now = this.dateTimeService.now();\r\n        const issuedAtMSec = claims.iat * 1000;\r\n        const expiresAtMSec = claims.exp * 1000;\r\n        const clockSkewInMSec = this.getClockSkewInMsec(); // (this.getClockSkewInMsec() || 600) * 1000;\r\n        if (issuedAtMSec - clockSkewInMSec >= now ||\r\n            expiresAtMSec + clockSkewInMSec - this.decreaseExpirationBySec <= now) {\r\n            const err = 'Token has expired';\r\n            console.error(err);\r\n            console.error({\r\n                now: now,\r\n                issuedAtMSec: issuedAtMSec,\r\n                expiresAtMSec: expiresAtMSec,\r\n            });\r\n            return Promise.reject(err);\r\n        }\r\n        const validationParams = {\r\n            accessToken: accessToken,\r\n            idToken: idToken,\r\n            jwks: this.jwks,\r\n            idTokenClaims: claims,\r\n            idTokenHeader: header,\r\n            loadKeys: () => this.loadJwks(),\r\n        };\r\n        if (this.disableAtHashCheck) {\r\n            return this.checkSignature(validationParams).then((_) => {\r\n                const result = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec,\r\n                };\r\n                return result;\r\n            });\r\n        }\r\n        return this.checkAtHash(validationParams).then((atHashValid) => {\r\n            if (!this.disableAtHashCheck && this.requestAccessToken && !atHashValid) {\r\n                const err = 'Wrong at_hash';\r\n                this.logger.warn(err);\r\n                return Promise.reject(err);\r\n            }\r\n            return this.checkSignature(validationParams).then((_) => {\r\n                const atHashCheckEnabled = !this.disableAtHashCheck;\r\n                const result = {\r\n                    idToken: idToken,\r\n                    idTokenClaims: claims,\r\n                    idTokenClaimsJson: claimsJson,\r\n                    idTokenHeader: header,\r\n                    idTokenHeaderJson: headerJson,\r\n                    idTokenExpiresAt: expiresAtMSec,\r\n                };\r\n                if (atHashCheckEnabled) {\r\n                    return this.checkAtHash(validationParams).then((atHashValid) => {\r\n                        if (this.requestAccessToken && !atHashValid) {\r\n                            const err = 'Wrong at_hash';\r\n                            this.logger.warn(err);\r\n                            return Promise.reject(err);\r\n                        }\r\n                        else {\r\n                            return result;\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    return result;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Returns the received claims about the user.\r\n     */\r\n    getIdentityClaims() {\r\n        const claims = this._storage.getItem('id_token_claims_obj');\r\n        if (!claims) {\r\n            return null;\r\n        }\r\n        return JSON.parse(claims);\r\n    }\r\n    /**\r\n     * Returns the granted scopes from the server.\r\n     */\r\n    getGrantedScopes() {\r\n        const scopes = this._storage.getItem('granted_scopes');\r\n        if (!scopes) {\r\n            return null;\r\n        }\r\n        return JSON.parse(scopes);\r\n    }\r\n    /**\r\n     * Returns the current id_token.\r\n     */\r\n    getIdToken() {\r\n        return this._storage ? this._storage.getItem('id_token') : null;\r\n    }\r\n    padBase64(base64data) {\r\n        while (base64data.length % 4 !== 0) {\r\n            base64data += '=';\r\n        }\r\n        return base64data;\r\n    }\r\n    /**\r\n     * Returns the current access_token.\r\n     */\r\n    getAccessToken() {\r\n        return this._storage ? this._storage.getItem('access_token') : null;\r\n    }\r\n    getRefreshToken() {\r\n        return this._storage ? this._storage.getItem('refresh_token') : null;\r\n    }\r\n    /**\r\n     * Returns the expiration date of the access_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    getAccessTokenExpiration() {\r\n        if (!this._storage.getItem('expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('expires_at'), 10);\r\n    }\r\n    getAccessTokenStoredAt() {\r\n        return parseInt(this._storage.getItem('access_token_stored_at'), 10);\r\n    }\r\n    getIdTokenStoredAt() {\r\n        return parseInt(this._storage.getItem('id_token_stored_at'), 10);\r\n    }\r\n    /**\r\n     * Returns the expiration date of the id_token\r\n     * as milliseconds since 1970.\r\n     */\r\n    getIdTokenExpiration() {\r\n        if (!this._storage.getItem('id_token_expires_at')) {\r\n            return null;\r\n        }\r\n        return parseInt(this._storage.getItem('id_token_expires_at'), 10);\r\n    }\r\n    /**\r\n     * Checkes, whether there is a valid access_token.\r\n     */\r\n    hasValidAccessToken() {\r\n        if (this.getAccessToken()) {\r\n            const expiresAt = this._storage.getItem('expires_at');\r\n            const now = this.dateTimeService.new();\r\n            if (expiresAt &&\r\n                parseInt(expiresAt, 10) - this.decreaseExpirationBySec <\r\n                    now.getTime() - this.getClockSkewInMsec()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Checks whether there is a valid id_token.\r\n     */\r\n    hasValidIdToken() {\r\n        if (this.getIdToken()) {\r\n            const expiresAt = this._storage.getItem('id_token_expires_at');\r\n            const now = this.dateTimeService.new();\r\n            if (expiresAt &&\r\n                parseInt(expiresAt, 10) - this.decreaseExpirationBySec <\r\n                    now.getTime() - this.getClockSkewInMsec()) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Retrieve a saved custom property of the TokenReponse object. Only if predefined in authconfig.\r\n     */\r\n    getCustomTokenResponseProperty(requestedProperty) {\r\n        return this._storage &&\r\n            this.config.customTokenParameters &&\r\n            this.config.customTokenParameters.indexOf(requestedProperty) >= 0 &&\r\n            this._storage.getItem(requestedProperty) !== null\r\n            ? JSON.parse(this._storage.getItem(requestedProperty))\r\n            : null;\r\n    }\r\n    /**\r\n     * Returns the auth-header that can be used\r\n     * to transmit the access_token to a service\r\n     */\r\n    authorizationHeader() {\r\n        return 'Bearer ' + this.getAccessToken();\r\n    }\r\n    logOut(customParameters = {}, state = '') {\r\n        let noRedirectToLogoutUrl = false;\r\n        if (typeof customParameters === 'boolean') {\r\n            noRedirectToLogoutUrl = customParameters;\r\n            customParameters = {};\r\n        }\r\n        const id_token = this.getIdToken();\r\n        this._storage.removeItem('access_token');\r\n        this._storage.removeItem('id_token');\r\n        this._storage.removeItem('refresh_token');\r\n        if (this.saveNoncesInLocalStorage) {\r\n            localStorage.removeItem('nonce');\r\n            localStorage.removeItem('PKCE_verifier');\r\n        }\r\n        else {\r\n            this._storage.removeItem('nonce');\r\n            this._storage.removeItem('PKCE_verifier');\r\n        }\r\n        this._storage.removeItem('expires_at');\r\n        this._storage.removeItem('id_token_claims_obj');\r\n        this._storage.removeItem('id_token_expires_at');\r\n        this._storage.removeItem('id_token_stored_at');\r\n        this._storage.removeItem('access_token_stored_at');\r\n        this._storage.removeItem('granted_scopes');\r\n        this._storage.removeItem('session_state');\r\n        if (this.config.customTokenParameters) {\r\n            this.config.customTokenParameters.forEach((customParam) => this._storage.removeItem(customParam));\r\n        }\r\n        this.silentRefreshSubject = null;\r\n        this.eventsSubject.next(new OAuthInfoEvent('logout'));\r\n        if (!this.logoutUrl) {\r\n            return;\r\n        }\r\n        if (noRedirectToLogoutUrl) {\r\n            return;\r\n        }\r\n        // if (!id_token && !this.postLogoutRedirectUri) {\r\n        //   return;\r\n        // }\r\n        let logoutUrl;\r\n        if (!this.validateUrlForHttps(this.logoutUrl)) {\r\n            throw new Error(\"logoutUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        // For backward compatibility\r\n        if (this.logoutUrl.indexOf('{{') > -1) {\r\n            logoutUrl = this.logoutUrl\r\n                .replace(/\\{\\{id_token\\}\\}/, encodeURIComponent(id_token))\r\n                .replace(/\\{\\{client_id\\}\\}/, encodeURIComponent(this.clientId));\r\n        }\r\n        else {\r\n            let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\r\n            if (id_token) {\r\n                params = params.set('id_token_hint', id_token);\r\n            }\r\n            const postLogoutUrl = this.postLogoutRedirectUri ||\r\n                (this.redirectUriAsPostLogoutRedirectUriFallback && this.redirectUri) ||\r\n                '';\r\n            if (postLogoutUrl) {\r\n                params = params.set('post_logout_redirect_uri', postLogoutUrl);\r\n                if (state) {\r\n                    params = params.set('state', state);\r\n                }\r\n            }\r\n            for (let key in customParameters) {\r\n                params = params.set(key, customParameters[key]);\r\n            }\r\n            logoutUrl =\r\n                this.logoutUrl +\r\n                    (this.logoutUrl.indexOf('?') > -1 ? '&' : '?') +\r\n                    params.toString();\r\n        }\r\n        this.config.openUri(logoutUrl);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    createAndSaveNonce() {\r\n        const that = this;\r\n        return this.createNonce().then(function (nonce) {\r\n            // Use localStorage for nonce if possible\r\n            // localStorage is the only storage who survives a\r\n            // redirect in ALL browsers (also IE)\r\n            // Otherwiese we'd force teams who have to support\r\n            // IE into using localStorage for everything\r\n            if (that.saveNoncesInLocalStorage &&\r\n                typeof window['localStorage'] !== 'undefined') {\r\n                localStorage.setItem('nonce', nonce);\r\n            }\r\n            else {\r\n                that._storage.setItem('nonce', nonce);\r\n            }\r\n            return nonce;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnDestroy() {\r\n        this.clearAccessTokenTimer();\r\n        this.clearIdTokenTimer();\r\n        this.removeSilentRefreshEventListener();\r\n        const silentRefreshFrame = this.document.getElementById(this.silentRefreshIFrameName);\r\n        if (silentRefreshFrame) {\r\n            silentRefreshFrame.remove();\r\n        }\r\n        this.stopSessionCheckTimer();\r\n        this.removeSessionCheckEventListener();\r\n        const sessionCheckFrame = this.document.getElementById(this.sessionCheckIFrameName);\r\n        if (sessionCheckFrame) {\r\n            sessionCheckFrame.remove();\r\n        }\r\n    }\r\n    createNonce() {\r\n        return new Promise((resolve) => {\r\n            if (this.rngUrl) {\r\n                throw new Error('createNonce with rng-web-api has not been implemented so far');\r\n            }\r\n            /*\r\n             * This alphabet is from:\r\n             * https://tools.ietf.org/html/rfc7636#section-4.1\r\n             *\r\n             * [A-Z] / [a-z] / [0-9] / \"-\" / \".\" / \"_\" / \"~\"\r\n             */\r\n            const unreserved = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\r\n            let size = 45;\r\n            let id = '';\r\n            const crypto = typeof self === 'undefined' ? null : self.crypto || self['msCrypto'];\r\n            if (crypto) {\r\n                let bytes = new Uint8Array(size);\r\n                crypto.getRandomValues(bytes);\r\n                // Needed for IE\r\n                if (!bytes.map) {\r\n                    bytes.map = Array.prototype.map;\r\n                }\r\n                bytes = bytes.map((x) => unreserved.charCodeAt(x % unreserved.length));\r\n                id = String.fromCharCode.apply(null, bytes);\r\n            }\r\n            else {\r\n                while (0 < size--) {\r\n                    id += unreserved[(Math.random() * unreserved.length) | 0];\r\n                }\r\n            }\r\n            resolve(base64UrlEncode(id));\r\n        });\r\n    }\r\n    async checkAtHash(params) {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn('No tokenValidationHandler configured. Cannot check at_hash.');\r\n            return true;\r\n        }\r\n        return this.tokenValidationHandler.validateAtHash(params);\r\n    }\r\n    checkSignature(params) {\r\n        if (!this.tokenValidationHandler) {\r\n            this.logger.warn('No tokenValidationHandler configured. Cannot check signature.');\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.tokenValidationHandler.validateSignature(params);\r\n    }\r\n    /**\r\n     * Start the implicit flow or the code flow,\r\n     * depending on your configuration.\r\n     */\r\n    initLoginFlow(additionalState = '', params = {}) {\r\n        if (this.responseType === 'code') {\r\n            return this.initCodeFlow(additionalState, params);\r\n        }\r\n        else {\r\n            return this.initImplicitFlow(additionalState, params);\r\n        }\r\n    }\r\n    /**\r\n     * Starts the authorization code flow and redirects to user to\r\n     * the auth servers login url.\r\n     */\r\n    initCodeFlow(additionalState = '', params = {}) {\r\n        if (this.loginUrl !== '') {\r\n            this.initCodeFlowInternal(additionalState, params);\r\n        }\r\n        else {\r\n            this.events\r\n                .pipe(filter((e) => e.type === 'discovery_document_loaded'))\r\n                .subscribe((_) => this.initCodeFlowInternal(additionalState, params));\r\n        }\r\n    }\r\n    initCodeFlowInternal(additionalState = '', params = {}) {\r\n        if (!this.validateUrlForHttps(this.loginUrl)) {\r\n            throw new Error(\"loginUrl  must use HTTPS (with TLS), or config value for property 'requireHttps' must be set to 'false' and allow HTTP (without TLS).\");\r\n        }\r\n        let addParams = {};\r\n        let loginHint = null;\r\n        if (typeof params === 'string') {\r\n            loginHint = params;\r\n        }\r\n        else if (typeof params === 'object') {\r\n            addParams = params;\r\n        }\r\n        this.createLoginUrl(additionalState, loginHint, null, false, addParams)\r\n            .then(this.config.openUri)\r\n            .catch((error) => {\r\n            console.error('Error in initAuthorizationCodeFlow');\r\n            console.error(error);\r\n        });\r\n    }\r\n    async createChallangeVerifierPairForPKCE() {\r\n        if (!this.crypto) {\r\n            throw new Error('PKCE support for code flow needs a CryptoHander. Did you import the OAuthModule using forRoot() ?');\r\n        }\r\n        const verifier = await this.createNonce();\r\n        const challengeRaw = await this.crypto.calcHash(verifier, 'sha-256');\r\n        const challenge = base64UrlEncode(challengeRaw);\r\n        return [challenge, verifier];\r\n    }\r\n    extractRecognizedCustomParameters(tokenResponse) {\r\n        let foundParameters = new Map();\r\n        if (!this.config.customTokenParameters) {\r\n            return foundParameters;\r\n        }\r\n        this.config.customTokenParameters.forEach((recognizedParameter) => {\r\n            if (tokenResponse[recognizedParameter]) {\r\n                foundParameters.set(recognizedParameter, JSON.stringify(tokenResponse[recognizedParameter]));\r\n            }\r\n        });\r\n        return foundParameters;\r\n    }\r\n    /**\r\n     * Revokes the auth token to secure the vulnarability\r\n     * of the token issued allowing the authorization server to clean\r\n     * up any security credentials associated with the authorization\r\n     */\r\n    revokeTokenAndLogout(customParameters = {}, ignoreCorsIssues = false) {\r\n        let revokeEndpoint = this.revocationEndpoint;\r\n        let accessToken = this.getAccessToken();\r\n        let refreshToken = this.getRefreshToken();\r\n        if (!accessToken) {\r\n            return Promise.resolve();\r\n        }\r\n        let params = new HttpParams({ encoder: new WebHttpUrlEncodingCodec() });\r\n        let headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\r\n        if (this.useHttpBasicAuth) {\r\n            const header = btoa(`${this.clientId}:${this.dummyClientSecret}`);\r\n            headers = headers.set('Authorization', 'Basic ' + header);\r\n        }\r\n        if (!this.useHttpBasicAuth) {\r\n            params = params.set('client_id', this.clientId);\r\n        }\r\n        if (!this.useHttpBasicAuth && this.dummyClientSecret) {\r\n            params = params.set('client_secret', this.dummyClientSecret);\r\n        }\r\n        if (this.customQueryParams) {\r\n            for (const key of Object.getOwnPropertyNames(this.customQueryParams)) {\r\n                params = params.set(key, this.customQueryParams[key]);\r\n            }\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            let revokeAccessToken;\r\n            let revokeRefreshToken;\r\n            if (accessToken) {\r\n                let revokationParams = params\r\n                    .set('token', accessToken)\r\n                    .set('token_type_hint', 'access_token');\r\n                revokeAccessToken = this.http.post(revokeEndpoint, revokationParams, { headers });\r\n            }\r\n            else {\r\n                revokeAccessToken = of(null);\r\n            }\r\n            if (refreshToken) {\r\n                let revokationParams = params\r\n                    .set('token', refreshToken)\r\n                    .set('token_type_hint', 'refresh_token');\r\n                revokeRefreshToken = this.http.post(revokeEndpoint, revokationParams, { headers });\r\n            }\r\n            else {\r\n                revokeRefreshToken = of(null);\r\n            }\r\n            if (ignoreCorsIssues) {\r\n                revokeAccessToken = revokeAccessToken.pipe(catchError((err) => {\r\n                    if (err.status === 0) {\r\n                        return of(null);\r\n                    }\r\n                    return throwError(err);\r\n                }));\r\n                revokeRefreshToken = revokeRefreshToken.pipe(catchError((err) => {\r\n                    if (err.status === 0) {\r\n                        return of(null);\r\n                    }\r\n                    return throwError(err);\r\n                }));\r\n            }\r\n            combineLatest([revokeAccessToken, revokeRefreshToken]).subscribe((res) => {\r\n                this.logOut(customParameters);\r\n                resolve(res);\r\n                this.logger.info('Token successfully revoked');\r\n            }, (err) => {\r\n                this.logger.error('Error revoking token', err);\r\n                this.eventsSubject.next(new OAuthErrorEvent('token_revoke_error', err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Clear location.hash if it's present\r\n     */\r\n    clearLocationHash() {\r\n        // Checking for empty hash is necessary for Firefox\r\n        // as setting an empty hash to an empty string adds # to the URL\r\n        if (location.hash != '') {\r\n            location.hash = '';\r\n        }\r\n    }\r\n}\r\nOAuthService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthService, deps: [{ token: i0.NgZone }, { token: i1.HttpClient }, { token: OAuthStorage, optional: true }, { token: ValidationHandler, optional: true }, { token: AuthConfig, optional: true }, { token: UrlHelperService }, { token: OAuthLogger }, { token: HashHandler, optional: true }, { token: DOCUMENT }, { token: DateTimeProvider }], target: i0.ɵɵFactoryTarget.Injectable });\r\nOAuthService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthService });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthService, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.HttpClient }, { type: OAuthStorage, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: ValidationHandler, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: AuthConfig, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: UrlHelperService }, { type: OAuthLogger }, { type: HashHandler, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }, { type: DateTimeProvider }]; } });\n\nclass OAuthResourceServerErrorHandler {\r\n}\r\nclass OAuthNoopResourceServerErrorHandler {\r\n    handleError(err) {\r\n        return throwError(err);\r\n    }\r\n}\n\nclass DefaultOAuthInterceptor {\r\n    constructor(oAuthService, errorHandler, moduleConfig) {\r\n        this.oAuthService = oAuthService;\r\n        this.errorHandler = errorHandler;\r\n        this.moduleConfig = moduleConfig;\r\n    }\r\n    checkUrl(url) {\r\n        if (this.moduleConfig.resourceServer.customUrlValidation) {\r\n            return this.moduleConfig.resourceServer.customUrlValidation(url);\r\n        }\r\n        if (this.moduleConfig.resourceServer.allowedUrls) {\r\n            return !!this.moduleConfig.resourceServer.allowedUrls.find((u) => url.toLowerCase().startsWith(u.toLowerCase()));\r\n        }\r\n        return true;\r\n    }\r\n    intercept(req, next) {\r\n        const url = req.url.toLowerCase();\r\n        if (!this.moduleConfig ||\r\n            !this.moduleConfig.resourceServer ||\r\n            !this.checkUrl(url)) {\r\n            return next.handle(req);\r\n        }\r\n        const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\r\n        if (!sendAccessToken) {\r\n            return next\r\n                .handle(req)\r\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\r\n        }\r\n        return merge(of(this.oAuthService.getAccessToken()).pipe(filter((token) => !!token)), this.oAuthService.events.pipe(filter((e) => e.type === 'token_received'), timeout(this.oAuthService.waitForTokenInMsec || 0), catchError((_) => of(null)), // timeout is not an error\r\n        map((_) => this.oAuthService.getAccessToken()))).pipe(take(1), mergeMap((token) => {\r\n            if (token) {\r\n                const header = 'Bearer ' + token;\r\n                const headers = req.headers.set('Authorization', header);\r\n                req = req.clone({ headers });\r\n            }\r\n            return next\r\n                .handle(req)\r\n                .pipe(catchError((err) => this.errorHandler.handleError(err)));\r\n        }));\r\n    }\r\n}\r\nDefaultOAuthInterceptor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DefaultOAuthInterceptor, deps: [{ token: OAuthService }, { token: OAuthResourceServerErrorHandler }, { token: OAuthModuleConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nDefaultOAuthInterceptor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DefaultOAuthInterceptor });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: DefaultOAuthInterceptor, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: OAuthService }, { type: OAuthResourceServerErrorHandler }, { type: OAuthModuleConfig, decorators: [{\r\n                    type: Optional\r\n                }] }]; } });\n\nfunction createDefaultLogger() {\r\n    return console;\r\n}\r\nfunction createDefaultStorage() {\r\n    return typeof sessionStorage !== 'undefined'\r\n        ? sessionStorage\r\n        : new MemoryStorage();\r\n}\n\nfunction provideOAuthClient(config = null, validationHandlerClass = NullValidationHandler) {\r\n    return makeEnvironmentProviders([\r\n        OAuthService,\r\n        UrlHelperService,\r\n        { provide: OAuthLogger, useFactory: createDefaultLogger },\r\n        { provide: OAuthStorage, useFactory: createDefaultStorage },\r\n        { provide: ValidationHandler, useClass: validationHandlerClass },\r\n        { provide: HashHandler, useClass: DefaultHashHandler },\r\n        {\r\n            provide: OAuthResourceServerErrorHandler,\r\n            useClass: OAuthNoopResourceServerErrorHandler,\r\n        },\r\n        { provide: OAuthModuleConfig, useValue: config },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: DefaultOAuthInterceptor,\r\n            multi: true,\r\n        },\r\n        { provide: DateTimeProvider, useClass: SystemDateTimeProvider },\r\n    ]);\r\n}\n\nclass OAuthModule {\r\n    static forRoot(config = null, validationHandlerClass = NullValidationHandler) {\r\n        return {\r\n            ngModule: OAuthModule,\r\n            providers: [provideOAuthClient(config, validationHandlerClass)],\r\n        };\r\n    }\r\n}\r\nOAuthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nOAuthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthModule, imports: [CommonModule] });\r\nOAuthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthModule, imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: OAuthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule],\r\n                    declarations: [],\r\n                    exports: [],\r\n                }]\r\n        }] });\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\r\n/**\r\n * This is just a dummy of the JwksValidationHandler\r\n * telling the users that the real one has been moved\r\n * to an library of its own, namely angular-oauth2-oidc-utils\r\n */\r\nclass JwksValidationHandler extends NullValidationHandler {\r\n    constructor() {\r\n        super();\r\n        console.error(err);\r\n    }\r\n}\n\nconst AUTH_CONFIG = new InjectionToken('AUTH_CONFIG');\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AUTH_CONFIG, AbstractValidationHandler, AuthConfig, DateTimeProvider, DefaultHashHandler, DefaultOAuthInterceptor, HashHandler, JwksValidationHandler, LoginOptions, MemoryStorage, NullValidationHandler, OAuthErrorEvent, OAuthEvent, OAuthInfoEvent, OAuthLogger, OAuthModule, OAuthModuleConfig, OAuthNoopResourceServerErrorHandler, OAuthResourceServerConfig, OAuthResourceServerErrorHandler, OAuthService, OAuthStorage, OAuthSuccessEvent, ReceivedTokens, SystemDateTimeProvider, UrlHelperService, ValidationHandler, provideOAuthClient };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}