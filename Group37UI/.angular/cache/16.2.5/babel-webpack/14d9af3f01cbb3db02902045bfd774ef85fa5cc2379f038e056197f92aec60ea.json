{"ast":null,"code":"import axios from 'axios';\nimport { STORE_USER_IN_DATABSE } from 'src/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Auth/auth.service\";\nexport class UserService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  checkUserPurposeOfVisit(purpose) {\n    this.persistUser(purpose);\n  }\n  persistUser(purpose) {\n    const requestData = {\n      name: this.authService.userInfo.info.name,\n      email: this.authService.userInfo.info.email,\n      purpose: purpose\n    };\n    axios.get(STORE_USER_IN_DATABSE, {\n      params: requestData\n    }).then(response => {\n      console.log(\"response\", response);\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["axios","STORE_USER_IN_DATABSE","UserService","constructor","authService","checkUserPurposeOfVisit","purpose","persistUser","requestData","name","userInfo","info","email","get","params","then","response","console","log","catch","error","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Utkarsh-PC\\Desktop\\Group37UI\\Group37UI\\src\\app\\services\\User\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService, User } from '../Auth/auth.service';\nimport axios from 'axios';\nimport { STORE_USER_IN_DATABSE } from 'src/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(public authService:AuthService) { }\n\n  checkUserPurposeOfVisit(purpose:string){\n    this.persistUser(purpose);\n  }\n\n  persistUser(purpose:string){\n    const requestData = {\n      name: this.authService.userInfo.info.name as string,\n      email: this.authService.userInfo.info.email as string,\n      purpose:purpose\n    };\n    axios.get(STORE_USER_IN_DATABSE, {\n      params: requestData,\n    })\n    .then((response) => {\n      console.log(\"response\",response);\n    })\n    .catch((error) => {\n      console.log(\"error\",error);\n    });\n  }\n\n}\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,iBAAiB;;;AAKvD,OAAM,MAAOC,WAAW;EAEtBC,YAAmBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE9CC,uBAAuBA,CAACC,OAAc;IACpC,IAAI,CAACC,WAAW,CAACD,OAAO,CAAC;EAC3B;EAEAC,WAAWA,CAACD,OAAc;IACxB,MAAME,WAAW,GAAG;MAClBC,IAAI,EAAE,IAAI,CAACL,WAAW,CAACM,QAAQ,CAACC,IAAI,CAACF,IAAc;MACnDG,KAAK,EAAE,IAAI,CAACR,WAAW,CAACM,QAAQ,CAACC,IAAI,CAACC,KAAe;MACrDN,OAAO,EAACA;KACT;IACDN,KAAK,CAACa,GAAG,CAACZ,qBAAqB,EAAE;MAC/Ba,MAAM,EAAEN;KACT,CAAC,CACDO,IAAI,CAAEC,QAAQ,IAAI;MACjBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;IAClC,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAI;MACfH,OAAO,CAACC,GAAG,CAAC,OAAO,EAACE,KAAK,CAAC;IAC5B,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAvBUnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}